18:02:51,187 INFO  [org.jboss.modules] (main) JBoss Modules version 1.2.0.Final-redhat-1
18:02:51,322 INFO  [org.jboss.msc] (main) JBoss MSC version 1.0.4.GA-redhat-1
18:02:51,375 INFO  [org.jboss.as] (MSC service thread 1-7) JBAS015899: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) starting
18:02:51,383 DEBUG [org.jboss.as.config] (MSC service thread 1-7) Configured system properties:
	[Standalone] = 
	awt.toolkit = sun.awt.X11.XToolkit
	file.encoding = UTF-8
	file.encoding.pkg = sun.io
	file.separator = /
	java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
	java.awt.headless = true
	java.awt.printerjob = sun.print.PSPrinterJob
	java.class.path = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/jboss-modules.jar
	java.class.version = 51.0
	java.endorsed.dirs = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/endorsed
	java.ext.dirs = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/ext:/usr/java/packages/lib/ext
	java.home = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre
	java.io.tmpdir = /tmp
	java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
	java.net.preferIPv4Stack = true
	java.runtime.name = OpenJDK Runtime Environment
	java.runtime.version = 1.7.0_25-mockbuild_2013_08_20_17_46-b00
	java.specification.name = Java Platform API Specification
	java.specification.vendor = Oracle Corporation
	java.specification.version = 1.7
	java.util.logging.manager = org.jboss.logmanager.LogManager
	java.vendor = Oracle Corporation
	java.vendor.url = http://java.oracle.com/
	java.vendor.url.bug = http://bugreport.sun.com/bugreport/
	java.version = 1.7.0_25
	java.vm.info = mixed mode
	java.vm.name = OpenJDK 64-Bit Server VM
	java.vm.specification.name = Java Virtual Machine Specification
	java.vm.specification.vendor = Oracle Corporation
	java.vm.specification.version = 1.7
	java.vm.vendor = Oracle Corporation
	java.vm.version = 23.7-b01
	javax.management.builder.initial = org.jboss.as.jmx.PluggableMBeanServerBuilder
	javax.xml.datatype.DatatypeFactory = __redirected.__DatatypeFactory
	javax.xml.parsers.DocumentBuilderFactory = __redirected.__DocumentBuilderFactory
	javax.xml.parsers.SAXParserFactory = __redirected.__SAXParserFactory
	javax.xml.stream.XMLEventFactory = __redirected.__XMLEventFactory
	javax.xml.stream.XMLInputFactory = __redirected.__XMLInputFactory
	javax.xml.stream.XMLOutputFactory = __redirected.__XMLOutputFactory
	javax.xml.transform.TransformerFactory = __redirected.__TransformerFactory
	javax.xml.validation.SchemaFactory:http://www.w3.org/2001/XMLSchema = __redirected.__SchemaFactory
	javax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom = __redirected.__XPathFactory
	jboss.home.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1
	jboss.host.name = localhost
	jboss.modules.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules
	jboss.modules.system.pkgs = org.jboss.byteman
	jboss.node.name = localhost
	jboss.qualified.host.name = localhost
	jboss.server.base.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone
	jboss.server.config.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration
	jboss.server.data.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data
	jboss.server.deploy.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content
	jboss.server.log.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log
	jboss.server.name = localhost
	jboss.server.persist.config = true
	jboss.server.temp.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp
	line.separator = 

	logging.configuration = file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration/logging.properties
	module.path = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules
	org.jboss.boot.log.file = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log/server.log
	org.jboss.resolver.warning = true
	org.xml.sax.driver = __redirected.__XMLReaderFactory
	os.arch = amd64
	os.name = Linux
	os.version = 3.10.9-200.fc19.x86_64
	path.separator = :
	sun.arch.data.model = 64
	sun.boot.class.path = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/netx.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/plugin.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/classes
	sun.boot.library.path = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/amd64
	sun.cpu.endian = little
	sun.cpu.isalist = 
	sun.io.unicode.encoding = UnicodeLittle
	sun.java.command = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/jboss-modules.jar -mp /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -Djboss.home.dir=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1 -Djboss.server.base.dir=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone -c standalone.xml
	sun.java.launcher = SUN_STANDARD
	sun.jnu.encoding = UTF-8
	sun.management.compiler = HotSpot 64-Bit Tiered Compilers
	sun.os.patch.level = unknown
	user.country = US
	user.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/bin
	user.home = /home/kpeeples
	user.language = en
	user.name = kpeeples
	user.timezone = America/New_York
18:02:51,386 DEBUG [org.jboss.as.config] (MSC service thread 1-7) VM Arguments: -D[Standalone] -XX:+UseCompressedOops -Xms1303m -Xmx1303m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -Dorg.jboss.boot.log.file=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log/server.log -Dlogging.configuration=file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration/logging.properties 
18:02:52,215 INFO  [org.jboss.as.repository] (ServerService Thread Pool -- 25) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/f1/ec5d7dda915cec861800de5c3f42e409273226/content
18:02:52,256 INFO  [org.jboss.as.repository] (ServerService Thread Pool -- 26) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/3a/5d965391d878510fac13fc4868760a431e0d95/content
18:02:52,298 INFO  [org.jboss.as.repository] (ServerService Thread Pool -- 26) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/0c/6820bec960ccd39ac301b9ec8880f3f79aa828/content
18:02:52,310 INFO  [org.xnio] (MSC service thread 1-8) XNIO Version 3.0.7.GA-redhat-1
18:02:52,315 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS015888: Creating http management service using socket-binding (management-http)
18:02:52,316 INFO  [org.xnio.nio] (MSC service thread 1-8) XNIO NIO Implementation Version 3.0.7.GA-redhat-1
18:02:52,322 INFO  [org.jboss.remoting] (MSC service thread 1-8) JBoss Remoting version 3.2.16.GA-redhat-1
18:02:52,365 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 31) JBAS010280: Activating Infinispan subsystem.
18:02:52,376 INFO  [org.jboss.as.naming] (ServerService Thread Pool -- 39) JBAS011800: Activating Naming Subsystem
18:02:52,384 INFO  [org.jboss.as.security] (ServerService Thread Pool -- 44) JBAS013171: Activating Security Subsystem
18:02:52,390 INFO  [org.jboss.as.jsf] (ServerService Thread Pool -- 37) JBAS012605: Activated the following JSF Implementations: [main, 1.2]
18:02:52,424 INFO  [org.jboss.as.connector.logging] (MSC service thread 1-3) JBAS010408: Starting JCA Subsystem (IronJacamar 1.0.17.Final-redhat-1)
18:02:52,438 INFO  [org.jboss.as.security] (MSC service thread 1-5) JBAS013170: Current PicketBox version=4.0.17.Final-redhat-1
18:02:52,441 INFO  [org.jboss.as.webservices] (ServerService Thread Pool -- 48) JBAS015537: Activating WebServices Extension
18:02:52,522 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010403: Deploying JDBC-compliant driver class org.h2.Driver (version 1.3)
18:02:52,522 INFO  [org.jboss.as.naming] (MSC service thread 1-4) JBAS011802: Starting Naming Service
18:02:52,524 INFO  [org.jboss.as.mail.extension] (MSC service thread 1-1) JBAS015400: Bound mail session [java:jboss/mail/Default]
18:02:52,557 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.teiid.jdbc.TeiidDriver (version 8.4)
18:02:52,558 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.teiid.jdbc.TeiidDriver (version 8.4)
18:02:52,619 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.modeshape.jdbc.LocalJcrDriver (version 3.3)
18:02:52,766 INFO  [org.jboss.ws.common.management] (MSC service thread 1-2) JBWS022052: Starting JBoss Web Services - Stack CXF Server 4.1.3.Final-redhat-3
18:02:52,814 INFO  [org.apache.coyote.http11] (MSC service thread 1-7) JBWEB003001: Coyote HTTP/1.1 initializing on : http-/127.0.0.1:8080
18:02:52,856 INFO  [org.apache.coyote.http11] (MSC service thread 1-7) JBWEB003000: Coyote HTTP/1.1 starting on: http-/127.0.0.1:8080
18:02:53,067 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
18:02:53,068 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-5) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
18:02:53,067 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
18:02:53,069 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
18:02:53,069 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-4) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
18:02:53,069 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
18:02:53,069 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-6) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
18:02:53,106 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
18:02:53,119 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
18:02:53,121 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-6) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
18:02:53,128 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-6) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
18:02:53,129 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
18:02:53,130 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-3) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
18:02:53,133 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-3) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
18:02:53,131 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
18:02:53,134 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
18:02:53,134 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-3) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
18:02:53,140 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
18:02:53,137 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
18:02:53,146 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
18:02:53,146 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-3) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
18:02:53,147 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010400: Bound data source [java:/datasources/ModeShapeDS]
18:02:53,147 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) JBAS010400: Bound data source [java:jboss/datasources/DashboardDS]
18:02:53,148 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-7) JBAS010400: Bound data source [java:jboss/datasources/ExampleDS]
18:02:53,210 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "odata" with security-domain set to teiid-security
18:02:53,227 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "jdbc" with security-domain set to teiid-security
18:02:53,241 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "odbc" with security-domain set to teiid-security
18:02:53,400 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "jdbc-simple" added.
18:02:53,416 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "jdbc-ansi" added.
18:02:53,462 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "access" added.
18:02:53,464 INFO  [org.infinispan.factories.GlobalComponentRegistry] (ServerService Thread Pool -- 54) ISPN000128: Infinispan version: Infinispan 'Delirium' 5.2.6.Final
18:02:53,512 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 52) ISPN000161: Using a batchMode transaction manager
18:02:53,513 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 54) ISPN000161: Using a batchMode transaction manager
18:02:53,515 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 53) ISPN000161: Using a batchMode transaction manager
18:02:53,561 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "db2" added.
18:02:53,638 INFO  [org.modeshape.jcr.JcrRepository] (MSC service thread 1-2) ModeShape version 3.3.1.GA-redhat-1
18:02:53,679 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "derby" added.
18:02:53,705 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 53) ISPN000031: MBeans were successfully registered to the platform MBean server.
18:02:53,705 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 52) ISPN000031: MBeans were successfully registered to the platform MBean server.
18:02:53,707 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 54) ISPN000031: MBeans were successfully registered to the platform MBean server.
18:02:53,709 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 54) JBAS010281: Started preparedplan cache from teiid-cache container
18:02:53,711 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 53) JBAS010281: Started resultset cache from teiid-cache container
18:02:53,712 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 52) JBAS010281: Started resultset-repl cache from teiid-cache container
18:02:53,774 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "h2" added.
18:02:53,840 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50001 Teiid Engine 8.4.1-redhat-1 Started = Tue Sep 03 18:02:53 EDT 2013
18:02:53,846 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50038 Teiid Embedded transport enabled. Bound to: teiid/queryengine/odata
18:02:53,846 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50038 Teiid Embedded transport enabled. Bound to: teiid/queryengine/embedded
18:02:53,858 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "hsql" added.
18:02:53,904 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50012 Teiid JDBC - Name = jdbc, Host = localhost.localdomain,  Port = 31000, SSL = OFF, security-domains = [teiid-security]
18:02:53,904 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50037 Teiid ODBC - Name = odbc, Host = localhost.localdomain,  Port = 35432, SSL = OFF, security-domains = [teiid-security]
18:02:53,930 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "informix" added.
18:02:54,015 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "metamatrix" added.
18:02:54,095 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mysql" added.
18:02:54,161 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mysql5" added.
18:02:54,231 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "oracle" added.
18:02:54,334 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "postgresql" added.
18:02:54,359 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "sqlserver" added.
18:02:54,383 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "sybase" added.
18:02:54,420 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "teiid" added.
18:02:54,455 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "teradata" added.
18:02:54,464 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "modeshape" added.
18:02:54,470 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ingres" added.
18:02:54,477 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ingres93" added.
18:02:54,484 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "intersystems-cache" added.
18:02:54,494 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "netezza" added.
18:02:54,500 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "file" added.
18:02:54,505 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ldap" added.
18:02:54,510 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "loopback" added.
18:02:54,513 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "olap" added.
18:02:54,519 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ws" added.
18:02:54,523 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "salesforce" added.
18:02:54,526 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "hive" added.
18:02:54,529 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "infinispan-cache" added.
18:02:54,531 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "map-cache" added.
18:02:54,535 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "google-spreadsheet" added.
18:02:54,545 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "odata" added.
18:02:54,551 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mongodb" added.
18:02:54,574 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "modeshape-webdav.war" (runtime-name: "modeshape-webdav.war")
18:02:54,574 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "modeshape-rest.war" (runtime-name: "modeshape-rest.war")
18:02:54,574 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" (runtime-name: "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war")
18:02:54,576 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "teiid-odata-8.4.1-redhat-1.war" (runtime-name: "teiid-odata-8.4.1-redhat-1.war")
18:02:54,589 INFO  [org.jboss.as.server.deployment.scanner] (MSC service thread 1-6) JBAS015012: Started FileSystemDeploymentService for directory /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/deployments
18:02:54,596 INFO  [org.jboss.as.remoting] (MSC service thread 1-4) JBAS017100: Listening on 127.0.0.1:4447
18:02:54,594 INFO  [org.jboss.as.remoting] (MSC service thread 1-7) JBAS017100: Listening on 127.0.0.1:9999
18:02:54,888 INFO  [org.jboss.web] (ServerService Thread Pool -- 53) JBAS018210: Register web context: /modeshape-webdav
18:02:54,896 INFO  [org.jboss.web] (ServerService Thread Pool -- 54) JBAS018210: Register web context: /modeshape-rest
18:02:54,903 INFO  [org.jboss.web] (ServerService Thread Pool -- 52) JBAS018210: Register web context: /odata
18:02:55,117 INFO  [org.hibernate.validator.internal.util.Version] (ServerService Thread Pool -- 54) HV000001: Hibernate Validator 4.3.1.Final-redhat-1
18:02:55,210 INFO  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 54) Deploying javax.ws.rs.core.Application: class org.modeshape.web.jcr.rest.JcrApplication
18:02:55,217 WARN  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 54) Application.getClasses() returned unknown class type: org.modeshape.web.jcr.rest.form.FileUploadForm
18:02:55,221 INFO  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 52) Deploying javax.ws.rs.core.Application: class org.teiid.odata.TeiidODataApplication
18:02:55,793 WARN  [org.jboss.as.dependency.unsupported] (MSC service thread 1-7) JBAS018568: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using an unsupported module ("org.jdom:main") which may be changed or removed in future versions without notice.
18:02:55,794 WARN  [org.jboss.as.dependency.unsupported] (MSC service thread 1-7) JBAS018568: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using an unsupported module ("org.jdom:main") which may be changed or removed in future versions without notice.
18:02:55,794 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.lang:main") which may be changed or removed in future versions without notice.
18:02:55,794 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.lang:main") which may be changed or removed in future versions without notice.
18:02:55,795 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.io:main") which may be changed or removed in future versions without notice.
18:02:55,795 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.io:main") which may be changed or removed in future versions without notice.
18:02:55,795 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.collections:main") which may be changed or removed in future versions without notice.
18:02:55,795 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.collections:main") which may be changed or removed in future versions without notice.
18:02:55,795 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.codec:main") which may be changed or removed in future versions without notice.
18:02:55,796 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.codec:main") which may be changed or removed in future versions without notice.
18:02:55,796 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.jboss.ironjacamar.jdbcadapters:main") which may be changed or removed in future versions without notice.
18:02:55,796 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-7) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.jboss.ironjacamar.jdbcadapters:main") which may be changed or removed in future versions without notice.
18:02:55,849 INFO  [org.jboss.weld.deployer] (MSC service thread 1-6) JBAS016002: Processing weld deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
18:02:55,921 INFO  [org.jboss.weld.deployer] (MSC service thread 1-2) JBAS016005: Starting Services for CDI deployment: teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
18:02:55,968 INFO  [org.jboss.weld.Version] (MSC service thread 1-2) WELD-000900 1.1.13 (redhat)
18:02:55,994 INFO  [org.jboss.weld.deployer] (MSC service thread 1-4) JBAS016008: Starting weld service for deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
18:02:57,497 INFO  [org.jboss.web] (ServerService Thread Pool -- 58) JBAS018210: Register web context: /dashbuilder
18:02:57,534 INFO  [org.jboss.dashboard.ui.controller.ControllerServlet] (ServerService Thread Pool -- 58) Application Directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/.
18:02:57,535 INFO  [org.jboss.dashboard.ui.controller.ControllerServlet] (ServerService Thread Pool -- 58) Application Config Directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc
18:02:57,553 INFO  [org.jboss.dashboard.factory.Factory] (ServerService Thread Pool -- 58) Configuring Factory from directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/factory
18:02:57,613 INFO  [org.jboss.dashboard.factory.Factory] (ServerService Thread Pool -- 58) Factory configured.
18:02:57,757 INFO  [org.hibernate.annotations.common.Version] (ServerService Thread Pool -- 58) HCANN000001: Hibernate Commons Annotations {4.0.1.Final-redhat-2}
18:02:57,760 INFO  [org.hibernate.Version] (ServerService Thread Pool -- 58) HHH000412: Hibernate Core {4.2.0.Final-redhat-1}
18:02:57,762 INFO  [org.hibernate.cfg.Environment] (ServerService Thread Pool -- 58) HHH000206: hibernate.properties not found
18:02:57,763 INFO  [org.hibernate.cfg.Environment] (ServerService Thread Pool -- 58) HHH000021: Bytecode provider name : javassist
18:02:57,773 INFO  [org.hibernate.cfg.Configuration] (ServerService Thread Pool -- 58) HHH000042: Configuring from file: hibernate.cfg.xml
18:02:58,318 INFO  [org.hibernate.cfg.Configuration] (ServerService Thread Pool -- 58) HHH000041: Configured SessionFactory: null
18:03:00,714 INFO  [org.jboss.dashboard.database.hibernate.HibernateInitializer] (ServerService Thread Pool -- 58) The underlying database is: h2
18:03:01,121 INFO  [org.hibernate.dialect.Dialect] (ServerService Thread Pool -- 58) HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
18:03:01,125 WARN  [org.hibernate.dialect.H2Dialect] (ServerService Thread Pool -- 58) HHH000431: Unable to determine H2 database version, certain features may not work
18:03:01,135 INFO  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] (ServerService Thread Pool -- 58) HHH000399: Using default transaction strategy (direct JDBC transactions)
18:03:01,141 INFO  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] (ServerService Thread Pool -- 58) HHH000397: Using ASTQueryTranslatorFactory
18:03:01,981 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.LayoutsManagerImpl
18:03:02,033 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Default_Layout
18:03:02,034 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Default_template_with_sliding_menu
18:03:02,035 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_25-50-25
18:03:02,036 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_25-75
18:03:02,037 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_75-25
18:03:02,063 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.SkinsManagerImpl
18:03:02,081 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Skin Default_Skin
18:03:02,085 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Skin Teiid_Skin
18:03:02,095 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Loading panels. Scanning dir: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/WEB-INF/etc/panels
18:03:02,096 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_workspace_horiz.panel
18:03:02,122 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_workspace_vert.panel
18:03:02,123 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_sections_horiz.panel
18:03:02,124 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_workspace.panel
18:03:02,125 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_language_horiz.panel
18:03:02,126 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_sections_vert.panel
18:03:02,127 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/navigator_sections.panel
18:03:02,128 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/logout/logout.panel
18:03:02,129 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/tree/treeMenu.panel
18:03:02,130 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/navigation/breadCrumb/breadCrumb.panel
18:03:02,132 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/dashboard/dashb_html_editor.panel
18:03:02,137 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/dashboard/dashb_kpi.panel
18:03:02,141 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/dashboard/dashb_providermgr.panel
18:03:02,143 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/dashboard/dashb_filter.panel
18:03:02,145 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/system/workspaceExport/workspaceImportexport.panel
18:03:02,147 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/system/dataSourceManagement/DataSourceManager.panel
18:03:02,149 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp2f04ad2528130b24/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8bbcb2adfd3c1460/./WEB-INF/etc/panels/system/dashboardExport/dashb_export.panel
18:03:02,315 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.EnvelopesManagerImpl
18:03:02,327 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Envelope Default_Envelope
18:03:02,329 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Envelope Teiid_Envelope
18:03:02,345 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.ResourceGalleryManagerImpl
18:03:02,388 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 28) JBAS018559: Deployed "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" (runtime-name : "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war")
18:03:02,390 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 50) JBAS018559: Deployed "teiid-odata-8.4.1-redhat-1.war" (runtime-name : "teiid-odata-8.4.1-redhat-1.war")
18:03:02,390 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 51) JBAS018559: Deployed "modeshape-webdav.war" (runtime-name : "modeshape-webdav.war")
18:03:02,390 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 51) JBAS018559: Deployed "modeshape-rest.war" (runtime-name : "modeshape-rest.war")
18:03:02,637 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015961: Http management interface listening on http://127.0.0.1:9990/management
18:03:02,637 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015951: Admin console listening on http://127.0.0.1:9990
18:03:02,638 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015874: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) started in 11732ms - Started 598 of 688 services (87 services are passive or on-demand)
18:25:58,407 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (http-/127.0.0.1:8080-1) Session bvHC0oHWWs7ZKPTw1fITScgd created. 1 active sessions.
18:56:52,934 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (ContainerBackgroundProcessor[StandardEngine[jboss.web]]) Session bvHC0oHWWs7ZKPTw1fITScgd expired. 0 active sessions.
19:18:19,584 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "db2" removed
19:18:19,584 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "ldap" removed
19:18:19,679 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "map-cache" removed
19:18:19,679 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "infinispan-cache" removed
19:18:19,679 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "mysql5" removed
19:18:19,680 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "teradata" removed
19:18:19,679 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "modeshape" removed
19:18:19,682 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "hsql" removed
19:18:19,683 INFO  [org.apache.coyote.http11] (MSC service thread 1-2) JBWEB003075: Coyote HTTP/1.1 pausing on: http-localhost.localdomain/127.0.0.1:8080
19:18:19,685 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "access" removed
19:18:19,685 INFO  [org.apache.coyote.http11] (MSC service thread 1-2) JBWEB003077: Coyote HTTP/1.1 stopping on : http-localhost.localdomain/127.0.0.1:8080
19:18:19,685 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "file" removed
19:18:19,684 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "intersystems-cache" removed
19:18:19,686 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "ingres" removed
19:18:19,684 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50010 Translator "ingres93" removed
19:18:19,687 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "netezza" removed
19:18:19,688 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "metamatrix" removed
19:18:19,688 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "google-spreadsheet" removed
19:18:19,688 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "informix" removed
19:18:19,689 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-5) JBAS010409: Unbound data source [java:jboss/datasources/ExampleDS]
19:18:19,689 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "olap" removed
19:18:19,689 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "ws" removed
19:18:19,689 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "jdbc-ansi" removed
19:18:19,690 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "teiid" removed
19:18:19,690 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "postgresql" removed
19:18:19,683 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50010 Translator "h2" removed
19:18:19,686 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "oracle" removed
19:18:19,690 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "hive" removed
19:18:19,701 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "mysql" removed
19:18:19,701 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "jdbc-simple" removed
19:18:19,701 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50040 Teiid ODBC - Name = localhost.localdomain, Host = 35432,  Port = {2} has been shutdown.
19:18:19,702 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "salesforce" removed
19:18:19,703 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "loopback" removed
19:18:19,703 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-6) JBAS010409: Unbound data source [java:/datasources/ModeShapeDS]
19:18:19,691 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50010 Translator "derby" removed
19:18:19,696 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50039 Teiid JDBC - Name = jdbc, Host = localhost.localdomain,  Port = 31000 has been shutdown.
19:18:19,691 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "mongodb" removed
19:18:19,691 INFO  [org.apache.catalina.core] (MSC service thread 1-5) JBWEB001079: Container org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/] has not been started
19:18:19,691 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "odata" removed
19:18:19,724 INFO  [org.jboss.web] (ServerService Thread Pool -- 66) JBAS018224: Unregister web context: /modeshape-webdav
19:18:19,721 INFO  [org.jboss.web] (ServerService Thread Pool -- 67) JBAS018224: Unregister web context: /modeshape-rest
19:18:19,717 INFO  [org.jboss.web] (ServerService Thread Pool -- 65) JBAS018224: Unregister web context: /odata
19:18:19,717 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50010 Translator "sqlserver" removed
19:18:19,709 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "sybase" removed
19:18:19,754 INFO  [org.jboss.web] (ServerService Thread Pool -- 68) JBAS018224: Unregister web context: /dashbuilder
19:18:19,745 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50041 Teiid Embedded transport disabled. Local Connections will fail. UnBound : teiid/queryengine/embedded
19:18:19,745 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50041 Teiid Embedded transport disabled. Local Connections will fail. UnBound : teiid/queryengine/odata
19:18:19,779 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50002 Teiid Engine stopped Tue Sep 03 19:18:19 EDT 2013
19:18:19,781 INFO  [org.jboss.as.clustering.infinispan] (MSC service thread 1-5) JBAS010282: Stopped resultset-repl cache from teiid-cache container
19:18:19,785 INFO  [org.jboss.as.clustering.infinispan] (MSC service thread 1-8) JBAS010282: Stopped resultset cache from teiid-cache container
19:18:19,785 INFO  [org.jboss.as.clustering.infinispan] (MSC service thread 1-6) JBAS010282: Stopped preparedplan cache from teiid-cache container
19:18:19,986 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment modeshape-rest.war (runtime-name: modeshape-rest.war) in 408ms
19:18:19,994 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment modeshape-webdav.war (runtime-name: modeshape-webdav.war) in 315ms
19:18:20,018 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment teiid-odata-8.4.1-redhat-1.war (runtime-name: teiid-odata-8.4.1-redhat-1.war) in 339ms
19:18:20,131 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-3) JBAS010409: Unbound data source [java:jboss/datasources/DashboardDS]
19:18:20,170 INFO  [org.jboss.weld.deployer] (MSC service thread 1-8) JBAS016009: Stopping weld service for deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
19:18:20,358 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war (runtime-name: teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war) in 681ms
19:18:20,401 INFO  [org.jboss.as] (MSC service thread 1-2) JBAS015950: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) stopped in 723ms
19:19:50,592 INFO  [org.jboss.modules] (main) JBoss Modules version 1.2.0.Final-redhat-1
19:19:50,768 INFO  [org.jboss.msc] (main) JBoss MSC version 1.0.4.GA-redhat-1
19:19:50,869 INFO  [org.jboss.as] (MSC service thread 1-8) JBAS015899: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) starting
19:19:50,878 DEBUG [org.jboss.as.config] (MSC service thread 1-8) Configured system properties:
	awt.toolkit = sun.awt.X11.XToolkit
	file.encoding = UTF-8
	file.encoding.pkg = sun.io
	file.separator = /
	java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
	java.awt.headless = true
	java.awt.printerjob = sun.print.PSPrinterJob
	java.class.path = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/jboss-modules.jar
	java.class.version = 51.0
	java.endorsed.dirs = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/endorsed
	java.ext.dirs = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/ext:/usr/java/packages/lib/ext
	java.home = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre
	java.io.tmpdir = /tmp
	java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
	java.net.preferIPv4Stack = true
	java.runtime.name = OpenJDK Runtime Environment
	java.runtime.version = 1.7.0_25-mockbuild_2013_08_20_17_46-b00
	java.specification.name = Java Platform API Specification
	java.specification.vendor = Oracle Corporation
	java.specification.version = 1.7
	java.util.logging.manager = org.jboss.logmanager.LogManager
	java.vendor = Oracle Corporation
	java.vendor.url = http://java.oracle.com/
	java.vendor.url.bug = http://bugreport.sun.com/bugreport/
	java.version = 1.7.0_25
	java.vm.info = mixed mode
	java.vm.name = OpenJDK 64-Bit Server VM
	java.vm.specification.name = Java Virtual Machine Specification
	java.vm.specification.vendor = Oracle Corporation
	java.vm.specification.version = 1.7
	java.vm.vendor = Oracle Corporation
	java.vm.version = 23.7-b01
	javax.management.builder.initial = org.jboss.as.jmx.PluggableMBeanServerBuilder
	javax.xml.datatype.DatatypeFactory = __redirected.__DatatypeFactory
	javax.xml.parsers.DocumentBuilderFactory = __redirected.__DocumentBuilderFactory
	javax.xml.parsers.SAXParserFactory = __redirected.__SAXParserFactory
	javax.xml.stream.XMLEventFactory = __redirected.__XMLEventFactory
	javax.xml.stream.XMLInputFactory = __redirected.__XMLInputFactory
	javax.xml.stream.XMLOutputFactory = __redirected.__XMLOutputFactory
	javax.xml.transform.TransformerFactory = __redirected.__TransformerFactory
	javax.xml.validation.SchemaFactory:http://www.w3.org/2001/XMLSchema = __redirected.__SchemaFactory
	javax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom = __redirected.__XPathFactory
	jboss.bind.address = localhost
	jboss.home.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1
	jboss.host.name = localhost
	jboss.modules.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules
	jboss.modules.system.pkgs = org.jboss.byteman
	jboss.node.name = localhost
	jboss.qualified.host.name = localhost
	jboss.server.base.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone
	jboss.server.config.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration
	jboss.server.data.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data
	jboss.server.deploy.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content
	jboss.server.log.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log
	jboss.server.name = localhost
	jboss.server.persist.config = true
	jboss.server.temp.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp
	line.separator = 

	logging.configuration = file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration/logging.properties
	module.path = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules
	org.jboss.boot.log.file = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log/boot.log
	org.jboss.logmanager.nocolor = true
	org.jboss.resolver.warning = true
	org.xml.sax.driver = __redirected.__XMLReaderFactory
	os.arch = amd64
	os.name = Linux
	os.version = 3.10.9-200.fc19.x86_64
	path.separator = :
	program.name = JBossTools: JBoss EAP 6.1 DV-BI Server
	sun.arch.data.model = 64
	sun.boot.class.path = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/netx.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/plugin.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/classes
	sun.boot.library.path = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/amd64
	sun.cpu.endian = little
	sun.cpu.isalist = 
	sun.io.unicode.encoding = UnicodeLittle
	sun.java.command = org.jboss.modules.Main -mp /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -b localhost --server-config=standalone.xml
	sun.java.launcher = SUN_STANDARD
	sun.jnu.encoding = UTF-8
	sun.management.compiler = HotSpot 64-Bit Tiered Compilers
	sun.os.patch.level = unknown
	sun.rmi.dgc.client.gcInterval = 3600000
	sun.rmi.dgc.server.gcInterval = 3600000
	user.country = US
	user.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/bin
	user.home = /home/kpeeples
	user.language = en
	user.name = kpeeples
	user.timezone = America/New_York
19:19:50,881 DEBUG [org.jboss.as.config] (MSC service thread 1-8) VM Arguments: -Dprogram.name=JBossTools: JBoss EAP 6.1 DV-BI Server -Xms1303m -Xmx1303m -XX:MaxPermSize=256m -Dorg.jboss.resolver.warning=true -Djava.net.preferIPv4Stack=true -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -Dorg.jboss.boot.log.file=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log/boot.log -Dlogging.configuration=file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration/logging.properties -Djboss.home.dir=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1 -Dorg.jboss.logmanager.nocolor=true -Dfile.encoding=UTF-8 
19:19:51,788 INFO  [org.xnio] (MSC service thread 1-5) XNIO Version 3.0.7.GA-redhat-1
19:19:51,790 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS015888: Creating http management service using socket-binding (management-http)
19:19:51,793 INFO  [org.xnio.nio] (MSC service thread 1-5) XNIO NIO Implementation Version 3.0.7.GA-redhat-1
19:19:51,799 INFO  [org.jboss.remoting] (MSC service thread 1-5) JBoss Remoting version 3.2.16.GA-redhat-1
19:19:51,862 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 31) JBAS010280: Activating Infinispan subsystem.
19:19:51,888 INFO  [org.jboss.as.jsf] (ServerService Thread Pool -- 37) JBAS012605: Activated the following JSF Implementations: [main, 1.2]
19:19:51,888 INFO  [org.jboss.as.connector.logging] (MSC service thread 1-2) JBAS010408: Starting JCA Subsystem (IronJacamar 1.0.17.Final-redhat-1)
19:19:51,906 INFO  [org.jboss.as.security] (ServerService Thread Pool -- 44) JBAS013171: Activating Security Subsystem
19:19:51,939 INFO  [org.jboss.as.naming] (ServerService Thread Pool -- 39) JBAS011800: Activating Naming Subsystem
19:19:51,953 INFO  [org.jboss.as.webservices] (ServerService Thread Pool -- 48) JBAS015537: Activating WebServices Extension
19:19:51,980 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010403: Deploying JDBC-compliant driver class org.h2.Driver (version 1.3)
19:19:51,993 INFO  [org.jboss.as.naming] (MSC service thread 1-2) JBAS011802: Starting Naming Service
19:19:51,998 INFO  [org.jboss.as.mail.extension] (MSC service thread 1-7) JBAS015400: Bound mail session [java:jboss/mail/Default]
19:19:51,999 INFO  [org.jboss.as.security] (MSC service thread 1-5) JBAS013170: Current PicketBox version=4.0.17.Final-redhat-1
19:19:52,011 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.teiid.jdbc.TeiidDriver (version 8.4)
19:19:52,013 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.teiid.jdbc.TeiidDriver (version 8.4)
19:19:52,106 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.modeshape.jdbc.LocalJcrDriver (version 3.3)
19:19:52,181 INFO  [org.jboss.ws.common.management] (MSC service thread 1-2) JBWS022052: Starting JBoss Web Services - Stack CXF Server 4.1.3.Final-redhat-3
19:19:52,286 INFO  [org.apache.coyote.http11] (MSC service thread 1-7) JBWEB003001: Coyote HTTP/1.1 initializing on : http-localhost/127.0.0.1:8080
19:19:52,342 INFO  [org.apache.coyote.http11] (MSC service thread 1-7) JBWEB003000: Coyote HTTP/1.1 starting on: http-localhost/127.0.0.1:8080
19:19:52,571 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
19:19:52,570 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-6) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
19:19:52,575 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
19:19:52,575 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-4) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
19:19:52,609 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
19:19:52,609 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "odata" with security-domain set to teiid-security
19:19:52,611 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
19:19:52,616 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:19:52,618 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "jdbc" with security-domain set to teiid-security
19:19:52,619 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "odbc" with security-domain set to teiid-security
19:19:52,625 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-6) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
19:19:52,631 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
19:19:52,634 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-4) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
19:19:52,644 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
19:19:52,645 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
19:19:52,675 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:19:52,682 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-4) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
19:19:52,683 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
19:19:52,683 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-6) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
19:19:52,683 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:19:52,684 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
19:19:52,686 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010400: Bound data source [java:jboss/datasources/ExampleDS]
19:19:52,686 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010400: Bound data source [java:/datasources/ModeShapeDS]
19:19:52,686 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010400: Bound data source [java:jboss/datasources/DashboardDS]
19:19:52,687 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
19:19:52,686 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
19:19:52,694 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
19:19:52,728 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "jdbc-simple" added.
19:19:52,736 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "jdbc-ansi" added.
19:19:52,766 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "access" added.
19:19:52,814 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "db2" added.
19:19:52,838 INFO  [org.infinispan.factories.GlobalComponentRegistry] (ServerService Thread Pool -- 52) ISPN000128: Infinispan version: Infinispan 'Delirium' 5.2.6.Final
19:19:52,893 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 52) ISPN000161: Using a batchMode transaction manager
19:19:52,893 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 53) ISPN000161: Using a batchMode transaction manager
19:19:52,894 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 54) ISPN000161: Using a batchMode transaction manager
19:19:52,900 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "derby" added.
19:19:53,032 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "h2" added.
19:19:53,164 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "hsql" added.
19:19:53,181 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 53) ISPN000031: MBeans were successfully registered to the platform MBean server.
19:19:53,181 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 54) ISPN000031: MBeans were successfully registered to the platform MBean server.
19:19:53,181 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 52) ISPN000031: MBeans were successfully registered to the platform MBean server.
19:19:53,183 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 54) JBAS010281: Started preparedplan cache from teiid-cache container
19:19:53,184 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 53) JBAS010281: Started resultset-repl cache from teiid-cache container
19:19:53,183 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 52) JBAS010281: Started resultset cache from teiid-cache container
19:19:53,242 INFO  [org.modeshape.jcr.JcrRepository] (MSC service thread 1-4) ModeShape version 3.3.1.GA-redhat-1
19:19:53,275 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "informix" added.
19:19:53,383 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50001 Teiid Engine 8.4.1-redhat-1 Started = Tue Sep 03 19:19:53 EDT 2013
19:19:53,389 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50038 Teiid Embedded transport enabled. Bound to: teiid/queryengine/odata
19:19:53,393 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50038 Teiid Embedded transport enabled. Bound to: teiid/queryengine/embedded
19:19:53,443 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50037 Teiid ODBC - Name = odbc, Host = localhost,  Port = 35432, SSL = OFF, security-domains = [teiid-security]
19:19:53,444 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50012 Teiid JDBC - Name = jdbc, Host = localhost,  Port = 31000, SSL = OFF, security-domains = [teiid-security]
19:19:53,451 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "metamatrix" added.
19:19:53,534 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mysql" added.
19:19:53,618 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mysql5" added.
19:19:53,739 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "oracle" added.
19:19:53,884 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "postgresql" added.
19:19:53,955 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "sqlserver" added.
19:19:54,008 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "sybase" added.
19:19:54,052 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "teiid" added.
19:19:54,096 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "teradata" added.
19:19:54,118 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "modeshape" added.
19:19:54,135 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ingres" added.
19:19:54,155 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ingres93" added.
19:19:54,176 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "intersystems-cache" added.
19:19:54,203 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "netezza" added.
19:19:54,209 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "file" added.
19:19:54,214 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ldap" added.
19:19:54,220 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "loopback" added.
19:19:54,224 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "olap" added.
19:19:54,230 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ws" added.
19:19:54,236 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "salesforce" added.
19:19:54,242 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "hive" added.
19:19:54,247 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "infinispan-cache" added.
19:19:54,249 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "map-cache" added.
19:19:54,255 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "google-spreadsheet" added.
19:19:54,267 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "odata" added.
19:19:54,273 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mongodb" added.
19:19:54,290 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "modeshape-webdav.war" (runtime-name: "modeshape-webdav.war")
19:19:54,290 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "modeshape-rest.war" (runtime-name: "modeshape-rest.war")
19:19:54,291 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" (runtime-name: "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war")
19:19:54,291 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "teiid-odata-8.4.1-redhat-1.war" (runtime-name: "teiid-odata-8.4.1-redhat-1.war")
19:19:54,304 INFO  [org.jboss.as.server.deployment.scanner] (MSC service thread 1-4) JBAS015012: Started FileSystemDeploymentService for directory /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/deployments
19:19:54,315 INFO  [org.jboss.as.remoting] (MSC service thread 1-2) JBAS017100: Listening on 127.0.0.1:4447
19:19:54,318 INFO  [org.jboss.as.remoting] (MSC service thread 1-3) JBAS017100: Listening on 127.0.0.1:9999
19:19:54,643 INFO  [org.jboss.web] (ServerService Thread Pool -- 52) JBAS018210: Register web context: /odata
19:19:54,644 INFO  [org.jboss.web] (ServerService Thread Pool -- 54) JBAS018210: Register web context: /modeshape-webdav
19:19:54,644 INFO  [org.jboss.web] (ServerService Thread Pool -- 55) JBAS018210: Register web context: /modeshape-rest
19:19:54,875 INFO  [org.hibernate.validator.internal.util.Version] (ServerService Thread Pool -- 55) HV000001: Hibernate Validator 4.3.1.Final-redhat-1
19:19:55,024 INFO  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 55) Deploying javax.ws.rs.core.Application: class org.modeshape.web.jcr.rest.JcrApplication
19:19:55,027 INFO  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 52) Deploying javax.ws.rs.core.Application: class org.teiid.odata.TeiidODataApplication
19:19:55,028 WARN  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 55) Application.getClasses() returned unknown class type: org.modeshape.web.jcr.rest.form.FileUploadForm
19:19:55,876 WARN  [org.jboss.as.dependency.unsupported] (MSC service thread 1-1) JBAS018568: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using an unsupported module ("org.jdom:main") which may be changed or removed in future versions without notice.
19:19:55,876 WARN  [org.jboss.as.dependency.unsupported] (MSC service thread 1-1) JBAS018568: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using an unsupported module ("org.jdom:main") which may be changed or removed in future versions without notice.
19:19:55,876 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.lang:main") which may be changed or removed in future versions without notice.
19:19:55,877 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.lang:main") which may be changed or removed in future versions without notice.
19:19:55,877 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.io:main") which may be changed or removed in future versions without notice.
19:19:55,877 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.io:main") which may be changed or removed in future versions without notice.
19:19:55,877 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.collections:main") which may be changed or removed in future versions without notice.
19:19:55,877 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.collections:main") which may be changed or removed in future versions without notice.
19:19:55,877 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.codec:main") which may be changed or removed in future versions without notice.
19:19:55,878 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.codec:main") which may be changed or removed in future versions without notice.
19:19:55,878 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.jboss.ironjacamar.jdbcadapters:main") which may be changed or removed in future versions without notice.
19:19:55,878 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-1) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.jboss.ironjacamar.jdbcadapters:main") which may be changed or removed in future versions without notice.
19:19:55,944 INFO  [org.jboss.weld.deployer] (MSC service thread 1-5) JBAS016002: Processing weld deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
19:19:56,007 INFO  [org.jboss.weld.deployer] (MSC service thread 1-8) JBAS016005: Starting Services for CDI deployment: teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
19:19:56,051 INFO  [org.jboss.weld.Version] (MSC service thread 1-8) WELD-000900 1.1.13 (redhat)
19:19:56,079 INFO  [org.jboss.weld.deployer] (MSC service thread 1-2) JBAS016008: Starting weld service for deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
19:19:57,659 INFO  [org.jboss.web] (ServerService Thread Pool -- 58) JBAS018210: Register web context: /dashbuilder
19:19:57,686 INFO  [org.jboss.dashboard.ui.controller.ControllerServlet] (ServerService Thread Pool -- 58) Application Directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/.
19:19:57,687 INFO  [org.jboss.dashboard.ui.controller.ControllerServlet] (ServerService Thread Pool -- 58) Application Config Directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc
19:19:57,708 INFO  [org.jboss.dashboard.factory.Factory] (ServerService Thread Pool -- 58) Configuring Factory from directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/factory
19:19:57,809 INFO  [org.jboss.dashboard.factory.Factory] (ServerService Thread Pool -- 58) Factory configured.
19:19:57,947 INFO  [org.hibernate.annotations.common.Version] (ServerService Thread Pool -- 58) HCANN000001: Hibernate Commons Annotations {4.0.1.Final-redhat-2}
19:19:57,951 INFO  [org.hibernate.Version] (ServerService Thread Pool -- 58) HHH000412: Hibernate Core {4.2.0.Final-redhat-1}
19:19:57,952 INFO  [org.hibernate.cfg.Environment] (ServerService Thread Pool -- 58) HHH000206: hibernate.properties not found
19:19:57,954 INFO  [org.hibernate.cfg.Environment] (ServerService Thread Pool -- 58) HHH000021: Bytecode provider name : javassist
19:19:57,965 INFO  [org.hibernate.cfg.Configuration] (ServerService Thread Pool -- 58) HHH000042: Configuring from file: hibernate.cfg.xml
19:19:58,399 INFO  [org.hibernate.cfg.Configuration] (ServerService Thread Pool -- 58) HHH000041: Configured SessionFactory: null
19:20:00,800 INFO  [org.jboss.dashboard.database.hibernate.HibernateInitializer] (ServerService Thread Pool -- 58) The underlying database is: h2
19:20:01,241 INFO  [org.hibernate.dialect.Dialect] (ServerService Thread Pool -- 58) HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
19:20:01,245 WARN  [org.hibernate.dialect.H2Dialect] (ServerService Thread Pool -- 58) HHH000431: Unable to determine H2 database version, certain features may not work
19:20:01,254 INFO  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] (ServerService Thread Pool -- 58) HHH000399: Using default transaction strategy (direct JDBC transactions)
19:20:01,257 INFO  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] (ServerService Thread Pool -- 58) HHH000397: Using ASTQueryTranslatorFactory
19:20:02,111 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.LayoutsManagerImpl
19:20:02,155 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Default_Layout
19:20:02,157 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Default_template_with_sliding_menu
19:20:02,157 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_25-50-25
19:20:02,158 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_25-75
19:20:02,159 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_75-25
19:20:02,181 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.SkinsManagerImpl
19:20:02,193 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Skin Default_Skin
19:20:02,195 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Skin Teiid_Skin
19:20:02,206 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Loading panels. Scanning dir: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/WEB-INF/etc/panels
19:20:02,207 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_workspace_horiz.panel
19:20:02,228 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_workspace_vert.panel
19:20:02,229 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_sections_horiz.panel
19:20:02,230 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_workspace.panel
19:20:02,231 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_language_horiz.panel
19:20:02,231 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_sections_vert.panel
19:20:02,232 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/navigator_sections.panel
19:20:02,233 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/logout/logout.panel
19:20:02,234 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/tree/treeMenu.panel
19:20:02,235 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/navigation/breadCrumb/breadCrumb.panel
19:20:02,237 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/dashboard/dashb_html_editor.panel
19:20:02,238 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/dashboard/dashb_kpi.panel
19:20:02,241 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/dashboard/dashb_providermgr.panel
19:20:02,242 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/dashboard/dashb_filter.panel
19:20:02,244 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/system/workspaceExport/workspaceImportexport.panel
19:20:02,245 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/system/dataSourceManagement/DataSourceManager.panel
19:20:02,247 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/tempfaae16357485740e/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-30eda1af58fef77b/./WEB-INF/etc/panels/system/dashboardExport/dashb_export.panel
19:20:02,471 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.EnvelopesManagerImpl
19:20:02,482 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Envelope Default_Envelope
19:20:02,483 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Envelope Teiid_Envelope
19:20:02,495 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.ResourceGalleryManagerImpl
19:20:02,530 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 28) JBAS018559: Deployed "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" (runtime-name : "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war")
19:20:02,531 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 50) JBAS018559: Deployed "teiid-odata-8.4.1-redhat-1.war" (runtime-name : "teiid-odata-8.4.1-redhat-1.war")
19:20:02,531 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 51) JBAS018559: Deployed "modeshape-webdav.war" (runtime-name : "modeshape-webdav.war")
19:20:02,532 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 51) JBAS018559: Deployed "modeshape-rest.war" (runtime-name : "modeshape-rest.war")
19:20:02,636 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015961: Http management interface listening on http://127.0.0.1:9990/management
19:20:02,636 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015951: Admin console listening on http://127.0.0.1:9990
19:20:02,637 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015874: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) started in 12350ms - Started 598 of 688 services (87 services are passive or on-demand)
19:32:54,558 INFO  [org.jboss.as.repository] (management-handler-thread - 6) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:32:54,559 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:32:54,787 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB ping.1 model "Foo" metadata is currently being loaded. Start Time: 9/3/13 7:32 PM
19:32:54,789 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB ping.1 model "Foo" metadata loaded. End Time: 9/3/13 7:32 PM
19:32:54,792 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB ping.1 is set to ACTIVE
19:32:54,901 INFO  [org.jboss.as.server] (management-handler-thread - 6) JBAS018559: Deployed "ping-vdb.xml" (runtime-name : "ping-vdb.xml")
19:32:55,143 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "ping.1[Foo{s=s, loopback, null}]" undeployed.
19:32:55,147 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment ping-vdb.xml (runtime-name: ping-vdb.xml) in 7ms
19:32:55,235 INFO  [org.jboss.as.repository] (management-handler-thread - 5) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:32:55,236 INFO  [org.jboss.as.server] (management-handler-thread - 5) JBAS018558: Undeployed "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:33:27,863 INFO  [org.jboss.as.repository] (management-handler-thread - 8) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:33:27,864 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:33:27,887 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB ping.1 model "Foo" metadata is currently being loaded. Start Time: 9/3/13 7:33 PM
19:33:27,888 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB ping.1 model "Foo" metadata loaded. End Time: 9/3/13 7:33 PM
19:33:27,890 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB ping.1 is set to ACTIVE
19:33:27,972 INFO  [org.jboss.as.server] (management-handler-thread - 8) JBAS018559: Deployed "ping-vdb.xml" (runtime-name : "ping-vdb.xml")
19:33:27,986 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "ping.1[Foo{s=s, loopback, null}]" undeployed.
19:33:27,989 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment ping-vdb.xml (runtime-name: ping-vdb.xml) in 4ms
19:33:28,075 INFO  [org.jboss.as.repository] (management-handler-thread - 7) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:33:28,076 INFO  [org.jboss.as.server] (management-handler-thread - 7) JBAS018558: Undeployed "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:33:28,144 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:33:28,145 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:33:45,834 INFO  [org.jboss.as.repository] (management-handler-thread - 8) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:33:45,836 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:33:45,865 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50029 VDB ping.1 model "Foo" metadata is currently being loaded. Start Time: 9/3/13 7:33 PM
19:33:45,867 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB ping.1 model "Foo" metadata loaded. End Time: 9/3/13 7:33 PM
19:33:45,869 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB ping.1 is set to ACTIVE
19:33:45,952 INFO  [org.jboss.as.server] (management-handler-thread - 8) JBAS018559: Deployed "ping-vdb.xml" (runtime-name : "ping-vdb.xml")
19:33:45,966 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "ping.1[Foo{s=s, loopback, null}]" undeployed.
19:33:45,969 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment ping-vdb.xml (runtime-name: ping-vdb.xml) in 3ms
19:33:46,061 INFO  [org.jboss.as.repository] (management-handler-thread - 7) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:33:46,062 INFO  [org.jboss.as.server] (management-handler-thread - 7) JBAS018558: Undeployed "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:33:46,100 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:33:46,101 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:34:15,015 INFO  [org.jboss.as.repository] (management-handler-thread - 7) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:34:15,016 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:34:15,041 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB ping.1 model "Foo" metadata is currently being loaded. Start Time: 9/3/13 7:34 PM
19:34:15,042 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB ping.1 model "Foo" metadata loaded. End Time: 9/3/13 7:34 PM
19:34:15,043 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB ping.1 is set to ACTIVE
19:34:15,132 INFO  [org.jboss.as.server] (management-handler-thread - 7) JBAS018559: Deployed "ping-vdb.xml" (runtime-name : "ping-vdb.xml")
19:34:15,148 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "ping.1[Foo{s=s, loopback, null}]" undeployed.
19:34:15,156 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment ping-vdb.xml (runtime-name: ping-vdb.xml) in 8ms
19:34:15,235 INFO  [org.jboss.as.repository] (management-handler-thread - 6) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fc/f324141fb233a0401624dc0982576eb4a8fed2/content
19:34:15,235 INFO  [org.jboss.as.server] (management-handler-thread - 6) JBAS018558: Undeployed "ping-vdb.xml" (runtime-name: "ping-vdb.xml")
19:34:33,370 INFO  [org.jboss.as.repository] (management-handler-thread - 8) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/6b/f9d6287b5298dec2260a840a0eda5d7e128c07/content
19:34:33,372 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
19:34:33,394 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 7:34 PM
19:34:33,408 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 7:34 PM
19:34:33,455 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 1) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
19:34:33,455 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
19:34:33,455 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is set to ACTIVE
19:34:33,480 INFO  [org.jboss.as.server] (management-handler-thread - 8) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
19:34:34,053 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-5) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:34:34,303 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:34:34,307 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-2) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource
19:34:34,309 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:34:34,310 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-2) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource]
19:34:34,459 INFO  [org.jboss.as.repository] (management-handler-thread - 8) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/54/4625f20b0a867dd64e329b620aa28ad6ada1ca/content
19:34:34,460 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb")
19:34:34,482 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 7:34 PM
19:34:34,486 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 7:34 PM
19:34:34,498 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1 is set to ACTIVE
19:34:34,562 INFO  [org.jboss.as.server] (management-handler-thread - 8) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb")
19:34:35,154 INFO  [org.jboss.as.repository] (management-handler-thread - 5) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/75/72007793b14a576bb22f3d7c9846bca9837947/content
19:34:35,156 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
19:34:35,186 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
19:34:35,264 INFO  [org.jboss.as.server] (management-handler-thread - 5) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
19:34:35,814 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
19:34:35,819 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 5ms
19:34:35,907 INFO  [org.jboss.as.repository] (management-handler-thread - 7) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/75/72007793b14a576bb22f3d7c9846bca9837947/content
19:34:35,907 INFO  [org.jboss.as.server] (management-handler-thread - 7) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
19:34:35,958 INFO  [org.jboss.as.repository] (management-handler-thread - 5) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/c1/020df269a4feacd3b0d06684b74b702c3cfd3a/content
19:34:35,959 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
19:34:35,988 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
19:34:36,051 INFO  [org.jboss.as.server] (management-handler-thread - 5) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
19:34:37,712 INFO  [org.teiid.PLANNER] (Worker0_QueryProcessorQueue0) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

19:35:24,154 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:35:24,411 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:35:24,412 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-2) JBAS010406: Registered connection factory java:/expenseReportsSource
19:35:24,413 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:35:24,414 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-6) JBAS010401: Bound JCA ConnectionFactory [java:/expenseReportsSource]
19:35:24,552 INFO  [org.jboss.as.repository] (management-handler-thread - 6) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/07/a5fed2de991c47d172bb4e6143f1bab573baea/content
19:35:24,553 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
19:35:24,578 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 7:35 PM
19:35:24,580 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 7:35 PM
19:35:24,583 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 7:35 PM
19:35:24,582 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 7:35 PM
19:35:24,608 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
19:35:24,626 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:35:24,670 INFO  [org.jboss.as.server] (management-handler-thread - 6) JBAS018559: Deployed "ExpensesVDB.vdb" (runtime-name : "ExpensesVDB.vdb")
19:35:25,216 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:35:25,217 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:35:25,219 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
19:35:59,556 WARN  [org.teiid.PROCESSOR] (Worker0_QueryProcessorQueue4) TEIID30020 Processing exception for request BAGX39pVVOjI.0 'Group does not exist: ExpensesTableView'. Originally QueryResolverException ResolverUtil.java:814. Enable more detailed logging to see the entire stacktrace.
19:37:09,552 INFO  [org.teiid.PLANNER] (Worker0_QueryProcessorQueue5) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

19:38:11,543 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "ExpensesVDB.1[expenseReportsView{}, expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}]" undeployed.
19:38:11,546 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 4ms
19:38:11,547 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
19:38:11,567 INFO  [org.teiid.SECURITY] (MSC service thread 1-3) TEIID40009 Admin [null] is terminating this session: +hTYF2RMNIIo.  
19:38:11,568 INFO  [org.teiid.SECURITY] (MSC service thread 1-3) TEIID40009 Admin [null] is terminating this session: nRxaC6Bg1V3R.  
19:38:11,568 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 7:38 PM
19:38:11,569 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 7:38 PM
19:38:11,571 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 7:38 PM
19:38:11,571 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 7:38 PM
19:38:11,590 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
19:38:11,651 INFO  [org.jboss.as.server] (management-handler-thread - 12) JBAS018565: Replaced deployment "ExpensesVDB.vdb" with deployment "ExpensesVDB.vdb"
19:38:12,408 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-7) JBAS010400: Bound data source [java:/expensesDS]
19:39:00,933 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (http-localhost/127.0.0.1:8080-1) Session WxWd8m-1oulwyYQe63EkU2Ax created. 1 active sessions.
19:39:05,521 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-1) Redirecting to static URI: /images/SampleDashboardsImage.jpg
19:39:07,379 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/AdministrationImage.jpg
19:39:07,592 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/AdministrationImage.jpg
19:41:02,421 SEVERE [org.teiid.jdbc] (http-localhost/127.0.0.1:8080-2) Could not create connection: org.teiid.jdbc.TeiidSQLException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:56) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:55) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.getLocalManagedConnection(LocalManagedConnectionFactory.java:254) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.createManagedConnection(LocalManagedConnectionFactory.java:240) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.createConnectionEventListener(SemaphoreArrayListManagedConnectionPool.java:781)
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.getConnection(SemaphoreArrayListManagedConnectionPool.java:344)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getSimpleConnection(AbstractPool.java:397)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getConnection(AbstractPool.java:365)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.getManagedConnection(AbstractConnectionManager.java:329)
	at org.jboss.jca.core.connectionmanager.tx.TxConnectionManagerImpl.getManagedConnection(TxConnectionManagerImpl.java:368)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.allocateConnection(AbstractConnectionManager.java:464)
	at org.jboss.jca.adapters.jdbc.WrapperDataSource.getConnection(WrapperDataSource.java:139) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.dashboard.database.JNDIDataSourceEntry.getConnection(JNDIDataSourceEntry.java:46) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.getConnection(DataSourceManagementHandler.java:273) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCheckDataSource(DataSourceManagementHandler.java:548) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCreateDatasource(DataSourceManagementHandler.java:294) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.net.socket.SingleInstanceCommunicationException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:158) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.<init>(SocketServerConnection.java:92) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getConnection(SocketServerConnectionFactory.java:312) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:54) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 66 more
Caused by: java.io.StreamCorruptedException: Unsupported version: 0
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.readStreamHeader(CompactObjectInputStream.java:57) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.<init>(ObjectInputStream.java:299) [rt.jar:1.7.0_25]
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.<init>(CompactObjectInputStream.java:48) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.netty.handler.codec.serialization.ObjectDecoderInputStream.readObjectOverride(ObjectDecoderInputStream.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:364) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.OioOjbectChannelFactory$OioObjectChannel.read(OioOjbectChannelFactory.java:109) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.doHandshake(SocketServerInstanceImpl.java:116) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.connect(SocketServerInstanceImpl.java:96) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getServerInstance(SocketServerConnectionFactory.java:271) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.connect(SocketServerConnection.java:196) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:122) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 69 more

19:41:02,428 WARN  [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (http-localhost/127.0.0.1:8080-2) IJ000604: Throwable while attempting to get a new connection: null: javax.resource.ResourceException: Could not create connection
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.getLocalManagedConnection(LocalManagedConnectionFactory.java:282) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.createManagedConnection(LocalManagedConnectionFactory.java:240) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.createConnectionEventListener(SemaphoreArrayListManagedConnectionPool.java:781)
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.getConnection(SemaphoreArrayListManagedConnectionPool.java:344)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getSimpleConnection(AbstractPool.java:397)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getConnection(AbstractPool.java:365)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.getManagedConnection(AbstractConnectionManager.java:329)
	at org.jboss.jca.core.connectionmanager.tx.TxConnectionManagerImpl.getManagedConnection(TxConnectionManagerImpl.java:368)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.allocateConnection(AbstractConnectionManager.java:464)
	at org.jboss.jca.adapters.jdbc.WrapperDataSource.getConnection(WrapperDataSource.java:139) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.dashboard.database.JNDIDataSourceEntry.getConnection(JNDIDataSourceEntry.java:46) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.getConnection(DataSourceManagementHandler.java:273) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCheckDataSource(DataSourceManagementHandler.java:548) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCreateDatasource(DataSourceManagementHandler.java:294) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.jdbc.TeiidSQLException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:56) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:55) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.getLocalManagedConnection(LocalManagedConnectionFactory.java:254) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	... 63 more
Caused by: org.teiid.net.socket.SingleInstanceCommunicationException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:158) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.<init>(SocketServerConnection.java:92) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getConnection(SocketServerConnectionFactory.java:312) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:54) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 66 more
Caused by: java.io.StreamCorruptedException: Unsupported version: 0
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.readStreamHeader(CompactObjectInputStream.java:57) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.<init>(ObjectInputStream.java:299) [rt.jar:1.7.0_25]
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.<init>(CompactObjectInputStream.java:48) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.netty.handler.codec.serialization.ObjectDecoderInputStream.readObjectOverride(ObjectDecoderInputStream.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:364) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.OioOjbectChannelFactory$OioObjectChannel.read(OioOjbectChannelFactory.java:109) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.doHandshake(SocketServerInstanceImpl.java:116) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.connect(SocketServerInstanceImpl.java:96) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getServerInstance(SocketServerConnectionFactory.java:271) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.connect(SocketServerConnection.java:196) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:122) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 69 more

19:41:14,886 SEVERE [org.teiid.jdbc] (http-localhost/127.0.0.1:8080-2) Could not create connection: org.teiid.jdbc.TeiidSQLException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:56) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:55) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.getLocalManagedConnection(LocalManagedConnectionFactory.java:254) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.createManagedConnection(LocalManagedConnectionFactory.java:240) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.createConnectionEventListener(SemaphoreArrayListManagedConnectionPool.java:781)
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.getConnection(SemaphoreArrayListManagedConnectionPool.java:344)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getSimpleConnection(AbstractPool.java:397)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getConnection(AbstractPool.java:365)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.getManagedConnection(AbstractConnectionManager.java:329)
	at org.jboss.jca.core.connectionmanager.tx.TxConnectionManagerImpl.getManagedConnection(TxConnectionManagerImpl.java:368)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.allocateConnection(AbstractConnectionManager.java:464)
	at org.jboss.jca.adapters.jdbc.WrapperDataSource.getConnection(WrapperDataSource.java:139) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.dashboard.database.JNDIDataSourceEntry.getConnection(JNDIDataSourceEntry.java:46) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.getConnection(DataSourceManagementHandler.java:273) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCheckDataSource(DataSourceManagementHandler.java:548) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCreateDatasource(DataSourceManagementHandler.java:294) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.net.socket.SingleInstanceCommunicationException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:158) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.<init>(SocketServerConnection.java:92) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getConnection(SocketServerConnectionFactory.java:312) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:54) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 66 more
Caused by: java.io.StreamCorruptedException: Unsupported version: 0
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.readStreamHeader(CompactObjectInputStream.java:57) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.<init>(ObjectInputStream.java:299) [rt.jar:1.7.0_25]
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.<init>(CompactObjectInputStream.java:48) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.netty.handler.codec.serialization.ObjectDecoderInputStream.readObjectOverride(ObjectDecoderInputStream.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:364) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.OioOjbectChannelFactory$OioObjectChannel.read(OioOjbectChannelFactory.java:109) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.doHandshake(SocketServerInstanceImpl.java:116) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.connect(SocketServerInstanceImpl.java:96) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getServerInstance(SocketServerConnectionFactory.java:271) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.connect(SocketServerConnection.java:196) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:122) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 69 more

19:41:14,891 WARN  [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (http-localhost/127.0.0.1:8080-2) IJ000604: Throwable while attempting to get a new connection: null: javax.resource.ResourceException: Could not create connection
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.getLocalManagedConnection(LocalManagedConnectionFactory.java:282) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.createManagedConnection(LocalManagedConnectionFactory.java:240) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.createConnectionEventListener(SemaphoreArrayListManagedConnectionPool.java:781)
	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.getConnection(SemaphoreArrayListManagedConnectionPool.java:344)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getSimpleConnection(AbstractPool.java:397)
	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getConnection(AbstractPool.java:365)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.getManagedConnection(AbstractConnectionManager.java:329)
	at org.jboss.jca.core.connectionmanager.tx.TxConnectionManagerImpl.getManagedConnection(TxConnectionManagerImpl.java:368)
	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.allocateConnection(AbstractConnectionManager.java:464)
	at org.jboss.jca.adapters.jdbc.WrapperDataSource.getConnection(WrapperDataSource.java:139) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	at org.jboss.dashboard.database.JNDIDataSourceEntry.getConnection(JNDIDataSourceEntry.java:46) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.getConnection(DataSourceManagementHandler.java:273) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCheckDataSource(DataSourceManagementHandler.java:548) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.dataSourceManagement.DataSourceManagementHandler.actionCreateDatasource(DataSourceManagementHandler.java:294) [dashboard-ui-panels-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.jdbc.TeiidSQLException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:56) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidDriver.connect(TeiidDriver.java:55) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.jca.adapters.jdbc.local.LocalManagedConnectionFactory.getLocalManagedConnection(LocalManagedConnectionFactory.java:254) [ironjacamar-jdbc-1.0.17.Final-redhat-1.jar:1.0.17.Final-redhat-1]
	... 63 more
Caused by: org.teiid.net.socket.SingleInstanceCommunicationException: TEIID20020 Error establishing socket to host and port: localhost:9999. Reason: Unsupported version: 0
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:158) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.<init>(SocketServerConnection.java:92) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getConnection(SocketServerConnectionFactory.java:312) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.SocketProfile.connect(SocketProfile.java:54) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 66 more
Caused by: java.io.StreamCorruptedException: Unsupported version: 0
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.readStreamHeader(CompactObjectInputStream.java:57) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.<init>(ObjectInputStream.java:299) [rt.jar:1.7.0_25]
	at org.teiid.netty.handler.codec.serialization.CompactObjectInputStream.<init>(CompactObjectInputStream.java:48) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.netty.handler.codec.serialization.ObjectDecoderInputStream.readObjectOverride(ObjectDecoderInputStream.java:107) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:364) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.OioOjbectChannelFactory$OioObjectChannel.read(OioOjbectChannelFactory.java:109) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.doHandshake(SocketServerInstanceImpl.java:116) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.connect(SocketServerInstanceImpl.java:96) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnectionFactory.getServerInstance(SocketServerConnectionFactory.java:271) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.connect(SocketServerConnection.java:196) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerConnection.selectServerInstance(SocketServerConnection.java:122) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	... 69 more

19:46:30,606 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/SampleDashboardsImage.jpg
19:46:30,848 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/SampleDashboardsImage.jpg
19:51:35,860 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/SampleDashboardsImage.jpg
19:51:36,238 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/SampleDashboardsImage.jpg
19:51:38,190 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/AdministrationImage.jpg
19:52:05,724 WARN  [org.teiid.PROCESSOR] (Worker6_QueryProcessorQueue29) TEIID30020 Processing exception for request s11Zmo9Oy8MY.0 'TEIID31118 Element "Office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
19:52:05,732 ERROR [org.jboss.dashboard.dataset.sql.SQLDataSet] (http-localhost/127.0.0.1:8080-4) Error in load() SQLDataset. SQL = SELECT Office,Amount FROM expenseReportsViewTable: org.teiid.jdbc.TeiidSQLException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "Office" is not defined by any relevant group.
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.postReceiveResults(StatementImpl.java:668) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.access$100(StatementImpl.java:63) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl$2.onCompletion(StatementImpl.java:516) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.done(ResultsFuture.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.access$200(ResultsFuture.java:40) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture$1.receiveResults(ResultsFuture.java:79) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.receivedMessage(SocketServerInstanceImpl.java:242) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.read(SocketServerInstanceImpl.java:278) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.SocketServerConnectionFactory$ShutdownHandler.invoke(SocketServerConnectionFactory.java:102) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at com.sun.proxy.$Proxy76.read(Unknown Source)
	at org.teiid.net.socket.SocketServerInstanceImpl$RemoteInvocationHandler$1.get(SocketServerInstanceImpl.java:377) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.executeSql(StatementImpl.java:525) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.PreparedStatementImpl.executeQuery(PreparedStatementImpl.java:258) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.dashboard.dataset.sql.SQLDataSet.load(SQLDataSet.java:102) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.sql.SQLDataLoader.load(SQLDataLoader.java:105) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.loadDataSet(DataSetManagerImpl.java:101) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSetHolder(DataSetManagerImpl.java:75) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSet(DataSetManagerImpl.java:39) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.refreshDataSet(DataSetManagerImpl.java:49) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl$Proxy$_$$_WeldClientProxy.refreshDataSet(DataSetManagerImpl$Proxy$_$$_WeldClientProxy.java) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.DataProviderImpl.refreshDataSet(DataProviderImpl.java:228) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.components.sql.SQLProviderEditor.actionSubmit(SQLProviderEditor.java:86) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.updateDataProvider(DataProviderHandler.java:374) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.actionEditCreateNewDataProvider(DataProviderHandler.java:426) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.GeneratedMethodAccessor258.invoke(Unknown Source) [:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.core.TeiidProcessingException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "Office" is not defined by any relevant group.
	at org.teiid.query.resolver.util.ResolverVisitor.handleUnresolvedElement(ResolverVisitor.java:114)
	at org.teiid.query.resolver.util.ResolverVisitor.internalResolveElementSymbol(ResolverVisitor.java:209)
	at org.teiid.query.resolver.util.ResolverVisitor.resolveElementSymbol(ResolverVisitor.java:147)
	at org.teiid.query.resolver.util.ResolverVisitor.visit(ResolverVisitor.java:102)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitVisitor(AbstractNavigator.java:54)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.postVisitVisitor(PreOrPostOrderNavigator.java:60)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.postVisitVisitor(SimpleQueryResolver.java:188)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:170)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNodes(AbstractNavigator.java:76)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:341)
	at org.teiid.query.sql.lang.Select.acceptVisitor(Select.java:167)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.visit(SimpleQueryResolver.java:206)
	at org.teiid.query.resolver.command.SimpleQueryResolver.resolveCommand(SimpleQueryResolver.java:73)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:270)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:124)
	at org.teiid.dqp.internal.process.Request.resolveCommand(Request.java:260)
	at org.teiid.dqp.internal.process.Request.generatePlan(Request.java:370)
	at org.teiid.dqp.internal.process.PreparedStatementRequest.generatePlan(PreparedStatementRequest.java:115)
	at org.teiid.dqp.internal.process.Request.processRequest(Request.java:436)
	at org.teiid.dqp.internal.process.RequestWorkItem.processNew(RequestWorkItem.java:600)
	at org.teiid.dqp.internal.process.RequestWorkItem.process(RequestWorkItem.java:309)
	at org.teiid.dqp.internal.process.AbstractWorkItem.run(AbstractWorkItem.java:51)
	at org.teiid.dqp.internal.process.RequestWorkItem.run(RequestWorkItem.java:248)
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	... 1 more

19:52:15,662 WARN  [org.teiid.PROCESSOR] (Worker6_QueryProcessorQueue30) TEIID30020 Processing exception for request tCzDa0qIFYaT.0 'TEIID31118 Element "office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
19:52:15,670 ERROR [org.jboss.dashboard.dataset.sql.SQLDataSet] (http-localhost/127.0.0.1:8080-2) Error in load() SQLDataset. SQL = SELECT office,amount FROM expenseReportsViewTable: org.teiid.jdbc.TeiidSQLException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "office" is not defined by any relevant group.
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.postReceiveResults(StatementImpl.java:668) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.access$100(StatementImpl.java:63) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl$2.onCompletion(StatementImpl.java:516) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.done(ResultsFuture.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.access$200(ResultsFuture.java:40) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture$1.receiveResults(ResultsFuture.java:79) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.receivedMessage(SocketServerInstanceImpl.java:242) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.read(SocketServerInstanceImpl.java:278) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.SocketServerConnectionFactory$ShutdownHandler.invoke(SocketServerConnectionFactory.java:102) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at com.sun.proxy.$Proxy76.read(Unknown Source)
	at org.teiid.net.socket.SocketServerInstanceImpl$RemoteInvocationHandler$1.get(SocketServerInstanceImpl.java:377) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.executeSql(StatementImpl.java:525) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.PreparedStatementImpl.executeQuery(PreparedStatementImpl.java:258) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.dashboard.dataset.sql.SQLDataSet.load(SQLDataSet.java:102) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.sql.SQLDataLoader.load(SQLDataLoader.java:105) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.loadDataSet(DataSetManagerImpl.java:101) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSetHolder(DataSetManagerImpl.java:75) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSet(DataSetManagerImpl.java:39) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.refreshDataSet(DataSetManagerImpl.java:49) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl$Proxy$_$$_WeldClientProxy.refreshDataSet(DataSetManagerImpl$Proxy$_$$_WeldClientProxy.java) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.DataProviderImpl.refreshDataSet(DataProviderImpl.java:228) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.components.sql.SQLProviderEditor.actionSubmit(SQLProviderEditor.java:86) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.updateDataProvider(DataProviderHandler.java:374) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.actionEditCreateNewDataProvider(DataProviderHandler.java:426) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.GeneratedMethodAccessor258.invoke(Unknown Source) [:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.core.TeiidProcessingException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "office" is not defined by any relevant group.
	at org.teiid.query.resolver.util.ResolverVisitor.handleUnresolvedElement(ResolverVisitor.java:114)
	at org.teiid.query.resolver.util.ResolverVisitor.internalResolveElementSymbol(ResolverVisitor.java:209)
	at org.teiid.query.resolver.util.ResolverVisitor.resolveElementSymbol(ResolverVisitor.java:147)
	at org.teiid.query.resolver.util.ResolverVisitor.visit(ResolverVisitor.java:102)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitVisitor(AbstractNavigator.java:54)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.postVisitVisitor(PreOrPostOrderNavigator.java:60)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.postVisitVisitor(SimpleQueryResolver.java:188)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:170)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNodes(AbstractNavigator.java:76)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:341)
	at org.teiid.query.sql.lang.Select.acceptVisitor(Select.java:167)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.visit(SimpleQueryResolver.java:206)
	at org.teiid.query.resolver.command.SimpleQueryResolver.resolveCommand(SimpleQueryResolver.java:73)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:270)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:124)
	at org.teiid.dqp.internal.process.Request.resolveCommand(Request.java:260)
	at org.teiid.dqp.internal.process.Request.generatePlan(Request.java:370)
	at org.teiid.dqp.internal.process.PreparedStatementRequest.generatePlan(PreparedStatementRequest.java:115)
	at org.teiid.dqp.internal.process.Request.processRequest(Request.java:436)
	at org.teiid.dqp.internal.process.RequestWorkItem.processNew(RequestWorkItem.java:600)
	at org.teiid.dqp.internal.process.RequestWorkItem.process(RequestWorkItem.java:309)
	at org.teiid.dqp.internal.process.AbstractWorkItem.run(AbstractWorkItem.java:51)
	at org.teiid.dqp.internal.process.RequestWorkItem.run(RequestWorkItem.java:248)
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	... 1 more

19:52:17,430 WARN  [org.teiid.PROCESSOR] (Worker6_QueryProcessorQueue31) TEIID30020 Processing exception for request Zvd9tHHyyVhR.0 'TEIID31118 Element "office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
19:52:17,439 ERROR [org.jboss.dashboard.dataset.sql.SQLDataSet] (http-localhost/127.0.0.1:8080-5) Error in load() SQLDataset. SQL = SELECT office,amount FROM expenseReportsViewTable: org.teiid.jdbc.TeiidSQLException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "office" is not defined by any relevant group.
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.postReceiveResults(StatementImpl.java:668) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.access$100(StatementImpl.java:63) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl$2.onCompletion(StatementImpl.java:516) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.done(ResultsFuture.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.access$200(ResultsFuture.java:40) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture$1.receiveResults(ResultsFuture.java:79) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.receivedMessage(SocketServerInstanceImpl.java:242) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.read(SocketServerInstanceImpl.java:278) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.SocketServerConnectionFactory$ShutdownHandler.invoke(SocketServerConnectionFactory.java:102) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at com.sun.proxy.$Proxy76.read(Unknown Source)
	at org.teiid.net.socket.SocketServerInstanceImpl$RemoteInvocationHandler$1.get(SocketServerInstanceImpl.java:377) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.executeSql(StatementImpl.java:525) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.PreparedStatementImpl.executeQuery(PreparedStatementImpl.java:258) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.dashboard.dataset.sql.SQLDataSet.load(SQLDataSet.java:102) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.sql.SQLDataLoader.load(SQLDataLoader.java:105) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.loadDataSet(DataSetManagerImpl.java:101) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSetHolder(DataSetManagerImpl.java:75) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSet(DataSetManagerImpl.java:39) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.refreshDataSet(DataSetManagerImpl.java:49) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl$Proxy$_$$_WeldClientProxy.refreshDataSet(DataSetManagerImpl$Proxy$_$$_WeldClientProxy.java) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.DataProviderImpl.refreshDataSet(DataProviderImpl.java:228) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.components.sql.SQLProviderEditor.actionSubmit(SQLProviderEditor.java:86) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.updateDataProvider(DataProviderHandler.java:374) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.actionEditCreateNewDataProvider(DataProviderHandler.java:426) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.GeneratedMethodAccessor258.invoke(Unknown Source) [:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.core.TeiidProcessingException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "office" is not defined by any relevant group.
	at org.teiid.query.resolver.util.ResolverVisitor.handleUnresolvedElement(ResolverVisitor.java:114)
	at org.teiid.query.resolver.util.ResolverVisitor.internalResolveElementSymbol(ResolverVisitor.java:209)
	at org.teiid.query.resolver.util.ResolverVisitor.resolveElementSymbol(ResolverVisitor.java:147)
	at org.teiid.query.resolver.util.ResolverVisitor.visit(ResolverVisitor.java:102)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitVisitor(AbstractNavigator.java:54)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.postVisitVisitor(PreOrPostOrderNavigator.java:60)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.postVisitVisitor(SimpleQueryResolver.java:188)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:170)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNodes(AbstractNavigator.java:76)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:341)
	at org.teiid.query.sql.lang.Select.acceptVisitor(Select.java:167)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.visit(SimpleQueryResolver.java:206)
	at org.teiid.query.resolver.command.SimpleQueryResolver.resolveCommand(SimpleQueryResolver.java:73)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:270)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:124)
	at org.teiid.dqp.internal.process.Request.resolveCommand(Request.java:260)
	at org.teiid.dqp.internal.process.Request.generatePlan(Request.java:370)
	at org.teiid.dqp.internal.process.PreparedStatementRequest.generatePlan(PreparedStatementRequest.java:115)
	at org.teiid.dqp.internal.process.Request.processRequest(Request.java:436)
	at org.teiid.dqp.internal.process.RequestWorkItem.processNew(RequestWorkItem.java:600)
	at org.teiid.dqp.internal.process.RequestWorkItem.process(RequestWorkItem.java:309)
	at org.teiid.dqp.internal.process.AbstractWorkItem.run(AbstractWorkItem.java:51)
	at org.teiid.dqp.internal.process.RequestWorkItem.run(RequestWorkItem.java:248)
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	... 1 more

19:52:26,087 WARN  [org.teiid.PROCESSOR] (Worker6_QueryProcessorQueue32) TEIID30020 Processing exception for request eWposshU7J4H.0 'TEIID31118 Element "office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
19:52:26,094 ERROR [org.jboss.dashboard.dataset.sql.SQLDataSet] (http-localhost/127.0.0.1:8080-4) Error in load() SQLDataset. SQL = SELECT office FROM expenseReportsViewTable: org.teiid.jdbc.TeiidSQLException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "office" is not defined by any relevant group.
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.TeiidSQLException.create(TeiidSQLException.java:71) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.postReceiveResults(StatementImpl.java:668) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.access$100(StatementImpl.java:63) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl$2.onCompletion(StatementImpl.java:516) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.done(ResultsFuture.java:135) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture.access$200(ResultsFuture.java:40) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.client.util.ResultsFuture$1.receiveResults(ResultsFuture.java:79) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.receivedMessage(SocketServerInstanceImpl.java:242) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.net.socket.SocketServerInstanceImpl.read(SocketServerInstanceImpl.java:278) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at sun.reflect.GeneratedMethodAccessor271.invoke(Unknown Source) [:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.teiid.net.socket.SocketServerConnectionFactory$ShutdownHandler.invoke(SocketServerConnectionFactory.java:102) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at com.sun.proxy.$Proxy76.read(Unknown Source)
	at org.teiid.net.socket.SocketServerInstanceImpl$RemoteInvocationHandler$1.get(SocketServerInstanceImpl.java:377) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.StatementImpl.executeSql(StatementImpl.java:525) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.jdbc.PreparedStatementImpl.executeQuery(PreparedStatementImpl.java:258) [teiid-client-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.jboss.dashboard.dataset.sql.SQLDataSet.load(SQLDataSet.java:102) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.sql.SQLDataLoader.load(SQLDataLoader.java:105) [dashboard-provider-sql-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.loadDataSet(DataSetManagerImpl.java:101) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSetHolder(DataSetManagerImpl.java:75) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.getDataSet(DataSetManagerImpl.java:39) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl.refreshDataSet(DataSetManagerImpl.java:49) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.dataset.DataSetManagerImpl$Proxy$_$$_WeldClientProxy.refreshDataSet(DataSetManagerImpl$Proxy$_$$_WeldClientProxy.java) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.provider.DataProviderImpl.refreshDataSet(DataProviderImpl.java:228) [dashboard-provider-core-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.components.sql.SQLProviderEditor.actionSubmit(SQLProviderEditor.java:86) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.updateDataProvider(DataProviderHandler.java:374) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.DataProviderHandler.actionEditCreateNewDataProvider(DataProviderHandler.java:426) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.components.HandlerFactoryElement.handle(HandlerFactoryElement.java:140) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handle(FactoryRequestHandler.java:154) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.performRequestHandling(FactoryRequestHandler.java:145) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.components.FactoryRequestHandler.handleRequest(FactoryRequestHandler.java:43) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.panel.PanelDriver.panelActionFactory(PanelDriver.java:1225) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at sun.reflect.GeneratedMethodAccessor258.invoke(Unknown Source) [:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.jboss.dashboard.ui.panel.PanelDriver.execute(PanelDriver.java:808) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.FactoryActionRequestExecutor.processRequest(FactoryActionRequestExecutor.java:110) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:61) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.requestChain.RequestChainProcessor.doRequestProcessing(RequestChainProcessor.java:63) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$3.txFragment(ControllerServlet.java:192) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.database.hibernate.HibernateTransaction.executeFragment(HibernateTransaction.java:254) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.executeInitiator(HibernateTxFragment.java:179) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.database.hibernate.HibernateTxFragment.execute(HibernateTxFragment.java:167) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.processTheRequest(ControllerServlet.java:187) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.ui.controller.ControllerServlet$2.doWork(ControllerServlet.java:166) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at org.jboss.dashboard.factory.Factory.runWork(Factory.java:295) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.factory.Factory.doWork(Factory.java:323) [dashboard-commons-6.0.0-redhat-2.jar:6.0.0-redhat-2]
	at org.jboss.dashboard.ui.controller.ControllerServlet.service(ControllerServlet.java:148) [dashboard-ui-core-6.0.0-redhat-2.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: org.teiid.core.TeiidProcessingException: Remote org.teiid.api.exception.query.QueryResolverException: TEIID31118 Element "office" is not defined by any relevant group.
	at org.teiid.query.resolver.util.ResolverVisitor.handleUnresolvedElement(ResolverVisitor.java:114)
	at org.teiid.query.resolver.util.ResolverVisitor.internalResolveElementSymbol(ResolverVisitor.java:209)
	at org.teiid.query.resolver.util.ResolverVisitor.resolveElementSymbol(ResolverVisitor.java:147)
	at org.teiid.query.resolver.util.ResolverVisitor.visit(ResolverVisitor.java:102)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitVisitor(AbstractNavigator.java:54)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.postVisitVisitor(PreOrPostOrderNavigator.java:60)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.postVisitVisitor(SimpleQueryResolver.java:188)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:170)
	at org.teiid.query.sql.symbol.ElementSymbol.acceptVisitor(ElementSymbol.java:227)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNodes(AbstractNavigator.java:76)
	at org.teiid.query.sql.navigator.PreOrPostOrderNavigator.visit(PreOrPostOrderNavigator.java:341)
	at org.teiid.query.sql.lang.Select.acceptVisitor(Select.java:167)
	at org.teiid.query.sql.navigator.AbstractNavigator.visitNode(AbstractNavigator.java:63)
	at org.teiid.query.resolver.command.SimpleQueryResolver$QueryResolverVisitor.visit(SimpleQueryResolver.java:206)
	at org.teiid.query.resolver.command.SimpleQueryResolver.resolveCommand(SimpleQueryResolver.java:73)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:270)
	at org.teiid.query.resolver.QueryResolver.resolveCommand(QueryResolver.java:124)
	at org.teiid.dqp.internal.process.Request.resolveCommand(Request.java:260)
	at org.teiid.dqp.internal.process.Request.generatePlan(Request.java:370)
	at org.teiid.dqp.internal.process.PreparedStatementRequest.generatePlan(PreparedStatementRequest.java:115)
	at org.teiid.dqp.internal.process.Request.processRequest(Request.java:436)
	at org.teiid.dqp.internal.process.RequestWorkItem.processNew(RequestWorkItem.java:600)
	at org.teiid.dqp.internal.process.RequestWorkItem.process(RequestWorkItem.java:309)
	at org.teiid.dqp.internal.process.AbstractWorkItem.run(AbstractWorkItem.java:51)
	at org.teiid.dqp.internal.process.RequestWorkItem.run(RequestWorkItem.java:248)
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119)
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	... 1 more

19:54:57,581 WARN  [org.teiid.PROCESSOR] (Worker7_QueryProcessorQueue33) TEIID30020 Processing exception for request QF14u2rSMu2U.0 'TEIID31118 Element "office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
19:59:51,325 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:59:51,565 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:59:51,566 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-1) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource
19:59:51,567 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
19:59:51,568 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-6) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource]
20:00:37,294 INFO  [org.jboss.as.repository] (management-handler-thread - 16) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/f9/dad0c999ca8988625e69f2edead7b8f5a65339/content
20:00:37,295 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb")
20:00:37,318 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 model "salesDashboardView" metadata is currently being loaded. Start Time: 9/3/13 8:00 PM
20:00:37,320 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 model "salesDashboardView" metadata loaded. End Time: 9/3/13 8:00 PM
20:00:37,332 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 4) TEIID31080 View salesDashboardView.salesDashboardViewTable validation error: QueryResolverException-TEIID30352 SALESDASHBOARDSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
20:00:37,333 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
20:00:37,333 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 is set to ACTIVE
20:00:37,395 INFO  [org.jboss.as.server] (management-handler-thread - 16) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb")
20:00:37,979 INFO  [org.jboss.as.repository] (management-handler-thread - 13) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/be/a934d2ad7e162b5ceb576b93ea4708b907cf2b/content
20:00:37,980 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb")
20:00:37,998 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.1 model "salesDashboardSource" metadata is currently being loaded. Start Time: 9/3/13 8:00 PM
20:00:38,000 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.1 model "salesDashboardSource" metadata loaded. End Time: 9/3/13 8:00 PM
20:00:38,007 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.1 is set to ACTIVE
20:00:38,080 INFO  [org.jboss.as.server] (management-handler-thread - 13) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb")
20:00:38,618 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
20:00:38,622 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 4ms
20:00:38,707 INFO  [org.jboss.as.repository] (management-handler-thread - 14) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/c1/020df269a4feacd3b0d06684b74b702c3cfd3a/content
20:00:38,707 INFO  [org.jboss.as.server] (management-handler-thread - 14) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:00:38,791 INFO  [org.jboss.as.repository] (management-handler-thread - 13) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/28/698e4fa3897da8db4cbeda23d1c2f22d182001/content
20:00:38,792 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:00:38,812 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
20:00:38,884 INFO  [org.jboss.as.server] (management-handler-thread - 13) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:00:43,545 INFO  [org.teiid.PLANNER] (Worker8_QueryProcessorQueue34) 
============================================================================
USER COMMAND:
SELECT * FROM salesDashboardView.salesDashboardViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM salesDashboardView.salesDashboardViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM salesDashboardView.salesDashboardViewTable

CANONICAL PLAN: 
Project(groups=[salesDashboardView.salesDashboardViewTable], props={PROJECT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Source(groups=[salesDashboardView.salesDashboardViewTable], props={NESTED_COMMAND=SELECT A.Amount, A.Product FROM (EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, SYMBOL_MAP={salesDashboardView.salesDashboardViewTable.Amount=A.Amount, salesDashboardView.salesDashboardViewTable.Product=A.Product}})
    Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file, f.filePath=salesDashboardSource.getTextFiles.filePath}})
          Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
            Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[salesDashboardView.salesDashboardViewTable], props={PROJECT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Source(groups=[salesDashboardView.salesDashboardViewTable], props={NESTED_COMMAND=SELECT A.Amount, A.Product FROM (EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, SYMBOL_MAP={salesDashboardView.salesDashboardViewTable.Amount=A.Amount, salesDashboardView.salesDashboardViewTable.Product=A.Product}})
    Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file, f.filePath=salesDashboardSource.getTextFiles.filePath}})
          Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
            Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c})
              Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[salesDashboardView.salesDashboardViewTable], props={PROJECT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product], OUTPUT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Source(groups=[salesDashboardView.salesDashboardViewTable], props={NESTED_COMMAND=SELECT A.Amount, A.Product FROM (EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, SYMBOL_MAP={salesDashboardView.salesDashboardViewTable.Amount=A.Amount, salesDashboardView.salesDashboardViewTable.Product=A.Product}, OUTPUT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
    Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[A.Amount, A.Product]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
            Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
              Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product]})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product]})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[A.Amount, A.Product]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[A.Amount, A.Product], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=[salesDashboardSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file], EST_COL_STATS={salesDashboardSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product], EST_COL_STATS={A.Amount=[-1.0, -1.0], A.Product=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product], EST_COL_STATS={A.Amount=[-1.0, -1.0], A.Product=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.Amount, A.Product] [A.Amount, A.Product]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.Amount, A.Product]
    ProjectNode(2) output=[file] [salesDashboardSource.getTextFiles.file]
      AccessNode(3) output=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath] EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')
    TextTableNode(4) output=[A.Amount, A.Product] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.Amount, A.Product] [A.Amount, A.Product]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.Amount, A.Product]
    ProjectNode(2) output=[file] [salesDashboardSource.getTextFiles.file]
      AccessNode(3) output=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath] EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')
    TextTableNode(4) output=[A.Amount, A.Product] 

============================================================================

20:00:43,554 WARN  [org.teiid.PROCESSOR] (Worker8_QueryProcessorQueue36) TEIID30020 Processing exception for request JqwyaZIAy6RT.0 'TEIID30181 HEADER entry missing for column name Amount in file:/home/kpeeples/mystuff/demos/DV-BI/DV-data/teiid-dashboard-1.0.0-SNAPSHOT-jboss-as7.0/WEB-INF/etc/appdata/initialData/salesDashboard.csv.'. Originally TeiidProcessingException TextTableNode.java:373. Enable more detailed logging to see the entire stacktrace.
20:04:28,941 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1[salesDashboardView{}]" undeployed.
20:04:28,941 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
20:04:28,943 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb) in 3ms
20:04:28,944 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb")
20:04:28,965 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 model "salesDashboardView" metadata is currently being loaded. Start Time: 9/3/13 8:04 PM
20:04:28,967 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 model "salesDashboardView" metadata loaded. End Time: 9/3/13 8:04 PM
20:04:28,978 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 1) TEIID31080 View salesDashboardView.salesDashboardViewTable validation error: QueryResolverException-TEIID30352 SALESDASHBOARDSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
20:04:28,978 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
20:04:28,979 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1 is set to ACTIVE
20:04:29,050 INFO  [org.jboss.as.server] (management-handler-thread - 19) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb"
20:04:29,653 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1[expenseReportsView{}]" undeployed.
20:04:29,656 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb) in 3ms
20:04:29,657 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
20:04:29,675 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 8:04 PM
20:04:29,676 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 8:04 PM
20:04:29,686 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 2) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
20:04:29,686 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
20:04:29,686 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is set to ACTIVE
20:04:29,762 INFO  [org.jboss.as.server] (management-handler-thread - 20) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb"
20:04:30,347 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource}]" undeployed.
20:04:30,350 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb) in 4ms
20:04:30,351 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb")
20:04:30,369 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 8:04 PM
20:04:30,371 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 8:04 PM
20:04:30,383 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1 is set to ACTIVE
20:04:30,439 INFO  [org.jboss.as.server] (management-handler-thread - 19) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb"
20:04:30,963 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:04:31,019 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
20:04:31,020 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:04:31,037 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
20:04:31,116 INFO  [org.jboss.as.server] (management-handler-thread - 20) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
20:04:31,680 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
20:04:31,685 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 6ms
20:04:31,768 INFO  [org.jboss.as.repository] (management-handler-thread - 17) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/28/698e4fa3897da8db4cbeda23d1c2f22d182001/content
20:04:31,768 INFO  [org.jboss.as.server] (management-handler-thread - 17) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:04:31,837 INFO  [org.jboss.as.repository] (management-handler-thread - 17) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/e4/1a895c51d147bb2e3fd00ac381313ab8806f0d/content
20:04:31,838 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:04:31,854 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
20:04:31,921 INFO  [org.jboss.as.server] (management-handler-thread - 17) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:04:36,674 INFO  [org.teiid.PLANNER] (Worker10_QueryProcessorQueue37) 
============================================================================
USER COMMAND:
SELECT * FROM salesDashboardView.salesDashboardViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM salesDashboardView.salesDashboardViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM salesDashboardView.salesDashboardViewTable

CANONICAL PLAN: 
Project(groups=[salesDashboardView.salesDashboardViewTable], props={PROJECT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Source(groups=[salesDashboardView.salesDashboardViewTable], props={NESTED_COMMAND=SELECT A.Amount, A.Product FROM (EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, SYMBOL_MAP={salesDashboardView.salesDashboardViewTable.Amount=A.Amount, salesDashboardView.salesDashboardViewTable.Product=A.Product}})
    Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file, f.filePath=salesDashboardSource.getTextFiles.filePath}})
          Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
            Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[salesDashboardView.salesDashboardViewTable], props={PROJECT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Source(groups=[salesDashboardView.salesDashboardViewTable], props={NESTED_COMMAND=SELECT A.Amount, A.Product FROM (EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, SYMBOL_MAP={salesDashboardView.salesDashboardViewTable.Amount=A.Amount, salesDashboardView.salesDashboardViewTable.Product=A.Product}})
    Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file, f.filePath=salesDashboardSource.getTextFiles.filePath}})
          Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
            Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c})
              Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[salesDashboardView.salesDashboardViewTable], props={PROJECT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product], OUTPUT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Source(groups=[salesDashboardView.salesDashboardViewTable], props={NESTED_COMMAND=SELECT A.Amount, A.Product FROM (EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, SYMBOL_MAP={salesDashboardView.salesDashboardViewTable.Amount=A.Amount, salesDashboardView.salesDashboardViewTable.Product=A.Product}, OUTPUT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
    Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[A.Amount, A.Product]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
            Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
              Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[salesDashboardView.salesDashboardViewTable.Amount, salesDashboardView.salesDashboardViewTable.Product]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product]})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product]})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=null})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[A.Amount, A.Product]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath]})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.Amount, A.Product], OUTPUT_COLS=[A.Amount, A.Product], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), SYMBOL_MAP={f.file=salesDashboardSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[salesDashboardSource.getTextFiles], props={PROJECT_COLS=[salesDashboardSource.getTextFiles.file], OUTPUT_COLS=[salesDashboardSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[salesDashboardSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv'), OUTPUT_COLS=[salesDashboardSource.getTextFiles.file], EST_COL_STATS={salesDashboardSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product], EST_COL_STATS={A.Amount=[-1.0, -1.0], A.Product=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS Amount string, Product string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.Amount, A.Product], EST_COL_STATS={A.Amount=[-1.0, -1.0], A.Product=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.Amount, A.Product], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles])
          Source(groups=[salesDashboardSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[salesDashboardSource.getTextFiles])
        Access(groups=[salesDashboardSource.getTextFiles], props={MODEL_ID=Schema name=salesDashboardSource, nameInSource=null, uuid=mmuuid:d21d58c3-f0dd-42cc-871a-4831fdc3861c, OUTPUT_COLS=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.Amount, A.Product] [A.Amount, A.Product]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.Amount, A.Product]
    ProjectNode(2) output=[file] [salesDashboardSource.getTextFiles.file]
      AccessNode(3) output=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath] EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')
    TextTableNode(4) output=[A.Amount, A.Product] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.Amount, A.Product] [A.Amount, A.Product]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.Amount, A.Product]
    ProjectNode(2) output=[file] [salesDashboardSource.getTextFiles.file]
      AccessNode(3) output=[salesDashboardSource.getTextFiles.file, salesDashboardSource.getTextFiles.filePath] EXEC salesDashboardSource.getTextFiles('salesDashboard.csv')
    TextTableNode(4) output=[A.Amount, A.Product] 

============================================================================

20:04:36,679 WARN  [org.teiid.PROCESSOR] (Worker10_QueryProcessorQueue39) TEIID30020 Processing exception for request SyurHh6rKNmk.0 'TEIID30181 HEADER entry missing for column name Amount in file:/home/kpeeples/mystuff/demos/DV-BI/DV-data/teiid-dashboard-1.0.0-SNAPSHOT-jboss-as7.0/WEB-INF/etc/appdata/initialData/salesDashboard.csv.'. Originally TeiidProcessingException TextTableNode.java:373. Enable more detailed logging to see the entire stacktrace.
20:07:50,800 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.1[salesDashboardView{}]" undeployed.
20:07:50,802 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
20:07:50,807 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb) in 7ms
20:07:50,920 INFO  [org.jboss.as.repository] (management-handler-thread - 26) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/f9/dad0c999ca8988625e69f2edead7b8f5a65339/content
20:07:50,920 INFO  [org.jboss.as.server] (management-handler-thread - 26) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_salesDashboardView.vdb")
20:09:02,179 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:09:02,190 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.1[salesDashboardSource{salesDashboardSource=salesDashboardSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource}]" undeployed.
20:09:02,193 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb) in 3ms
20:09:02,303 INFO  [org.jboss.as.repository] (management-handler-thread - 30) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/be/a934d2ad7e162b5ceb576b93ea4708b907cf2b/content
20:09:02,303 INFO  [org.jboss.as.server] (management-handler-thread - 30) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource.vdb")
20:09:02,315 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:09:02,316 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:09:02,443 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-5) JBAS010410: Unbound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_salesDashboardSource]
20:09:41,306 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1[expenseReportsView{}]" undeployed.
20:09:41,309 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb) in 3ms
20:09:41,438 INFO  [org.jboss.as.repository] (management-handler-thread - 30) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/6b/f9d6287b5298dec2260a840a0eda5d7e128c07/content
20:09:41,438 INFO  [org.jboss.as.server] (management-handler-thread - 30) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
20:09:41,440 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource}]" undeployed.
20:09:41,445 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb) in 5ms
20:09:41,514 INFO  [org.jboss.as.repository] (management-handler-thread - 27) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/54/4625f20b0a867dd64e329b620aa28ad6ada1ca/content
20:09:41,515 INFO  [org.jboss.as.server] (management-handler-thread - 27) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource.vdb")
20:09:41,619 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-6) JBAS010410: Unbound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportsSource]
20:22:52,512 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (ContainerBackgroundProcessor[StandardEngine[jboss.web]]) Session WxWd8m-1oulwyYQe63EkU2Ax expired. 0 active sessions.
20:24:33,608 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:24:33,609 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:24:33,664 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-3) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
20:24:33,912 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
20:24:33,914 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-8) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource
20:24:33,914 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
20:24:33,915 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-5) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource]
20:25:02,838 INFO  [org.jboss.as.repository] (management-handler-thread - 32) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ec/9fd3ff04198aa0d0b03b4589a1baba3d3a982d/content
20:25:02,839 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
20:25:02,859 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 8:25 PM
20:25:02,861 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 8:25 PM
20:25:02,870 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
20:25:02,870 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
20:25:02,870 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
20:25:02,932 INFO  [org.jboss.as.server] (management-handler-thread - 32) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
20:25:03,516 INFO  [org.jboss.as.repository] (management-handler-thread - 33) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ca/eeeadfbfa407597bd9301ffdcd86c488f3f7df/content
20:25:03,517 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
20:25:03,534 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 8:25 PM
20:25:03,535 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 8:25 PM
20:25:03,541 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 is set to ACTIVE
20:25:03,602 INFO  [org.jboss.as.server] (management-handler-thread - 33) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
20:25:04,169 INFO  [org.jboss.as.repository] (management-handler-thread - 34) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/16/a2971cc781d6fcb090a3c7f86252b2348dd166/content
20:25:04,173 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
20:25:04,174 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:25:04,191 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
20:25:04,262 INFO  [org.jboss.as.server] (management-handler-thread - 34) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
20:25:04,263 INFO  [org.jboss.as.repository] (management-handler-thread - 34) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/e4/1a895c51d147bb2e3fd00ac381313ab8806f0d/content
20:25:04,800 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
20:25:04,802 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
20:25:04,897 INFO  [org.jboss.as.repository] (management-handler-thread - 34) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/16/a2971cc781d6fcb090a3c7f86252b2348dd166/content
20:25:04,897 INFO  [org.jboss.as.server] (management-handler-thread - 34) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:25:04,948 INFO  [org.jboss.as.repository] (management-handler-thread - 35) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/1f/f78ec3bfad7ff71fbf073db11efd8143ab0453/content
20:25:04,949 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:25:04,966 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
20:25:05,041 INFO  [org.jboss.as.server] (management-handler-thread - 35) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:25:06,719 INFO  [org.teiid.PLANNER] (Worker12_QueryProcessorQueue40) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

20:27:38,724 WARN  [org.teiid.PROCESSOR] (Worker14_QueryProcessorQueue44) TEIID30020 Processing exception for request D0WLHV34h8hi.0 'Group does not exist: expensesReportsViewTable'. Originally QueryResolverException ResolverUtil.java:814. Enable more detailed logging to see the entire stacktrace.
20:29:43,511 INFO  [org.teiid.PLANNER] (Worker15_QueryProcessorQueue45) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

20:30:05,923 WARN  [org.teiid.PROCESSOR] (Worker15_QueryProcessorQueue49) TEIID30020 Processing exception for request 25k7/tgPrTqb.0 'TEIID31118 Element "office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
20:30:33,690 WARN  [org.teiid.PROCESSOR] (Worker15_QueryProcessorQueue50) TEIID30020 Processing exception for request 4hwlyKzy5Zw5.0 'TEIID31118 Element "office" is not defined by any relevant group.'. Originally QueryResolverException ResolverVisitor.java:114. Enable more detailed logging to see the entire stacktrace.
20:31:11,567 INFO  [org.jboss.as.repository] (management-handler-thread - 44) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/e3/7487009772d1a21bd941973b2a718e195e345e/content
20:31:11,568 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
20:31:11,568 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
20:31:11,571 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 3ms
20:31:11,572 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
20:31:11,588 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 8:31 PM
20:31:11,590 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 8:31 PM
20:31:11,596 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 2) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
20:31:11,596 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
20:31:11,597 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
20:31:11,660 INFO  [org.jboss.as.server] (management-handler-thread - 44) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
20:31:11,661 INFO  [org.jboss.as.repository] (management-handler-thread - 44) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ec/9fd3ff04198aa0d0b03b4589a1baba3d3a982d/content
20:31:12,191 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:31:12,192 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:31:12,253 INFO  [org.jboss.as.repository] (management-handler-thread - 45) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/f2/fa1a4fd345dac17290a4dca6eacb632d20e90e/content
20:31:12,255 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource}]" undeployed.
20:31:12,258 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb) in 3ms
20:31:12,258 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
20:31:12,276 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 8:31 PM
20:31:12,278 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 8:31 PM
20:31:12,287 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 is set to ACTIVE
20:31:12,355 INFO  [org.jboss.as.server] (management-handler-thread - 45) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb"
20:31:12,355 INFO  [org.jboss.as.repository] (management-handler-thread - 45) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ca/eeeadfbfa407597bd9301ffdcd86c488f3f7df/content
20:31:12,965 INFO  [org.jboss.as.repository] (management-handler-thread - 42) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/43/86846bedec9b0ff22c946696d1ee448a568fac/content
20:31:12,969 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
20:31:12,970 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
20:31:12,985 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
20:31:13,083 INFO  [org.jboss.as.server] (management-handler-thread - 42) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
20:31:13,083 INFO  [org.jboss.as.repository] (management-handler-thread - 42) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/1f/f78ec3bfad7ff71fbf073db11efd8143ab0453/content
20:31:14,853 INFO  [org.teiid.PLANNER] (Worker15_QueryProcessorQueue51) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

20:31:54,961 INFO  [org.teiid.PLANNER] (Worker15_QueryProcessorQueue55) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A."id;office;department;author;date;amount" FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"=A."id;office;department;author;date;amount"}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
    Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A."id;office;department;author;date;amount"], OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS "id;office;department;author;date;amount" string HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A."id;office;department;author;date;amount"], EST_COL_STATS={A."id;office;department;author;date;amount"=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A."id;office;department;author;date;amount"], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:48910a4e-13b4-4a14-8579-51882f08fe4d, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A."id;office;department;author;date;amount"] [A."id;office;department;author;date;amount"]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A."id;office;department;author;date;amount"]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A."id;office;department;author;date;amount"] 

============================================================================

20:32:58,693 INFO  [org.jboss.as.repository] (management-handler-thread - 43) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/df/2df8000183d413463a7aacb75078a4b2dd1d80/content
20:32:58,694 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "ExpensesVDB.1[expenseReportsView{}, expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}]" undeployed.
20:32:58,698 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 3ms
20:32:58,699 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
20:32:58,723 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 8:32 PM
20:32:58,727 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 8:32 PM
20:32:58,734 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 8:32 PM
20:32:58,737 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 8:32 PM
20:32:58,748 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
20:32:58,804 INFO  [org.jboss.as.server] (management-handler-thread - 43) JBAS018565: Replaced deployment "ExpensesVDB.vdb" with deployment "ExpensesVDB.vdb"
20:32:58,805 INFO  [org.jboss.as.repository] (management-handler-thread - 43) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/07/a5fed2de991c47d172bb4e6143f1bab573baea/content
20:32:59,626 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) JBAS010400: Bound data source [java:/ExpensesDS]
20:33:24,315 INFO  [org.teiid.PLANNER] (Worker15_QueryProcessorQueue59) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

20:33:39,880 INFO  [org.teiid.PLANNER] (Worker15_QueryProcessorQueue63) 
============================================================================
USER COMMAND:
SELECT office FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT office FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT office FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[office]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[office]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[office], OUTPUT_COLS=[office]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.office=A.office}, OUTPUT_COLS=[office]})
    Project(groups=[A], props={PROJECT_COLS=[A.office], OUTPUT_COLS=[A.office]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.office]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.office], OUTPUT_COLS=[office]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.office], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.office], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.office], OUTPUT_COLS=[A.office]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.office]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.office], OUTPUT_COLS=[A.office], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.office], EST_COL_STATS={A.office=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.office], EST_COL_STATS={A.office=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.office], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.office] [A.office]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.office]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.office] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.office] [A.office]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.office]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.office] 

============================================================================

20:34:31,619 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (http-localhost/127.0.0.1:8080-2) Session tMVPyIkYTzTU-0zs7V6A5Gr8 created. 1 active sessions.
20:34:31,621 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /redhat/RH-Product-Name.png
20:34:41,027 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/home-image.jpg
20:34:41,310 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/home-image.jpg
20:34:46,179 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/AdministrationImage.jpg
20:34:46,486 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/AdministrationImage.jpg
20:35:38,643 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/SampleDashboardsImage.jpg
20:35:38,946 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/SampleDashboardsImage.jpg
20:43:20,113 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
20:43:20,447 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
20:43:20,449 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-1) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote
20:43:20,450 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
20:43:20,451 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-2) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote]
20:43:41,309 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:43:41,310 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:43:53,417 INFO  [org.jboss.as.repository] (management-handler-thread - 52) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/8f/54bf92fd2e19b900de3a29d7451ee94f354eaa/content
20:43:53,418 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb")
20:43:53,437 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.1 model "StockQuoteView" metadata is currently being loaded. Start Time: 9/3/13 8:43 PM
20:43:53,440 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.1 model "StockQuoteView" metadata loaded. End Time: 9/3/13 8:43 PM
20:43:53,520 INFO  [org.jboss.as.server] (management-handler-thread - 52) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb")
20:43:53,555 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 2) TEIID31080 View StockQuoteView.GetQuote validation error: QueryResolverException-TEIID30352 STOCKQUOTE.INVOKE does not exist.->QueryMetadataException
20:43:53,555 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
20:43:53,555 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.1 is set to ACTIVE
20:43:54,112 INFO  [org.jboss.as.repository] (management-handler-thread - 53) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/d4/29985886fcd5d27d43443aa8a1468cb4826c2e/content
20:43:54,113 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb")
20:43:54,130 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.1 is set to ACTIVE
20:43:54,205 INFO  [org.jboss.as.server] (management-handler-thread - 53) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb")
20:43:54,726 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
20:43:54,789 INFO  [org.jboss.as.repository] (management-handler-thread - 52) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ac/844009eeca2a26544a45f3033ca262a1d0ebb3/content
20:43:54,790 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb")
20:43:54,810 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.1 model "StockQuote" metadata is currently being loaded. Start Time: 9/3/13 8:43 PM
20:43:54,813 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.1 model "StockQuote" metadata loaded. End Time: 9/3/13 8:43 PM
20:43:54,821 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.1 is set to ACTIVE
20:43:54,891 INFO  [org.jboss.as.server] (management-handler-thread - 52) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb")
20:43:55,434 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.1[]" undeployed.
20:43:55,437 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb) in 4ms
20:43:55,542 INFO  [org.jboss.as.repository] (management-handler-thread - 50) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/d4/29985886fcd5d27d43443aa8a1468cb4826c2e/content
20:43:55,543 INFO  [org.jboss.as.server] (management-handler-thread - 50) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb")
20:43:55,593 INFO  [org.jboss.as.repository] (management-handler-thread - 52) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/bc/6c54f3c2298553f4f79ec76fae318fc9a82d82/content
20:43:55,594 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb")
20:43:55,608 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.1 is set to ACTIVE
20:43:55,687 INFO  [org.jboss.as.server] (management-handler-thread - 52) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb")
20:44:04,702 INFO  [org.teiid.PLANNER] (Worker17_QueryProcessorQueue95) 
============================================================================
USER COMMAND:
SELECT * FROM (EXEC StockQuoteView.GetQuote('RHT')) AS X_X

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM (EXEC StockQuoteView.GetQuote('RHT')) AS X_X

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM (EXEC StockQuoteView.GetQuote('RHT')) AS X_X

----------------------------------------------------------------------------
OPTIMIZE: 
CREATE VIRTUAL PROCEDURE
BEGIN
SELECT t.* FROM TABLE(EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol)) AS request, TABLE(EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)) AS response, TABLE(EXEC StockQuoteView.GetQuote_response(RESPONSE.result)) AS t;
END

####################################################
PROCEDURE COMMAND: CREATE VIRTUAL PROCEDURE
BEGIN
SELECT t.* FROM TABLE(EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol)) AS request, TABLE(EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)) AS response, TABLE(EXEC StockQuoteView.GetQuote_response(RESPONSE.result)) AS t;
END
OPTIMIZING SUB-COMMANDS: 

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT t.* FROM TABLE(EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol)) AS request, TABLE(EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)) AS response, TABLE(EXEC StockQuoteView.GetQuote_response(RESPONSE.result)) AS t

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT t.* FROM TABLE(EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol)) AS request, TABLE(EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)) AS response, TABLE(EXEC StockQuoteView.GetQuote_response(RESPONSE.result)) AS t

----------------------------------------------------------------------------
OPTIMIZE: 
CREATE VIRTUAL PROCEDURE
BEGIN
SELECT XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), XMLELEMENT(NAME "soap:Header"), XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out;
END

####################################################
PROCEDURE COMMAND: CREATE VIRTUAL PROCEDURE
BEGIN
SELECT XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out;
END
OPTIMIZING SUB-COMMANDS: 

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out

CANONICAL PLAN: 
Project(groups=[], props={PROJECT_COLS=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out]})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[], props={PROJECT_COLS=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out]})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[], props={PROJECT_COLS=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out], OUTPUT_COLS=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[], props={PROJECT_COLS=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out], OUTPUT_COLS=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out], EST_CARDINALITY=1.0, EST_COL_STATS={XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out=[1.0, 0.0]}})


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out] [XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out]

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out] [XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out]

============================================================================
	COMMAND STATEMENT:
 SELECT XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out;
		STATEMENT COMMAND PROCESS PLAN:
 ProjectNode(0) output=[XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out] [XMLELEMENT(NAME "soap:Envelope", XMLNAMESPACES('http://schemas.xmlsoap.org/soap/envelope/' AS soap, 'http://www.webserviceX.NET/' AS tns), ?, XMLELEMENT(NAME "soap:Body", XMLELEMENT(NAME GetQuote, XMLELEMENT(NAME symbol, StockQuoteView.GetQuote_request.symbol)))) AS xml_out]


####################################################
####################################################
PROCEDURE PLAN :ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null

####################################################

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null

============================================================================

----------------------------------------------------------------------------
OPTIMIZE: 
CREATE VIRTUAL PROCEDURE
BEGIN
SELECT t.* FROM XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t;
END

####################################################
PROCEDURE COMMAND: CREATE VIRTUAL PROCEDURE
BEGIN
SELECT t.* FROM XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t;
END
OPTIMIZING SUB-COMMANDS: 

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT t.* FROM XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT t.* FROM XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t

CANONICAL PLAN: 
Project(groups=[t], props={PROJECT_COLS=[t.GetQuoteResult]})
  Source(groups=[t], props={TABLE_FUNCTION=XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[t], props={PROJECT_COLS=[t.GetQuoteResult]})
  Source(groups=[t], props={TABLE_FUNCTION=XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[t])
  Source(groups=[t])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[t], props={PROJECT_COLS=[t.GetQuoteResult], OUTPUT_COLS=[t.GetQuoteResult]})
  Source(groups=[t], props={TABLE_FUNCTION=XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t, OUTPUT_COLS=[t.GetQuoteResult]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[t], props={PROJECT_COLS=[t.GetQuoteResult], OUTPUT_COLS=[t.GetQuoteResult], EST_CARDINALITY=-1.0})
  Source(groups=[t], props={TABLE_FUNCTION=XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t, OUTPUT_COLS=[t.GetQuoteResult], EST_COL_STATS={t.GetQuoteResult=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[t])
  Source(groups=[t])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[t])
  Source(groups=[t])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE
MEDIUM XQuery Planning Invalid streaming path /soap:Envelope /soap:Envelope refers to only the root element - Document streaming will not be used
MEDIUM XQuery Planning Projection conditions met for /soap:Envelope - Document projection will be used
child::element({http://schemas.xmlsoap.org/soap/envelope/}Envelope, xs:anyType)
  child::element({http://schemas.xmlsoap.org/soap/envelope/}Body, xs:anyType)
    child::element({http://www.webserviceX.NET/}GetQuoteResponse, xs:anyType)
      child::element({http://www.webserviceX.NET/}GetQuoteResult, xs:anyType)
        child::text()


PROCESS PLAN = 
ProjectNode(1) output=[t.GetQuoteResult] [t.GetQuoteResult]
  XMLTableNode(2) output=[t.GetQuoteResult] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(1) output=[t.GetQuoteResult] [t.GetQuoteResult]
  XMLTableNode(2) output=[t.GetQuoteResult] 

============================================================================
	COMMAND STATEMENT:
 SELECT t.* FROM XMLTABLE(XMLNAMESPACES('http://www.webserviceX.NET/' AS tns, 'http://schemas.xmlsoap.org/soap/envelope/' AS soap), '/soap:Envelope' PASSING StockQuoteView.GetQuote_response.xml_in COLUMNS GetQuoteResult string PATH '/soap:Body/tns:GetQuoteResponse/tns:GetQuoteResult') AS t;
		STATEMENT COMMAND PROCESS PLAN:
 ProjectNode(1) output=[t.GetQuoteResult] [t.GetQuoteResult]
  XMLTableNode(2) output=[t.GetQuoteResult] 


####################################################
####################################################
PROCEDURE PLAN :ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null

####################################################

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null

============================================================================

CANONICAL PLAN: 
Project(groups=[t], props={PROJECT_COLS=[t.GetQuoteResult]})
  Join(groups=[request, response, t], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
          Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result]})
          Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)})
    Source(groups=[t], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})
        Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[t AS t__1], props={PROJECT_COLS=[t__1.GetQuoteResult]})
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result]})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)})
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[t AS t__1], props={PROJECT_COLS=[t__1.GetQuoteResult], OUTPUT_COLS=[t__1.GetQuoteResult]})
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[t__1.GetQuoteResult]})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[RESPONSE.result]})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}, OUTPUT_COLS=[REQUEST.xml_out]})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out], OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
          Access(groups=[StockQuoteView.GetQuote_request], props={OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=[RESPONSE.result]})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=[StockQuote.invoke.result]})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=[StockQuote.invoke.result]})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=[StockQuote.invoke.result]})
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=[t__1.GetQuoteResult]})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})
        Access(groups=[StockQuoteView.GetQuote_response], props={OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})
          Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1])
    Join(groups=[request, response])
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=[RESPONSE.result]})
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=[t__1.GetQuoteResult]})
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[t__1.GetQuoteResult]})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[RESPONSE.result]})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[t AS t__1], props={PROJECT_COLS=[t__1.GetQuoteResult], OUTPUT_COLS=null})
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}, OUTPUT_COLS=null})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out], OUTPUT_COLS=null})
          Access(groups=[StockQuoteView.GetQuote_request], props={OUTPUT_COLS=null})
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=null})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=null})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=null})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=null})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=null})
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=null})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], OUTPUT_COLS=null})
        Access(groups=[StockQuoteView.GetQuote_response], props={OUTPUT_COLS=null})
          Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1])
    Join(groups=[request, response])
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=null})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=null})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=null})
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[t AS t__1], props={PROJECT_COLS=[t__1.GetQuoteResult], OUTPUT_COLS=null})
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}, OUTPUT_COLS=null})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out], OUTPUT_COLS=null})
          Access(groups=[StockQuoteView.GetQuote_request], props={OUTPUT_COLS=null})
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=null})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=null})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=null})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=null})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=null})
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=null})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], OUTPUT_COLS=null})
        Access(groups=[StockQuoteView.GetQuote_response], props={OUTPUT_COLS=null})
          Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=null})
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=null})
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1])
    Join(groups=[request, response])
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1])
    Join(groups=[request, response])
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=null})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=null})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=null})
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[t AS t__1], props={PROJECT_COLS=[t__1.GetQuoteResult], OUTPUT_COLS=[t__1.GetQuoteResult]})
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[t__1.GetQuoteResult], IS_COPIED=true})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[RESPONSE.result], IS_COPIED=true})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}, OUTPUT_COLS=[REQUEST.xml_out]})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out], OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
          Access(groups=[StockQuoteView.GetQuote_request], props={OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out]})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=[RESPONSE.result]})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=[StockQuote.invoke.result]})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=[StockQuote.invoke.result]})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=[StockQuote.invoke.result]})
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=[t__1.GetQuoteResult]})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})
        Access(groups=[StockQuoteView.GetQuote_response], props={OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})
          Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[t AS t__1], props={PROJECT_COLS=[t__1.GetQuoteResult], OUTPUT_COLS=[t__1.GetQuoteResult], EST_CARDINALITY=-1.0})
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[t__1.GetQuoteResult], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[RESPONSE.result], IS_COPIED=true, EST_CARDINALITY=-1.0})
      Source(groups=[request], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), SYMBOL_MAP={request.xml_out=StockQuoteView.GetQuote_request.xml_out}, OUTPUT_COLS=[REQUEST.xml_out], EST_CARDINALITY=-1.0, EST_COL_STATS={REQUEST.xml_out=[-1.0, -1.0]}})
        Project(groups=[StockQuoteView.GetQuote_request], props={PROJECT_COLS=[StockQuoteView.GetQuote_request.xml_out], OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out], EST_CARDINALITY=-1.0})
          Access(groups=[StockQuoteView.GetQuote_request], props={OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out], EST_CARDINALITY=-1.0})
            Source(groups=[StockQuoteView.GetQuote_request], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out], EST_COL_STATS={StockQuoteView.GetQuote_request.xml_out=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=[RESPONSE.result], EST_CARDINALITY=-1.0})
        Project(groups=[StockQuote.invoke], props={PROJECT_COLS=[StockQuote.invoke.result], OUTPUT_COLS=[StockQuote.invoke.result], EST_CARDINALITY=-1.0})
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=[StockQuote.invoke.result], EST_CARDINALITY=-1.0})
            Source(groups=[StockQuote.invoke], props={VIRTUAL_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), OUTPUT_COLS=[StockQuote.invoke.result], EST_COL_STATS={StockQuote.invoke.result=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=[t__1.GetQuoteResult], EST_CARDINALITY=-1.0})
      Project(groups=[StockQuoteView.GetQuote_response], props={PROJECT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], EST_CARDINALITY=-1.0})
        Access(groups=[StockQuoteView.GetQuote_response], props={OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], EST_CARDINALITY=-1.0})
          Source(groups=[StockQuoteView.GetQuote_response], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], EST_COL_STATS={StockQuoteView.GetQuote_response.GetQuoteResult=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[t__1.GetQuoteResult], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[RESPONSE.result], IS_COPIED=true, EST_CARDINALITY=-1.0})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response], props={CORRELATED_REFERENCES={REQUEST.xml_out=REQUEST.xml_out}, NESTED_COMMAND=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE), SYMBOL_MAP={response.result=StockQuote.invoke.result}, OUTPUT_COLS=[RESPONSE.result], EST_CARDINALITY=-1.0})
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1], props={CORRELATED_REFERENCES={RESPONSE.result=RESPONSE.result}, NESTED_COMMAND=EXEC StockQuoteView.GetQuote_response(RESPONSE.result), SYMBOL_MAP={t__1.GetQuoteResult=StockQuoteView.GetQuote_response.GetQuoteResult}, OUTPUT_COLS=[t__1.GetQuoteResult], EST_CARDINALITY=-1.0})
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1])
    Join(groups=[request, response])
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[t__1.GetQuoteResult], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Join(groups=[request, response], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[RESPONSE.result], IS_COPIED=true, EST_CARDINALITY=-1.0})
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request])
            Source(groups=[StockQuoteView.GetQuote_request])
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke])
            Source(groups=[StockQuote.invoke])
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response])
          Source(groups=[StockQuoteView.GetQuote_response])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[t AS t__1])
  Join(groups=[request, response, t AS t__1])
    Join(groups=[request, response])
      Source(groups=[request])
        Project(groups=[StockQuoteView.GetQuote_request])
          Access(groups=[StockQuoteView.GetQuote_request], props={OUTPUT_COLS=[StockQuoteView.GetQuote_request.xml_out], EST_CARDINALITY=-1.0, PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, ATOMIC_REQUEST=EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol)})
      Source(groups=[response])
        Project(groups=[StockQuote.invoke])
          Access(groups=[StockQuote.invoke], props={MODEL_ID=Schema name=StockQuote, nameInSource=null, uuid=mmuuid:72963b5e-ca1b-4287-b4cd-173bc6a5a146, OUTPUT_COLS=[StockQuote.invoke.result], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)})
    Source(groups=[t AS t__1])
      Project(groups=[StockQuoteView.GetQuote_response])
        Access(groups=[StockQuoteView.GetQuote_response], props={OUTPUT_COLS=[StockQuoteView.GetQuote_response.GetQuoteResult], EST_CARDINALITY=-1.0, PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, ATOMIC_REQUEST=EXEC StockQuoteView.GetQuote_response(RESPONSE.result)})


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(3) output=[t__1.GetQuoteResult] [t__1.GetQuoteResult]
  JoinNode(4) [NESTED TABLE JOIN] [CROSS JOIN] output=[t__1.GetQuoteResult]
    JoinNode(5) [NESTED TABLE JOIN] [CROSS JOIN] output=[RESPONSE.result]
      ProjectNode(6) output=[REQUEST.xml_out] [StockQuoteView.GetQuote_request.xml_out]
        PlanExecutionNode(7) output=[StockQuoteView.GetQuote_request.xml_out] 
      ProjectNode(8) output=[RESPONSE.result] [StockQuote.invoke.result]
        AccessNode(9) output=[StockQuote.invoke.result] EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)
    ProjectNode(10) output=[t__1.GetQuoteResult] [StockQuoteView.GetQuote_response.GetQuoteResult]
      PlanExecutionNode(11) output=[StockQuoteView.GetQuote_response.GetQuoteResult] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(3) output=[t__1.GetQuoteResult] [t__1.GetQuoteResult]
  JoinNode(4) [NESTED TABLE JOIN] [CROSS JOIN] output=[t__1.GetQuoteResult]
    JoinNode(5) [NESTED TABLE JOIN] [CROSS JOIN] output=[RESPONSE.result]
      ProjectNode(6) output=[REQUEST.xml_out] [StockQuoteView.GetQuote_request.xml_out]
        PlanExecutionNode(7) output=[StockQuoteView.GetQuote_request.xml_out] 
      ProjectNode(8) output=[RESPONSE.result] [StockQuote.invoke.result]
        AccessNode(9) output=[StockQuote.invoke.result] EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)
    ProjectNode(10) output=[t__1.GetQuoteResult] [StockQuoteView.GetQuote_response.GetQuoteResult]
      PlanExecutionNode(11) output=[StockQuoteView.GetQuote_response.GetQuoteResult] 

============================================================================
	COMMAND STATEMENT:
 SELECT t.* FROM (TABLE(EXEC StockQuoteView.GetQuote_request(StockQuoteView.GetQuote.symbol)) AS request CROSS JOIN TABLE(EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)) AS response) CROSS JOIN TABLE(EXEC StockQuoteView.GetQuote_response(RESPONSE.result)) AS t;
		STATEMENT COMMAND PROCESS PLAN:
 ProjectNode(3) output=[t__1.GetQuoteResult] [t__1.GetQuoteResult]
  JoinNode(4) [NESTED TABLE JOIN] [CROSS JOIN] output=[t__1.GetQuoteResult]
    JoinNode(5) [NESTED TABLE JOIN] [CROSS JOIN] output=[RESPONSE.result]
      ProjectNode(6) output=[REQUEST.xml_out] [StockQuoteView.GetQuote_request.xml_out]
        PlanExecutionNode(7) output=[StockQuoteView.GetQuote_request.xml_out] 
      ProjectNode(8) output=[RESPONSE.result] [StockQuote.invoke.result]
        AccessNode(9) output=[StockQuote.invoke.result] EXEC StockQuote.invoke('SOAP11', 'http://www.webserviceX.NET/GetQuote', REQUEST.xml_out, null, TRUE)
    ProjectNode(10) output=[t__1.GetQuoteResult] [StockQuoteView.GetQuote_response.GetQuoteResult]
      PlanExecutionNode(11) output=[StockQuoteView.GetQuote_response.GetQuoteResult] 


####################################################
####################################################
PROCEDURE PLAN :ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null

####################################################

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null

============================================================================

CANONICAL PLAN: 
Project(groups=[X_X], props={PROJECT_COLS=[X_X.GetQuoteResult]})
  Source(groups=[X_X], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), SYMBOL_MAP={X_X.GetQuoteResult=StockQuoteView.GetQuote.GetQuoteResult}})
    Project(groups=[StockQuoteView.GetQuote], props={PROJECT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})
      Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[X_X], props={PROJECT_COLS=[X_X.GetQuoteResult]})
  Source(groups=[X_X], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), SYMBOL_MAP={X_X.GetQuoteResult=StockQuoteView.GetQuote.GetQuoteResult}})
    Project(groups=[StockQuoteView.GetQuote], props={PROJECT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})
      Access(groups=[StockQuoteView.GetQuote])
        Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[X_X], props={PROJECT_COLS=[X_X.GetQuoteResult], OUTPUT_COLS=[X_X.GetQuoteResult]})
  Source(groups=[X_X], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), SYMBOL_MAP={X_X.GetQuoteResult=StockQuoteView.GetQuote.GetQuoteResult}, OUTPUT_COLS=[X_X.GetQuoteResult]})
    Project(groups=[StockQuoteView.GetQuote], props={PROJECT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})
      Access(groups=[StockQuoteView.GetQuote], props={OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})
        Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[X_X])
  Source(groups=[X_X])
    Project(groups=[StockQuoteView.GetQuote])
      Access(groups=[StockQuoteView.GetQuote])
        Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[X_X], props={PROJECT_COLS=[X_X.GetQuoteResult], OUTPUT_COLS=null})
  Source(groups=[X_X], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), SYMBOL_MAP={X_X.GetQuoteResult=StockQuoteView.GetQuote.GetQuoteResult}, OUTPUT_COLS=null})
    Project(groups=[StockQuoteView.GetQuote], props={PROJECT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], OUTPUT_COLS=null})
      Access(groups=[StockQuoteView.GetQuote], props={OUTPUT_COLS=null})
        Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[X_X])
  Source(groups=[X_X])
    Project(groups=[StockQuoteView.GetQuote])
      Access(groups=[StockQuoteView.GetQuote])
        Source(groups=[StockQuoteView.GetQuote])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[X_X], props={PROJECT_COLS=[X_X.GetQuoteResult], OUTPUT_COLS=[X_X.GetQuoteResult]})
  Source(groups=[X_X], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), SYMBOL_MAP={X_X.GetQuoteResult=StockQuoteView.GetQuote.GetQuoteResult}, OUTPUT_COLS=[X_X.GetQuoteResult]})
    Project(groups=[StockQuoteView.GetQuote], props={PROJECT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})
      Access(groups=[StockQuoteView.GetQuote], props={OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})
        Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[X_X], props={PROJECT_COLS=[X_X.GetQuoteResult], OUTPUT_COLS=[X_X.GetQuoteResult], EST_CARDINALITY=-1.0})
  Source(groups=[X_X], props={NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), SYMBOL_MAP={X_X.GetQuoteResult=StockQuoteView.GetQuote.GetQuoteResult}, OUTPUT_COLS=[X_X.GetQuoteResult], EST_CARDINALITY=-1.0, EST_COL_STATS={X_X.GetQuoteResult=[-1.0, -1.0]}})
    Project(groups=[StockQuoteView.GetQuote], props={PROJECT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], EST_CARDINALITY=-1.0})
      Access(groups=[StockQuoteView.GetQuote], props={OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], EST_CARDINALITY=-1.0})
        Source(groups=[StockQuoteView.GetQuote], props={VIRTUAL_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), NESTED_COMMAND=EXEC StockQuoteView.GetQuote('RHT'), PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], EST_COL_STATS={StockQuoteView.GetQuote.GetQuoteResult=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[X_X])
  Source(groups=[X_X])
    Project(groups=[StockQuoteView.GetQuote])
      Access(groups=[StockQuoteView.GetQuote])
        Source(groups=[StockQuoteView.GetQuote])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[X_X])
  Source(groups=[X_X])
    Project(groups=[StockQuoteView.GetQuote])
      Access(groups=[StockQuoteView.GetQuote], props={OUTPUT_COLS=[StockQuoteView.GetQuote.GetQuoteResult], EST_CARDINALITY=-1.0, PROCESSOR_PLAN=ProcedurePlan:
PROGRAM counter 0
0:  CREATE CURSOR RESULTSET INSTRUCTION - null
, ATOMIC_REQUEST=EXEC StockQuoteView.GetQuote('RHT')})


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(12) output=[X_X.GetQuoteResult] [X_X.GetQuoteResult]
  ProjectNode(13) output=[X_X.GetQuoteResult] [StockQuoteView.GetQuote.GetQuoteResult]
    PlanExecutionNode(14) output=[StockQuoteView.GetQuote.GetQuoteResult] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(12) output=[X_X.GetQuoteResult] [X_X.GetQuoteResult]
  ProjectNode(13) output=[X_X.GetQuoteResult] [StockQuoteView.GetQuote.GetQuoteResult]
    PlanExecutionNode(14) output=[StockQuoteView.GetQuote.GetQuoteResult] 

============================================================================

20:44:04,961 INFO  [org.apache.cxf.service.factory.ReflectionServiceFactoryBean] (Worker18_QueryProcessorQueue96) Creating Service {http://teiid.org}teiid from class org.apache.cxf.jaxws.support.DummyImpl
20:44:05,610 ERROR [org.teiid.CONNECTOR] (Worker18_QueryProcessorQueue96) Connector worker process failed for atomic-request=qfp1YCQBIkcv.0.9.21: java.lang.ClassCastException: javax.xml.transform.dom.DOMSource cannot be cast to javax.xml.transform.stax.StAXSource
	at org.teiid.translator.ws.WSProcedureExecution.execute(WSProcedureExecution.java:135)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

20:44:05,612 ERROR [org.teiid.PROCESSOR] (Worker17_QueryProcessorQueue97) TEIID30019 Unexpected exception for request qfp1YCQBIkcv.0: java.lang.ClassCastException: javax.xml.transform.dom.DOMSource cannot be cast to javax.xml.transform.stax.StAXSource
	at org.teiid.translator.ws.WSProcedureExecution.execute(WSProcedureExecution.java:135)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

21:04:16,729 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/AdministrationImage.jpg
21:04:17,174 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/AdministrationImage.jpg
21:08:43,061 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:08:43,113 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "ExpensesVDB.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}, expenseReportsView{}]" undeployed.
21:08:43,116 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 3ms
21:08:43,117 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
21:08:43,135 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 9:08 PM
21:08:43,135 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:08 PM
21:08:43,137 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 9:08 PM
21:08:43,137 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:08 PM
21:08:43,147 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
21:08:43,256 INFO  [org.jboss.as.server] (management-handler-thread - 54) JBAS018565: Replaced deployment "ExpensesVDB.vdb" with deployment "ExpensesVDB.vdb"
21:30:27,656 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-6) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:30:27,961 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-6) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:42:40,094 INFO  [org.teiid.PLANNER] (Worker21_QueryProcessorQueue118) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:43:03,715 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50026 VDB "ExpensesVDB.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}, expenseReportsView{}]" undeployed.
21:43:03,717 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 2ms
21:43:03,718 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
21:43:03,737 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 9:43 PM
21:43:03,737 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:43 PM
21:43:03,739 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 9:43 PM
21:43:03,739 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:43 PM
21:43:03,750 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
21:43:03,826 INFO  [org.jboss.as.server] (management-handler-thread - 70) JBAS018565: Replaced deployment "ExpensesVDB.vdb" with deployment "ExpensesVDB.vdb"
21:43:19,318 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/AdministrationImage.jpg
21:43:19,756 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-5) Redirecting to static URI: /images/AdministrationImage.jpg
21:43:32,490 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:43:32,994 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-6) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:44:05,909 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/AdministrationImage.jpg
21:44:06,442 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/AdministrationImage.jpg
21:44:46,007 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-2) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:44:46,282 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-3) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:45:59,198 INFO  [org.teiid.PLANNER] (Worker21_QueryProcessorQueue154) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:46:25,270 INFO  [org.jboss.as.repository] (management-handler-thread - 75) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ef/529a77a661150999054d9329450898fc958e40/content
21:46:25,272 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
21:46:25,272 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
21:46:25,273 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 2ms
21:46:25,274 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
21:46:25,297 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:46 PM
21:46:25,299 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:46 PM
21:46:25,306 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
21:46:25,306 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
21:46:25,306 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
21:46:25,381 INFO  [org.jboss.as.server] (management-handler-thread - 75) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
21:46:25,381 INFO  [org.jboss.as.repository] (management-handler-thread - 75) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/e3/7487009772d1a21bd941973b2a718e195e345e/content
21:46:25,960 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 2ms
21:46:25,961 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:46:25,977 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
21:46:26,059 INFO  [org.jboss.as.server] (management-handler-thread - 75) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
21:46:26,597 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
21:46:26,601 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 5ms
21:46:26,687 INFO  [org.jboss.as.repository] (management-handler-thread - 73) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/43/86846bedec9b0ff22c946696d1ee448a568fac/content
21:46:26,687 INFO  [org.jboss.as.server] (management-handler-thread - 73) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:46:26,754 INFO  [org.jboss.as.repository] (management-handler-thread - 73) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/96/4c3d87d9ea3b9dc6a8f9a2c176f07731d6bcd7/content
21:46:26,755 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:46:26,773 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
21:46:26,856 INFO  [org.jboss.as.server] (management-handler-thread - 73) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:46:27,512 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:46:27,515 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:46:27,516 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:46:28,650 INFO  [org.teiid.PLANNER] (Worker21_QueryProcessorQueue158) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:46:28,655 WARN  [org.teiid.PROCESSOR] (Worker21_QueryProcessorQueue160) TEIID30020 Processing exception for request yu145dYK2J42.0 'TEIID30176 Could not convert value for column amount in the row ending on text line 3 in file:/home/kpeeples/mystuff/demos/DV-BI/DV-data/teiid-dashboard-1.0.0-SNAPSHOT-jboss-as7.0/WEB-INF/etc/appdata/initialData/expenseReports.csv.'. Originally TeiidProcessingException 'TEIID10063 Invalid BigDecimal format in String: 1,100.10' StringToBigDecimalTransform.java:47. Enable more detailed logging to see the entire stacktrace.
21:47:38,945 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
21:47:38,945 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
21:47:38,950 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 6ms
21:47:38,950 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
21:47:38,968 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:47 PM
21:47:38,970 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:47 PM
21:47:38,979 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 1) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
21:47:38,979 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
21:47:38,979 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
21:47:39,053 INFO  [org.jboss.as.server] (management-handler-thread - 79) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
21:47:39,638 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource}]" undeployed.
21:47:39,640 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb) in 2ms
21:47:39,641 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
21:47:39,660 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 9:47 PM
21:47:39,661 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 9:47 PM
21:47:39,666 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 is set to ACTIVE
21:47:39,741 INFO  [org.jboss.as.server] (management-handler-thread - 80) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb"
21:47:40,410 INFO  [org.jboss.as.repository] (management-handler-thread - 78) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/3f/20dd51dbde98f52a164e15ddd99897dee7d0d1/content
21:47:40,413 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
21:47:40,414 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:47:40,431 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
21:47:40,620 INFO  [org.jboss.as.server] (management-handler-thread - 78) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
21:47:40,621 INFO  [org.jboss.as.repository] (management-handler-thread - 78) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/96/4c3d87d9ea3b9dc6a8f9a2c176f07731d6bcd7/content
21:47:41,142 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:47:41,293 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:47:42,466 INFO  [org.teiid.PLANNER] (Worker21_QueryProcessorQueue161) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:52:47,844 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/AdministrationImage.jpg
21:52:48,230 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-6) Redirecting to static URI: /images/AdministrationImage.jpg
21:53:00,273 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-4) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:53:00,630 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-1) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:53:52,331 INFO  [org.jboss.as.repository] (management-handler-thread - 85) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/0e/e0e8a570ec94bee71ece3b9c6326d8dba48b00/content
21:53:52,333 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
21:53:52,333 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
21:53:52,335 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 2ms
21:53:52,335 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
21:53:52,351 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:53 PM
21:53:52,353 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:53 PM
21:53:52,361 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 4) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
21:53:52,361 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
21:53:52,361 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
21:53:52,425 INFO  [org.jboss.as.server] (management-handler-thread - 85) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
21:53:52,426 INFO  [org.jboss.as.repository] (management-handler-thread - 85) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ef/529a77a661150999054d9329450898fc958e40/content
21:53:52,949 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:53:53,015 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
21:53:53,015 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:53:53,031 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
21:53:53,112 INFO  [org.jboss.as.server] (management-handler-thread - 86) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
21:53:53,639 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:53:53,644 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
21:53:53,647 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
21:53:53,730 INFO  [org.jboss.as.repository] (management-handler-thread - 83) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/3f/20dd51dbde98f52a164e15ddd99897dee7d0d1/content
21:53:53,731 INFO  [org.jboss.as.server] (management-handler-thread - 83) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:53:53,798 INFO  [org.jboss.as.repository] (management-handler-thread - 86) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/b1/ea790954e57e17a31cc9ef8ae7d8c2c88265b2/content
21:53:53,799 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:53:53,817 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
21:53:53,892 INFO  [org.jboss.as.server] (management-handler-thread - 86) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:53:54,409 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:53:55,180 INFO  [org.teiid.PLANNER] (Worker23_QueryProcessorQueue185) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:54:47,896 INFO  [org.teiid.PLANNER] (Worker23_QueryProcessorQueue189) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:56:31,738 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
21:56:31,739 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
21:56:31,741 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 3ms
21:56:31,742 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
21:56:31,761 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:56 PM
21:56:31,763 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:56 PM
21:56:31,768 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
21:56:31,768 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
21:56:31,769 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
21:56:31,840 INFO  [org.jboss.as.server] (management-handler-thread - 93) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
21:56:32,417 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource}]" undeployed.
21:56:32,419 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb) in 2ms
21:56:32,420 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
21:56:32,436 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 9:56 PM
21:56:32,437 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 9:56 PM
21:56:32,443 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 is set to ACTIVE
21:56:32,518 INFO  [org.jboss.as.server] (management-handler-thread - 87) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb"
21:56:33,127 INFO  [org.jboss.as.repository] (management-handler-thread - 91) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/01/5bc6bd4ba54984fd3d10d80d02f3bdd2832c61/content
21:56:33,131 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
21:56:33,131 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
21:56:33,148 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
21:56:33,237 INFO  [org.jboss.as.server] (management-handler-thread - 91) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
21:56:33,237 INFO  [org.jboss.as.repository] (management-handler-thread - 91) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/b1/ea790954e57e17a31cc9ef8ae7d8c2c88265b2/content
21:56:34,308 INFO  [org.teiid.PLANNER] (Worker23_QueryProcessorQueue193) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

21:56:50,228 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:56:50,273 INFO  [org.jboss.as.repository] (management-handler-thread - 87) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/fd/96af956efdb861a09db04cf80fb12d22e71bd0/content
21:56:50,274 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "ExpensesVDB.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}, expenseReportsView{}]" undeployed.
21:56:50,277 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 3ms
21:56:50,277 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
21:56:50,294 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 9:56 PM
21:56:50,294 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 9:56 PM
21:56:50,300 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 9:56 PM
21:56:50,300 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 9:56 PM
21:56:50,312 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
21:56:50,368 INFO  [org.jboss.as.server] (management-handler-thread - 87) JBAS018565: Replaced deployment "ExpensesVDB.vdb" with deployment "ExpensesVDB.vdb"
21:56:50,369 INFO  [org.jboss.as.repository] (management-handler-thread - 87) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/df/2df8000183d413463a7aacb75078a4b2dd1d80/content
21:56:50,885 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
21:57:11,443 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (http-localhost/127.0.0.1:8080-6) Session tMVPyIkYTzTU-0zs7V6A5Gr8 expired. 0 active sessions.
21:57:11,452 WARN  [org.jboss.dashboard.ui.NavigationManager] (http-localhost/127.0.0.1:8080-6) Couldn't reposition navigation to a valid ubication.
21:57:11,454 WARN  [org.jboss.dashboard.ui.NavigationManager] (http-localhost/127.0.0.1:8080-6) Couldn't reposition navigation to a valid ubication.
21:57:11,463 WARN  [org.jboss.dashboard.ui.NavigationManager] (http-localhost/127.0.0.1:8080-6) Couldn't reposition navigation to a valid ubication.
21:57:11,465 WARN  [org.jboss.dashboard.ui.NavigationManager] (http-localhost/127.0.0.1:8080-6) Couldn't reposition navigation to a valid ubication.
21:57:17,701 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (http-localhost/127.0.0.1:8080-2) Session Ngl3GcDEBGCaR7rx1g0G7U30 created. 1 active sessions.
21:57:25,940 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-1) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:57:26,257 WARN  [org.jboss.dashboard.ui.components.ControllerStatus] (http-localhost/127.0.0.1:8080-1) Redirecting to static URI: /images/SampleDashboardsImage.jpg
21:58:41,520 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.1[StockQuoteView{}]" undeployed.
21:58:41,520 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.1[]" undeployed.
21:58:41,522 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb) in 2ms
21:58:41,665 INFO  [org.jboss.as.repository] (management-handler-thread - 97) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/8f/54bf92fd2e19b900de3a29d7451ee94f354eaa/content
21:58:41,665 INFO  [org.jboss.as.server] (management-handler-thread - 97) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_views_StockQuoteView.vdb")
21:58:41,668 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb) in 2ms
21:58:41,766 INFO  [org.jboss.as.repository] (management-handler-thread - 94) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/bc/6c54f3c2298553f4f79ec76fae318fc9a82d82/content
21:58:41,767 INFO  [org.jboss.as.server] (management-handler-thread - 94) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_project.vdb")
21:58:41,769 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.1[StockQuote{StockQuote=StockQuote, StockQuote_ws, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote}]" undeployed.
21:58:41,771 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb) in 2ms
21:58:41,843 INFO  [org.jboss.as.repository] (management-handler-thread - 96) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ac/844009eeca2a26544a45f3033ca262a1d0ebb3/content
21:58:41,843 INFO  [org.jboss.as.server] (management-handler-thread - 96) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote.vdb")
21:58:41,955 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-8) JBAS010410: Unbound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_StockModelProject_sources_StockQuote]
22:27:52,798 INFO  [org.jboss.dashboard.ui.controller.SessionCounter] (ContainerBackgroundProcessor[StandardEngine[jboss.web]]) Session Ngl3GcDEBGCaR7rx1g0G7U30 expired. 0 active sessions.
23:10:42,839 INFO  [org.teiid.PLANNER] (Worker25_QueryProcessorQueue205) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:10:42,843 WARN  [org.teiid.CONNECTOR] (Worker26_QueryProcessorQueue206) Connector worker process failed for atomic-request=T6wIKofLX3Wv.0.3.49: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:10:42,846 WARN  [org.teiid.PROCESSOR] (Worker25_QueryProcessorQueue207) TEIID30020 Processing exception for request T6wIKofLX3Wv.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:12:20,006 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:12:20,007 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:12:20,011 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 5ms
23:12:20,014 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
23:12:20,030 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:12 PM
23:12:20,032 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:12 PM
23:12:20,039 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:12:20,040 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:12:20,040 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
23:12:20,106 INFO  [org.jboss.as.server] (management-handler-thread - 105) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
23:12:20,693 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 2ms
23:12:20,694 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:12:20,709 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:12:20,783 INFO  [org.jboss.as.server] (management-handler-thread - 106) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:12:21,329 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:12:21,333 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 4ms
23:12:21,443 INFO  [org.jboss.as.repository] (management-handler-thread - 107) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/01/5bc6bd4ba54984fd3d10d80d02f3bdd2832c61/content
23:12:21,444 INFO  [org.jboss.as.server] (management-handler-thread - 107) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:12:21,512 INFO  [org.jboss.as.repository] (management-handler-thread - 106) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/1c/f0bb70de579a3028da0f846f84a04ae851e391/content
23:12:21,513 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:12:21,530 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:12:21,605 INFO  [org.jboss.as.server] (management-handler-thread - 106) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:12:22,602 INFO  [org.teiid.PLANNER] (Worker25_QueryProcessorQueue208) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:12:22,606 WARN  [org.teiid.CONNECTOR] (Worker26_QueryProcessorQueue209) Connector worker process failed for atomic-request=DxtW2q3jc3PJ.0.3.50: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:12:22,608 WARN  [org.teiid.PROCESSOR] (Worker25_QueryProcessorQueue210) TEIID30020 Processing exception for request DxtW2q3jc3PJ.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:18:35,955 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:18:35,955 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:18:35,958 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 3ms
23:18:35,959 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
23:18:35,976 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:18 PM
23:18:35,978 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:18 PM
23:18:35,986 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 1) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:18:35,986 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:18:35,986 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
23:18:36,064 INFO  [org.jboss.as.server] (management-handler-thread - 110) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
23:18:36,641 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource}]" undeployed.
23:18:36,643 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb) in 3ms
23:18:36,644 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
23:18:36,662 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 11:18 PM
23:18:36,664 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 11:18 PM
23:18:36,671 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 is set to ACTIVE
23:18:36,749 INFO  [org.jboss.as.server] (management-handler-thread - 108) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb"
23:18:37,359 INFO  [org.jboss.as.repository] (management-handler-thread - 111) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/b2/e10903d40a6c264eb1604608db312e7467908a/content
23:18:37,362 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
23:18:37,363 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:18:37,378 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:18:37,486 INFO  [org.jboss.as.server] (management-handler-thread - 111) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:18:37,487 INFO  [org.jboss.as.repository] (management-handler-thread - 111) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/1c/f0bb70de579a3028da0f846f84a04ae851e391/content
23:18:38,590 INFO  [org.teiid.PLANNER] (Worker27_QueryProcessorQueue211) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:18:38,595 WARN  [org.teiid.CONNECTOR] (Worker28_QueryProcessorQueue212) Connector worker process failed for atomic-request=kQ1q82OwX+WS.0.3.51: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:18:38,597 WARN  [org.teiid.PROCESSOR] (Worker27_QueryProcessorQueue213) TEIID30020 Processing exception for request kQ1q82OwX+WS.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:29:29,673 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:29:29,675 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:29:29,678 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 5ms
23:29:29,679 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
23:29:29,701 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:29 PM
23:29:29,702 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:29 PM
23:29:29,710 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 4) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:29:29,710 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:29:29,710 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
23:29:29,791 INFO  [org.jboss.as.server] (management-handler-thread - 114) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
23:29:30,369 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 2ms
23:29:30,370 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:29:30,384 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:29:30,461 INFO  [org.jboss.as.server] (management-handler-thread - 112) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:29:30,993 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:29:30,996 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 4ms
23:29:31,096 INFO  [org.jboss.as.repository] (management-handler-thread - 115) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/b2/e10903d40a6c264eb1604608db312e7467908a/content
23:29:31,096 INFO  [org.jboss.as.server] (management-handler-thread - 115) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:29:31,147 INFO  [org.jboss.as.repository] (management-handler-thread - 112) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/6a/a4ea3b0639ee8bd85ad26ffdb43d059d1d5005/content
23:29:31,148 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:29:31,163 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:29:31,248 INFO  [org.jboss.as.server] (management-handler-thread - 112) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:29:32,570 INFO  [org.teiid.PLANNER] (Worker29_QueryProcessorQueue214) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:29:32,574 WARN  [org.teiid.CONNECTOR] (Worker30_QueryProcessorQueue215) Connector worker process failed for atomic-request=8TXOTZyNTK9F.0.3.52: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:29:32,577 WARN  [org.teiid.PROCESSOR] (Worker29_QueryProcessorQueue216) TEIID30020 Processing exception for request 8TXOTZyNTK9F.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:34:23,012 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:34:23,012 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:34:23,014 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 4ms
23:34:23,015 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
23:34:23,033 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:34 PM
23:34:23,035 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:34 PM
23:34:23,045 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:34:23,046 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:34:23,047 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1 is set to ACTIVE
23:34:23,119 INFO  [org.jboss.as.server] (management-handler-thread - 118) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb"
23:34:23,646 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:34:23,647 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:34:23,688 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource}]" undeployed.
23:34:23,689 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb) in 2ms
23:34:23,690 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
23:34:23,706 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 11:34 PM
23:34:23,708 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 11:34 PM
23:34:23,715 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1 is set to ACTIVE
23:34:23,779 INFO  [org.jboss.as.server] (management-handler-thread - 119) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb"
23:34:24,380 INFO  [org.jboss.as.repository] (management-handler-thread - 116) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/e7/389a0b59ebccf4e8371a0e5d9bfa1b8500e675/content
23:34:24,384 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 2ms
23:34:24,385 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:34:24,401 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:34:24,474 INFO  [org.jboss.as.server] (management-handler-thread - 116) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:34:24,474 INFO  [org.jboss.as.repository] (management-handler-thread - 116) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/6a/a4ea3b0639ee8bd85ad26ffdb43d059d1d5005/content
23:34:25,479 INFO  [org.teiid.PLANNER] (Worker31_QueryProcessorQueue217) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:34:25,484 WARN  [org.teiid.CONNECTOR] (Worker32_QueryProcessorQueue218) Connector worker process failed for atomic-request=QsuPlE/g5fmv.0.3.53: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:34:25,487 WARN  [org.teiid.PROCESSOR] (Worker31_QueryProcessorQueue219) TEIID30020 Processing exception for request QsuPlE/g5fmv.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:35:20,905 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:35:20,909 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:35:20,912 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb) in 7ms
23:35:21,040 INFO  [org.jboss.as.repository] (management-handler-thread - 116) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/0e/e0e8a570ec94bee71ece3b9c6326d8dba48b00/content
23:35:21,040 INFO  [org.jboss.as.server] (management-handler-thread - 116) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsView.vdb")
23:35:21,046 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource}]" undeployed.
23:35:21,050 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb) in 4ms
23:35:21,167 INFO  [org.jboss.as.repository] (management-handler-thread - 119) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/f2/fa1a4fd345dac17290a4dca6eacb632d20e90e/content
23:35:21,167 INFO  [org.jboss.as.server] (management-handler-thread - 119) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource.vdb")
23:35:21,271 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-8) JBAS010410: Unbound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_expenseReportsSource]
23:35:49,275 WARN  [org.teiid.SECURITY] (New I/O worker #5) TEIID40011 Processing exception 'TEIID40042 Invalid Session nRxaC6Bg1V3R. Session may have already been terminated.' for session nRxaC6Bg1V3R.  Exception type org.teiid.client.security.InvalidSessionException thrown from org.teiid.services.SessionServiceImpl.getSessionInfo(SessionServiceImpl.java:355). Enable more detailed logging to see the entire stacktrace.
23:35:49,275 WARN  [org.teiid.SECURITY] (New I/O worker #7) TEIID40011 Processing exception 'TEIID40042 Invalid Session +hTYF2RMNIIo. Session may have already been terminated.' for session +hTYF2RMNIIo.  Exception type org.teiid.client.security.InvalidSessionException thrown from org.teiid.services.SessionServiceImpl.getSessionInfo(SessionServiceImpl.java:355). Enable more detailed logging to see the entire stacktrace.
23:39:27,451 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:39:27,453 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:39:27,480 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:39:27,714 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:39:27,715 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-8) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource
23:39:27,716 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:39:27,716 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-3) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource]
23:43:03,536 INFO  [org.jboss.as.repository] (management-handler-thread - 125) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/4c/b5c37d4e9fe4864fb347ed3f7793e98cc22496/content
23:43:03,537 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:43:03,554 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:43 PM
23:43:03,556 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:43 PM
23:43:03,561 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 2) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:43:03,562 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:43:03,562 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is set to ACTIVE
23:43:03,638 INFO  [org.jboss.as.server] (management-handler-thread - 125) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:43:04,224 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 2ms
23:43:04,225 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:43:04,307 INFO  [org.jboss.as.server] (management-handler-thread - 126) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:43:05,384 INFO  [org.jboss.as.repository] (management-handler-thread - 128) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/d4/47a1b88f98b2b471baef6a390fc17d2632503f/content
23:43:05,385 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb")
23:43:05,404 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 model "expenseReportssource" metadata is currently being loaded. Start Time: 9/3/13 11:43 PM
23:43:05,406 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 model "expenseReportssource" metadata loaded. End Time: 9/3/13 11:43 PM
23:43:05,414 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 is set to ACTIVE
23:43:05,477 INFO  [org.jboss.as.server] (management-handler-thread - 128) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb")
23:43:06,007 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
23:43:06,104 INFO  [org.jboss.as.repository] (management-handler-thread - 126) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/e7/389a0b59ebccf4e8371a0e5d9bfa1b8500e675/content
23:43:06,105 INFO  [org.jboss.as.server] (management-handler-thread - 126) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:43:06,164 INFO  [org.jboss.as.repository] (management-handler-thread - 128) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/02/721f39064106cf02d52095d5a7b974e4851354/content
23:43:06,165 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:43:06,180 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:43:06,249 INFO  [org.jboss.as.server] (management-handler-thread - 128) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:43:06,811 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:43:06,814 WARN  [org.teiid.SECURITY] (New I/O worker #5) TEIID40011 Processing exception 'TEIID40042 Invalid Session nRxaC6Bg1V3R. Session may have already been terminated.' for session nRxaC6Bg1V3R.  Exception type org.teiid.client.security.InvalidSessionException thrown from org.teiid.services.SessionServiceImpl.getSessionInfo(SessionServiceImpl.java:355). Enable more detailed logging to see the entire stacktrace.
23:43:08,115 INFO  [org.teiid.PLANNER] (Worker33_QueryProcessorQueue220) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file, f.filePath=expenseReportssource.getTextFiles.filePath}})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
            Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file, f.filePath=expenseReportssource.getTextFiles.filePath}})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
            Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b})
              Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
            Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
              Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file], EST_COL_STATS={expenseReportssource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportssource.getTextFiles.file]
      AccessNode(3) output=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath] EXEC expenseReportssource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportssource.getTextFiles.file]
      AccessNode(3) output=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath] EXEC expenseReportssource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:44:47,512 INFO  [org.teiid.PLANNER] (Worker33_QueryProcessorQueue224) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:44:47,514 WARN  [org.teiid.CONNECTOR] (Worker34_QueryProcessorQueue225) Connector worker process failed for atomic-request=8laAv+ZaeEAD.0.3.55: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:44:47,517 WARN  [org.teiid.PROCESSOR] (Worker33_QueryProcessorQueue226) TEIID30020 Processing exception for request 8laAv+ZaeEAD.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:47:28,831 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:47:28,831 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:47:28,839 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb) in 8ms
23:47:28,839 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:47:28,860 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:47 PM
23:47:28,863 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:47 PM
23:47:28,870 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:47:28,870 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:47:28,871 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is set to ACTIVE
23:47:28,940 INFO  [org.jboss.as.server] (management-handler-thread - 131) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb"
23:47:29,551 INFO  [org.jboss.as.repository] (management-handler-thread - 129) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ad/cf137efec17b798dba18f056bca63b73331786/content
23:47:29,555 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
23:47:29,556 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:47:29,574 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:47:29,653 INFO  [org.jboss.as.server] (management-handler-thread - 129) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:47:29,653 INFO  [org.jboss.as.repository] (management-handler-thread - 129) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/02/721f39064106cf02d52095d5a7b974e4851354/content
23:47:30,808 INFO  [org.teiid.PLANNER] (Worker35_QueryProcessorQueue227) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file, f.filePath=expenseReportssource.getTextFiles.filePath}})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
            Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file, f.filePath=expenseReportssource.getTextFiles.filePath}})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
            Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b})
              Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
            Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
              Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file], EST_COL_STATS={expenseReportssource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportssource.getTextFiles.file]
      AccessNode(3) output=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath] EXEC expenseReportssource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportssource.getTextFiles.file]
      AccessNode(3) output=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath] EXEC expenseReportssource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:48:50,047 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "db2" removed
23:48:50,049 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "ldap" removed
23:48:50,050 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "ExpensesVDB.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}, expenseReportsView{}]" undeployed.
23:48:50,055 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "hsql" removed
23:48:50,053 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID40012 For PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 VDB, Data Source "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource" not found.
23:48:50,053 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "teradata" removed
23:48:50,051 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "infinispan-cache" removed
23:48:50,051 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "modeshape" removed
23:48:50,051 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "mysql5" removed
23:48:50,051 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50010 Translator "map-cache" removed
23:48:50,077 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "intersystems-cache" removed
23:48:50,082 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "derby" removed
23:48:50,077 INFO  [org.jboss.web] (ServerService Thread Pool -- 63) JBAS018224: Unregister web context: /odata
23:48:50,086 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) JBAS010409: Unbound data source [java:jboss/datasources/ExampleDS]
23:48:50,074 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "ingres93" removed
23:48:50,071 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1[expenseReportssource{expenseReportssource=expenseReportssource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource}]" undeployed.
23:48:50,069 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:48:50,067 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "h2" removed
23:48:50,061 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:48:50,059 INFO  [org.apache.coyote.http11] (MSC service thread 1-4) JBWEB003075: Coyote HTTP/1.1 pausing on: http-localhost/127.0.0.1:8080
23:48:50,131 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "jdbc-simple" removed
23:48:50,128 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "access" removed
23:48:50,123 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "mysql" removed
23:48:50,114 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "odata" removed
23:48:50,095 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "mongodb" removed
23:48:50,079 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50039 Teiid JDBC - Name = jdbc, Host = localhost,  Port = 31000 has been shutdown.
23:48:50,153 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50040 Teiid ODBC - Name = localhost, Host = 35432,  Port = {2} has been shutdown.
23:48:50,150 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010409: Unbound data source [java:/datasources/ModeShapeDS]
23:48:50,148 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "loopback" removed
23:48:50,145 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "salesforce" removed
23:48:50,142 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "ingres" removed
23:48:50,141 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "oracle" removed
23:48:50,140 INFO  [org.apache.coyote.http11] (MSC service thread 1-4) JBWEB003077: Coyote HTTP/1.1 stopping on : http-localhost/127.0.0.1:8080
23:48:50,177 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50010 Translator "informix" removed
23:48:50,175 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "google-spreadsheet" removed
23:48:50,172 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "metamatrix" removed
23:48:50,170 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50010 Translator "sqlserver" removed
23:48:50,168 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010409: Unbound data source [java:/expensesDS]
23:48:50,163 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "netezza" removed
23:48:50,160 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50010 Translator "sybase" removed
23:48:50,200 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "postgresql" removed
23:48:50,199 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50010 Translator "teiid" removed
23:48:50,187 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50010 Translator "ws" removed
23:48:50,190 INFO  [org.apache.catalina.core] (MSC service thread 1-5) JBWEB001079: Container org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/] has not been started
23:48:50,185 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50010 Translator "jdbc-ansi" removed
23:48:50,184 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50010 Translator "olap" removed
23:48:50,182 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-8) JBAS010409: Unbound data source [java:/ExpensesDS]
23:48:50,222 INFO  [org.jboss.web] (ServerService Thread Pool -- 65) JBAS018224: Unregister web context: /modeshape-rest
23:48:50,222 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID50010 Translator "file" removed
23:48:50,257 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-1) JBAS010410: Unbound JCA ConnectionFactory [java:/expenseReportsSource]
23:48:50,221 INFO  [org.jboss.web] (ServerService Thread Pool -- 64) JBAS018224: Unregister web context: /dashbuilder
23:48:50,221 INFO  [org.jboss.web] (ServerService Thread Pool -- 63) JBAS018224: Unregister web context: /modeshape-webdav
23:48:50,203 INFO  [org.teiid.RUNTIME] (MSC service thread 1-3) TEIID50010 Translator "hive" removed
23:48:50,266 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50041 Teiid Embedded transport disabled. Local Connections will fail. UnBound : teiid/queryengine/embedded
23:48:50,261 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-1) JBAS010410: Unbound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource]
23:48:50,288 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50041 Teiid Embedded transport disabled. Local Connections will fail. UnBound : teiid/queryengine/odata
23:48:50,314 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50002 Teiid Engine stopped Tue Sep 03 23:48:50 EDT 2013
23:48:50,328 INFO  [org.jboss.as.clustering.infinispan] (MSC service thread 1-7) JBAS010282: Stopped resultset-repl cache from teiid-cache container
23:48:50,331 WARN  [org.infinispan.jmx.CacheJmxRegistration] (MSC service thread 1-8) ISPN000032: Problems un-registering MBeans: org.infinispan.CacheException: Failure while unregistering mbeans
	at org.infinispan.jmx.ComponentsJmxRegistration.unregisterMBeans(ComponentsJmxRegistration.java:105)
	at org.infinispan.jmx.AbstractJmxRegistration.unregisterMBeans(AbstractJmxRegistration.java:70)
	at org.infinispan.jmx.CacheJmxRegistration.stop(CacheJmxRegistration.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_25]
	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_25]
	at org.infinispan.util.ReflectionUtil.invokeAccessibly(ReflectionUtil.java:203)
	at org.infinispan.factories.AbstractComponentRegistry$PrioritizedMethod.invoke(AbstractComponentRegistry.java:886)
	at org.infinispan.factories.AbstractComponentRegistry.internalStop(AbstractComponentRegistry.java:693)
	at org.infinispan.factories.AbstractComponentRegistry.stop(AbstractComponentRegistry.java:571)
	at org.infinispan.factories.ComponentRegistry.stop(ComponentRegistry.java:242)
	at org.infinispan.CacheImpl.stop(CacheImpl.java:604)
	at org.infinispan.CacheImpl.stop(CacheImpl.java:599)
	at org.infinispan.AbstractDelegatingCache.stop(AbstractDelegatingCache.java:348)
	at org.jboss.as.clustering.infinispan.subsystem.CacheService.stop(CacheService.java:96)
	at org.jboss.as.clustering.msc.AsynchronousService.stop(AsynchronousService.java:114) [jboss-as-clustering-common-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]
	at org.jboss.msc.service.ServiceControllerImpl$StopTask.stopService(ServiceControllerImpl.java:1911) [jboss-msc-1.0.4.GA-redhat-1.jar:1.0.4.GA-redhat-1]
	at org.jboss.msc.service.ServiceControllerImpl$StopTask.run(ServiceControllerImpl.java:1874) [jboss-msc-1.0.4.GA-redhat-1.jar:1.0.4.GA-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]
Caused by: javax.management.InstanceNotFoundException: jboss.infinispan:type=Cache,name="resultset(local)",manager="teiid-cache",component=Activation
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095) [rt.jar:1.7.0_25]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427) [rt.jar:1.7.0_25]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415) [rt.jar:1.7.0_25]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546) [rt.jar:1.7.0_25]
	at org.jboss.as.jmx.PluggableMBeanServerImpl$TcclMBeanServer.unregisterMBean(PluggableMBeanServerImpl.java:613)
	at org.jboss.as.jmx.PluggableMBeanServerImpl.unregisterMBean(PluggableMBeanServerImpl.java:360)
	at org.infinispan.jmx.JmxUtil.unregisterMBean(JmxUtil.java:112)
	at org.infinispan.jmx.ComponentsJmxRegistration.unregisterMBeans(ComponentsJmxRegistration.java:101)
	... 21 more

23:48:50,386 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb) in 332ms
23:48:50,485 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 436ms
23:48:50,485 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 440ms
23:48:50,332 INFO  [org.jboss.as.clustering.infinispan] (MSC service thread 1-3) JBAS010282: Stopped preparedplan cache from teiid-cache container
23:48:50,333 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment teiid-odata-8.4.1-redhat-1.war (runtime-name: teiid-odata-8.4.1-redhat-1.war) in 285ms
23:48:50,385 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb) in 336ms
23:48:50,623 INFO  [org.jboss.as.clustering.infinispan] (MSC service thread 1-8) JBAS010282: Stopped resultset cache from teiid-cache container
23:48:50,674 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-3) JBAS010409: Unbound data source [java:jboss/datasources/DashboardDS]
23:48:50,683 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015877: Stopped deployment modeshape-webdav.war (runtime-name: modeshape-webdav.war) in 630ms
23:48:50,680 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment modeshape-rest.war (runtime-name: modeshape-rest.war) in 634ms
23:48:50,691 INFO  [org.jboss.weld.deployer] (MSC service thread 1-6) JBAS016009: Stopping weld service for deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
23:48:50,942 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war (runtime-name: teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war) in 893ms
23:48:50,986 INFO  [org.jboss.as] (MSC service thread 1-6) JBAS015950: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) stopped in 913ms
23:51:27,404 INFO  [org.jboss.modules] (main) JBoss Modules version 1.2.0.Final-redhat-1
23:51:27,563 INFO  [org.jboss.msc] (main) JBoss MSC version 1.0.4.GA-redhat-1
23:51:27,629 INFO  [org.jboss.as] (MSC service thread 1-7) JBAS015899: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) starting
23:51:27,635 DEBUG [org.jboss.as.config] (MSC service thread 1-7) Configured system properties:
	awt.toolkit = sun.awt.X11.XToolkit
	file.encoding = UTF-8
	file.encoding.pkg = sun.io
	file.separator = /
	java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
	java.awt.headless = true
	java.awt.printerjob = sun.print.PSPrinterJob
	java.class.path = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/jboss-modules.jar
	java.class.version = 51.0
	java.endorsed.dirs = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/endorsed
	java.ext.dirs = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/ext:/usr/java/packages/lib/ext
	java.home = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre
	java.io.tmpdir = /tmp
	java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
	java.net.preferIPv4Stack = true
	java.runtime.name = OpenJDK Runtime Environment
	java.runtime.version = 1.7.0_25-mockbuild_2013_08_20_17_46-b00
	java.specification.name = Java Platform API Specification
	java.specification.vendor = Oracle Corporation
	java.specification.version = 1.7
	java.util.logging.manager = org.jboss.logmanager.LogManager
	java.vendor = Oracle Corporation
	java.vendor.url = http://java.oracle.com/
	java.vendor.url.bug = http://bugreport.sun.com/bugreport/
	java.version = 1.7.0_25
	java.vm.info = mixed mode
	java.vm.name = OpenJDK 64-Bit Server VM
	java.vm.specification.name = Java Virtual Machine Specification
	java.vm.specification.vendor = Oracle Corporation
	java.vm.specification.version = 1.7
	java.vm.vendor = Oracle Corporation
	java.vm.version = 23.7-b01
	javax.management.builder.initial = org.jboss.as.jmx.PluggableMBeanServerBuilder
	javax.xml.datatype.DatatypeFactory = __redirected.__DatatypeFactory
	javax.xml.parsers.DocumentBuilderFactory = __redirected.__DocumentBuilderFactory
	javax.xml.parsers.SAXParserFactory = __redirected.__SAXParserFactory
	javax.xml.stream.XMLEventFactory = __redirected.__XMLEventFactory
	javax.xml.stream.XMLInputFactory = __redirected.__XMLInputFactory
	javax.xml.stream.XMLOutputFactory = __redirected.__XMLOutputFactory
	javax.xml.transform.TransformerFactory = __redirected.__TransformerFactory
	javax.xml.validation.SchemaFactory:http://www.w3.org/2001/XMLSchema = __redirected.__SchemaFactory
	javax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom = __redirected.__XPathFactory
	jboss.bind.address = localhost
	jboss.home.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1
	jboss.host.name = localhost
	jboss.modules.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules
	jboss.modules.system.pkgs = org.jboss.byteman
	jboss.node.name = localhost
	jboss.qualified.host.name = localhost
	jboss.server.base.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone
	jboss.server.config.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration
	jboss.server.data.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data
	jboss.server.deploy.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content
	jboss.server.log.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log
	jboss.server.name = localhost
	jboss.server.persist.config = true
	jboss.server.temp.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp
	line.separator = 

	logging.configuration = file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration/logging.properties
	module.path = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules
	org.jboss.boot.log.file = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log/boot.log
	org.jboss.logmanager.nocolor = true
	org.jboss.resolver.warning = true
	org.xml.sax.driver = __redirected.__XMLReaderFactory
	os.arch = amd64
	os.name = Linux
	os.version = 3.10.9-200.fc19.x86_64
	path.separator = :
	program.name = JBossTools: JBoss EAP 6.1 DV-BI Server
	sun.arch.data.model = 64
	sun.boot.class.path = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/netx.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/plugin.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/classes
	sun.boot.library.path = /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25-2.3.12.4.fc19.x86_64/jre/lib/amd64
	sun.cpu.endian = little
	sun.cpu.isalist = 
	sun.io.unicode.encoding = UnicodeLittle
	sun.java.command = org.jboss.modules.Main -mp /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -b localhost --server-config=standalone.xml
	sun.java.launcher = SUN_STANDARD
	sun.jnu.encoding = UTF-8
	sun.management.compiler = HotSpot 64-Bit Tiered Compilers
	sun.os.patch.level = unknown
	sun.rmi.dgc.client.gcInterval = 3600000
	sun.rmi.dgc.server.gcInterval = 3600000
	user.country = US
	user.dir = /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/bin
	user.home = /home/kpeeples
	user.language = en
	user.name = kpeeples
	user.timezone = America/New_York
23:51:27,638 DEBUG [org.jboss.as.config] (MSC service thread 1-7) VM Arguments: -Dprogram.name=JBossTools: JBoss EAP 6.1 DV-BI Server -Xms1303m -Xmx1303m -XX:MaxPermSize=256m -Dorg.jboss.resolver.warning=true -Djava.net.preferIPv4Stack=true -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -Dorg.jboss.boot.log.file=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/log/boot.log -Dlogging.configuration=file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/configuration/logging.properties -Djboss.home.dir=/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1 -Dorg.jboss.logmanager.nocolor=true -Dfile.encoding=UTF-8 
23:51:28,635 INFO  [org.xnio] (MSC service thread 1-1) XNIO Version 3.0.7.GA-redhat-1
23:51:28,637 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS015888: Creating http management service using socket-binding (management-http)
23:51:28,640 INFO  [org.xnio.nio] (MSC service thread 1-1) XNIO NIO Implementation Version 3.0.7.GA-redhat-1
23:51:28,646 INFO  [org.jboss.remoting] (MSC service thread 1-1) JBoss Remoting version 3.2.16.GA-redhat-1
23:51:28,673 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 31) JBAS010280: Activating Infinispan subsystem.
23:51:28,696 INFO  [org.jboss.as.jsf] (ServerService Thread Pool -- 37) JBAS012605: Activated the following JSF Implementations: [main, 1.2]
23:51:28,718 INFO  [org.jboss.as.security] (ServerService Thread Pool -- 44) JBAS013171: Activating Security Subsystem
23:51:28,735 INFO  [org.jboss.as.connector.logging] (MSC service thread 1-3) JBAS010408: Starting JCA Subsystem (IronJacamar 1.0.17.Final-redhat-1)
23:51:28,739 INFO  [org.jboss.as.naming] (ServerService Thread Pool -- 39) JBAS011800: Activating Naming Subsystem
23:51:28,748 INFO  [org.jboss.as.security] (MSC service thread 1-5) JBAS013170: Current PicketBox version=4.0.17.Final-redhat-1
23:51:28,759 INFO  [org.jboss.as.webservices] (ServerService Thread Pool -- 48) JBAS015537: Activating WebServices Extension
23:51:28,807 INFO  [org.jboss.as.naming] (MSC service thread 1-7) JBAS011802: Starting Naming Service
23:51:28,817 INFO  [org.jboss.as.mail.extension] (MSC service thread 1-2) JBAS015400: Bound mail session [java:jboss/mail/Default]
23:51:28,879 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010403: Deploying JDBC-compliant driver class org.h2.Driver (version 1.3)
23:51:28,926 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.teiid.jdbc.TeiidDriver (version 8.4)
23:51:28,928 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.teiid.jdbc.TeiidDriver (version 8.4)
23:51:29,034 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 27) JBAS010404: Deploying non-JDBC-compliant driver class org.modeshape.jdbc.LocalJcrDriver (version 3.3)
23:51:29,057 INFO  [org.jboss.ws.common.management] (MSC service thread 1-4) JBWS022052: Starting JBoss Web Services - Stack CXF Server 4.1.3.Final-redhat-3
23:51:29,176 INFO  [org.apache.coyote.http11] (MSC service thread 1-8) JBWEB003001: Coyote HTTP/1.1 initializing on : http-localhost/127.0.0.1:8080
23:51:29,192 INFO  [org.apache.coyote.http11] (MSC service thread 1-8) JBWEB003000: Coyote HTTP/1.1 starting on: http-localhost/127.0.0.1:8080
23:51:29,390 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,390 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,390 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-5) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,392 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-4) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
23:51:29,392 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-6) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
23:51:29,393 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
23:51:29,422 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
23:51:29,424 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-5) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
23:51:29,426 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
23:51:29,436 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-4) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
23:51:29,437 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-6) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
23:51:29,437 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-3) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,441 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,444 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
23:51:29,445 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,449 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-5) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
23:51:29,451 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-6) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/ldap/main/./
23:51:29,452 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-2) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,451 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/webservice/main/./
23:51:29,457 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-4) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/google/main/./
23:51:29,459 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-4) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
23:51:29,457 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-5) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/salesforce/main/./
23:51:29,462 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-4) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/mongodb/main/./
23:51:29,462 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) JBAS010400: Bound data source [java:/expensesDS]
23:51:29,462 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-2) JBAS010400: Bound data source [java:/ExpensesDS]
23:51:29,462 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) JBAS010400: Bound data source [java:/datasources/ModeShapeDS]
23:51:29,463 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-6) JBAS010400: Bound data source [java:jboss/datasources/DashboardDS]
23:51:29,467 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-3) JBAS010406: Registered connection factory java:/expenseReportsSource
23:51:29,462 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-5) JBAS010400: Bound data source [java:jboss/datasources/ExampleDS]
23:51:29,467 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-8) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource
23:51:29,471 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-3) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,474 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-3) JBAS010401: Bound JCA ConnectionFactory [java:/expenseReportsSource]
23:51:29,475 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
23:51:29,472 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
23:51:29,477 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-2) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource]
23:51:29,478 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-7) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/infinispan/main/./
23:51:29,568 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "odata" with security-domain set to teiid-security
23:51:29,582 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "jdbc" with security-domain set to teiid-security
23:51:29,583 INFO  [org.teiid.SECURITY] (ServerService Thread Pool -- 50) TEIID50011 Security enabled for transport "odbc" with security-domain set to teiid-security
23:51:29,645 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "jdbc-simple" added.
23:51:29,653 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "jdbc-ansi" added.
23:51:29,692 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "access" added.
23:51:29,714 INFO  [org.infinispan.factories.GlobalComponentRegistry] (ServerService Thread Pool -- 52) ISPN000128: Infinispan version: Infinispan 'Delirium' 5.2.6.Final
23:51:29,754 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "db2" added.
23:51:29,756 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 54) ISPN000161: Using a batchMode transaction manager
23:51:29,757 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 53) ISPN000161: Using a batchMode transaction manager
23:51:29,766 INFO  [org.infinispan.factories.TransactionManagerFactory] (ServerService Thread Pool -- 52) ISPN000161: Using a batchMode transaction manager
23:51:29,816 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "derby" added.
23:51:29,907 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "h2" added.
23:51:29,922 INFO  [org.modeshape.jcr.JcrRepository] (MSC service thread 1-7) ModeShape version 3.3.1.GA-redhat-1
23:51:29,948 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 54) ISPN000031: MBeans were successfully registered to the platform MBean server.
23:51:29,950 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 52) ISPN000031: MBeans were successfully registered to the platform MBean server.
23:51:29,952 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 52) JBAS010281: Started preparedplan cache from teiid-cache container
23:51:29,955 INFO  [org.infinispan.jmx.CacheJmxRegistration] (ServerService Thread Pool -- 53) ISPN000031: MBeans were successfully registered to the platform MBean server.
23:51:29,956 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 53) JBAS010281: Started resultset-repl cache from teiid-cache container
23:51:29,957 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 54) JBAS010281: Started resultset cache from teiid-cache container
23:51:29,973 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "hsql" added.
23:51:30,054 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "informix" added.
23:51:30,076 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50001 Teiid Engine 8.4.1-redhat-1 Started = Tue Sep 03 23:51:30 EDT 2013
23:51:30,088 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50038 Teiid Embedded transport enabled. Bound to: teiid/queryengine/odata
23:51:30,095 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50038 Teiid Embedded transport enabled. Bound to: teiid/queryengine/embedded
23:51:30,137 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50012 Teiid JDBC - Name = jdbc, Host = localhost,  Port = 31000, SSL = OFF, security-domains = [teiid-security]
23:51:30,138 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50037 Teiid ODBC - Name = odbc, Host = localhost,  Port = 35432, SSL = OFF, security-domains = [teiid-security]
23:51:30,165 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "metamatrix" added.
23:51:30,249 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mysql" added.
23:51:30,336 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mysql5" added.
23:51:30,449 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "oracle" added.
23:51:30,530 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "postgresql" added.
23:51:30,661 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "sqlserver" added.
23:51:30,711 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "sybase" added.
23:51:30,750 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "teiid" added.
23:51:30,787 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "teradata" added.
23:51:30,796 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "modeshape" added.
23:51:30,802 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ingres" added.
23:51:30,809 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ingres93" added.
23:51:30,816 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "intersystems-cache" added.
23:51:30,827 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "netezza" added.
23:51:30,830 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "file" added.
23:51:30,834 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ldap" added.
23:51:30,839 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "loopback" added.
23:51:30,843 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "olap" added.
23:51:30,848 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "ws" added.
23:51:30,852 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "salesforce" added.
23:51:30,856 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "hive" added.
23:51:30,859 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "infinispan-cache" added.
23:51:30,861 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "map-cache" added.
23:51:30,864 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "google-spreadsheet" added.
23:51:30,871 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "odata" added.
23:51:30,876 INFO  [org.teiid.RUNTIME] (ServerService Thread Pool -- 50) TEIID50006 Teiid translator "mongodb" added.
23:51:30,896 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb")
23:51:30,896 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:51:30,898 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015876: Starting deployment of "modeshape-rest.war" (runtime-name: "modeshape-rest.war")
23:51:30,899 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "modeshape-webdav.war" (runtime-name: "modeshape-webdav.war")
23:51:30,899 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:51:30,899 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015876: Starting deployment of "teiid-odata-8.4.1-redhat-1.war" (runtime-name: "teiid-odata-8.4.1-redhat-1.war")
23:51:30,900 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
23:51:30,901 INFO  [org.jboss.as.remoting] (MSC service thread 1-2) JBAS017100: Listening on 127.0.0.1:4447
23:51:30,902 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" (runtime-name: "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war")
23:51:30,903 INFO  [org.jboss.as.remoting] (MSC service thread 1-3) JBAS017100: Listening on 127.0.0.1:9999
23:51:30,911 INFO  [org.jboss.as.server.deployment.scanner] (MSC service thread 1-7) JBAS015012: Started FileSystemDeploymentService for directory /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/deployments
23:51:31,510 INFO  [org.jboss.web] (ServerService Thread Pool -- 52) JBAS018210: Register web context: /odata
23:51:31,510 INFO  [org.jboss.web] (ServerService Thread Pool -- 53) JBAS018210: Register web context: /modeshape-webdav
23:51:31,512 INFO  [org.jboss.web] (ServerService Thread Pool -- 56) JBAS018210: Register web context: /modeshape-rest
23:51:31,860 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:51 PM
23:51:31,860 INFO  [org.hibernate.validator.internal.util.Version] (ServerService Thread Pool -- 52) HV000001: Hibernate Validator 4.3.1.Final-redhat-1
23:51:31,878 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 11:51 PM
23:51:31,882 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:51 PM
23:51:31,886 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 model "expenseReportssource" metadata is currently being loaded. Start Time: 9/3/13 11:51 PM
23:51:31,977 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 is set to ACTIVE
23:51:32,028 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 1) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:51:32,033 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:51:32,033 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is set to ACTIVE
23:51:32,040 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:51:32,073 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
23:51:32,110 INFO  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 52) Deploying javax.ws.rs.core.Application: class org.teiid.odata.TeiidODataApplication
23:51:32,115 INFO  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 56) Deploying javax.ws.rs.core.Application: class org.modeshape.web.jcr.rest.JcrApplication
23:51:32,131 WARN  [org.jboss.resteasy.spi.ResteasyDeployment] (ServerService Thread Pool -- 56) Application.getClasses() returned unknown class type: org.modeshape.web.jcr.rest.form.FileUploadForm
23:51:32,912 WARN  [org.jboss.as.dependency.unsupported] (MSC service thread 1-4) JBAS018568: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using an unsupported module ("org.jdom:main") which may be changed or removed in future versions without notice.
23:51:32,912 WARN  [org.jboss.as.dependency.unsupported] (MSC service thread 1-4) JBAS018568: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using an unsupported module ("org.jdom:main") which may be changed or removed in future versions without notice.
23:51:32,913 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.lang:main") which may be changed or removed in future versions without notice.
23:51:32,913 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.lang:main") which may be changed or removed in future versions without notice.
23:51:32,913 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.io:main") which may be changed or removed in future versions without notice.
23:51:32,913 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.io:main") which may be changed or removed in future versions without notice.
23:51:32,913 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.collections:main") which may be changed or removed in future versions without notice.
23:51:32,913 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.collections:main") which may be changed or removed in future versions without notice.
23:51:32,914 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.codec:main") which may be changed or removed in future versions without notice.
23:51:32,914 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.apache.commons.codec:main") which may be changed or removed in future versions without notice.
23:51:32,914 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.jboss.ironjacamar.jdbcadapters:main") which may be changed or removed in future versions without notice.
23:51:32,914 WARN  [org.jboss.as.dependency.private] (MSC service thread 1-4) JBAS018567: Deployment "deployment.teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" is using a private module ("org.jboss.ironjacamar.jdbcadapters:main") which may be changed or removed in future versions without notice.
23:51:32,973 INFO  [org.jboss.weld.deployer] (MSC service thread 1-3) JBAS016002: Processing weld deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
23:51:33,033 INFO  [org.jboss.weld.deployer] (MSC service thread 1-2) JBAS016005: Starting Services for CDI deployment: teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
23:51:33,083 INFO  [org.jboss.weld.Version] (MSC service thread 1-2) WELD-000900 1.1.13 (redhat)
23:51:33,111 INFO  [org.jboss.weld.deployer] (MSC service thread 1-5) JBAS016008: Starting weld service for deployment teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war
23:51:34,719 INFO  [org.jboss.web] (ServerService Thread Pool -- 58) JBAS018210: Register web context: /dashbuilder
23:51:34,734 INFO  [org.jboss.dashboard.ui.controller.ControllerServlet] (ServerService Thread Pool -- 58) Application Directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/.
23:51:34,734 INFO  [org.jboss.dashboard.ui.controller.ControllerServlet] (ServerService Thread Pool -- 58) Application Config Directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc
23:51:34,747 INFO  [org.jboss.dashboard.factory.Factory] (ServerService Thread Pool -- 58) Configuring Factory from directory: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/factory
23:51:34,793 INFO  [org.jboss.dashboard.factory.Factory] (ServerService Thread Pool -- 58) Factory configured.
23:51:34,941 INFO  [org.hibernate.annotations.common.Version] (ServerService Thread Pool -- 58) HCANN000001: Hibernate Commons Annotations {4.0.1.Final-redhat-2}
23:51:34,944 INFO  [org.hibernate.Version] (ServerService Thread Pool -- 58) HHH000412: Hibernate Core {4.2.0.Final-redhat-1}
23:51:34,946 INFO  [org.hibernate.cfg.Environment] (ServerService Thread Pool -- 58) HHH000206: hibernate.properties not found
23:51:34,947 INFO  [org.hibernate.cfg.Environment] (ServerService Thread Pool -- 58) HHH000021: Bytecode provider name : javassist
23:51:34,958 INFO  [org.hibernate.cfg.Configuration] (ServerService Thread Pool -- 58) HHH000042: Configuring from file: hibernate.cfg.xml
23:51:35,400 INFO  [org.hibernate.cfg.Configuration] (ServerService Thread Pool -- 58) HHH000041: Configured SessionFactory: null
23:51:37,792 INFO  [org.jboss.dashboard.database.hibernate.HibernateInitializer] (ServerService Thread Pool -- 58) The underlying database is: h2
23:51:38,178 INFO  [org.hibernate.dialect.Dialect] (ServerService Thread Pool -- 58) HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:51:38,181 WARN  [org.hibernate.dialect.H2Dialect] (ServerService Thread Pool -- 58) HHH000431: Unable to determine H2 database version, certain features may not work
23:51:38,191 INFO  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] (ServerService Thread Pool -- 58) HHH000399: Using default transaction strategy (direct JDBC transactions)
23:51:38,194 INFO  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] (ServerService Thread Pool -- 58) HHH000397: Using ASTQueryTranslatorFactory
23:51:39,153 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.LayoutsManagerImpl
23:51:39,195 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Default_Layout
23:51:39,196 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Default_template_with_sliding_menu
23:51:39,197 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_25-50-25
23:51:39,198 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_25-75
23:51:39,198 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Layout Template_75-25
23:51:39,231 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.SkinsManagerImpl
23:51:39,247 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Skin Default_Skin
23:51:39,250 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Skin Teiid_Skin
23:51:39,263 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Loading panels. Scanning dir: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/WEB-INF/etc/panels
23:51:39,264 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_workspace_horiz.panel
23:51:39,291 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_workspace_vert.panel
23:51:39,292 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_sections_horiz.panel
23:51:39,293 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_workspace.panel
23:51:39,294 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_language_horiz.panel
23:51:39,295 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_sections_vert.panel
23:51:39,297 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/navigator_sections.panel
23:51:39,298 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/logout/logout.panel
23:51:39,300 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/tree/treeMenu.panel
23:51:39,301 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/navigation/breadCrumb/breadCrumb.panel
23:51:39,303 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/dashboard/dashb_html_editor.panel
23:51:39,305 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/dashboard/dashb_kpi.panel
23:51:39,308 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/dashboard/dashb_providermgr.panel
23:51:39,309 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/dashboard/dashb_filter.panel
23:51:39,310 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/system/workspaceExport/workspaceImportexport.panel
23:51:39,311 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/system/dataSourceManagement/DataSourceManager.panel
23:51:39,314 INFO  [org.jboss.dashboard.workspace.PanelsProvidersManagerImpl] (ServerService Thread Pool -- 58) Reading file: /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/tmp/vfs/temp4f35b04146b152a5/teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war-8a2b240adb7b165/./WEB-INF/etc/panels/system/dashboardExport/dashb_export.panel
23:51:39,446 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.EnvelopesManagerImpl
23:51:39,462 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Envelope Default_Envelope
23:51:39,464 INFO  [org.jboss.dashboard.ui.resources.GraphicElement] (ServerService Thread Pool -- 58) Deploying files for org.jboss.dashboard.ui.resources.Envelope Teiid_Envelope
23:51:39,477 INFO  [org.jboss.dashboard.workspace.GraphicElementManagerImpl] (ServerService Thread Pool -- 58) Starting org.jboss.dashboard.workspace.ResourceGalleryManagerImpl
23:51:39,520 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:51:39,521 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb")
23:51:39,521 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:51:39,521 INFO  [org.jboss.as.server] (Controller Boot Thread) JBAS018559: Deployed "ExpensesVDB.vdb" (runtime-name : "ExpensesVDB.vdb")
23:51:39,522 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 28) JBAS018559: Deployed "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war" (runtime-name : "teiid-dashboard-distribution-builder-1.0.0-redhat-1-jboss-as7.war")
23:51:39,523 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 50) JBAS018559: Deployed "teiid-odata-8.4.1-redhat-1.war" (runtime-name : "teiid-odata-8.4.1-redhat-1.war")
23:51:39,523 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 51) JBAS018559: Deployed "modeshape-webdav.war" (runtime-name : "modeshape-webdav.war")
23:51:39,523 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 51) JBAS018559: Deployed "modeshape-rest.war" (runtime-name : "modeshape-rest.war")
23:51:39,615 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015961: Http management interface listening on http://127.0.0.1:9990/management
23:51:39,615 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015951: Admin console listening on http://127.0.0.1:9990
23:51:39,616 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015874: JBoss Teiid + Teiid 8.4 (AS 7.2.0.Final-redhat-8) started in 12572ms - Started 722 of 828 services (101 services are passive or on-demand)
23:52:14,355 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "ExpensesVDB.1[expenseReportsSource{expenseReportsSource=expenseReportsSource, file, expenseReportsSource}, expenseReportsView{}]" undeployed.
23:52:14,364 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment ExpensesVDB.vdb (runtime-name: ExpensesVDB.vdb) in 12ms
23:52:14,366 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "ExpensesVDB.vdb" (runtime-name: "ExpensesVDB.vdb")
23:52:14,408 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/3/13 11:52 PM
23:52:14,409 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB ExpensesVDB.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:52 PM
23:52:14,425 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsSource" metadata loaded. End Time: 9/3/13 11:52 PM
23:52:14,425 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB ExpensesVDB.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:52 PM
23:52:14,461 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB ExpensesVDB.1 is set to ACTIVE
23:52:14,651 INFO  [org.jboss.as.server] (management-handler-thread - 1) JBAS018565: Replaced deployment "ExpensesVDB.vdb" with deployment "ExpensesVDB.vdb"
23:53:05,819 WARN  [org.teiid.PROCESSOR] (Worker0_QueryProcessorQueue0) TEIID30020 Processing exception for request 2MRufnNNCRZp.0 'Group does not exist: expensesReportsViewTable'. Originally QueryResolverException ResolverUtil.java:814. Enable more detailed logging to see the entire stacktrace.
23:54:51,343 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:54:51,343 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:54:51,346 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb) in 4ms
23:54:51,347 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:54:51,373 INFO  [org.teiid.RUNTIME] (MSC service thread 1-7) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata is currently being loaded. Start Time: 9/3/13 11:54 PM
23:54:51,377 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 model "expenseReportsView" metadata loaded. End Time: 9/3/13 11:54 PM
23:54:51,398 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 1) TEIID31080 View expenseReportsView.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
23:54:51,399 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
23:54:51,399 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1 is set to ACTIVE
23:54:51,469 INFO  [org.jboss.as.server] (management-handler-thread - 7) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb"
23:54:52,058 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-8) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
23:54:52,059 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:54:52,075 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:54:52,146 INFO  [org.jboss.as.server] (management-handler-thread - 8) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:54:52,669 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:54:52,732 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1[expenseReportssource{expenseReportssource=expenseReportssource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource}]" undeployed.
23:54:52,732 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:54:52,734 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb) in 3ms
23:54:52,735 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-2) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb")
23:54:52,758 INFO  [org.teiid.RUNTIME] (MSC service thread 1-5) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 model "expenseReportssource" metadata is currently being loaded. Start Time: 9/3/13 11:54 PM
23:54:52,761 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 model "expenseReportssource" metadata loaded. End Time: 9/3/13 11:54 PM
23:54:52,773 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 2) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1 is set to ACTIVE
23:54:52,857 INFO  [org.jboss.as.server] (management-handler-thread - 7) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb"
23:54:53,450 INFO  [org.jboss.as.repository] (management-handler-thread - 5) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/1f/44461174beee1c1c3a86770675db82b8d6414f/content
23:54:53,454 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 2ms
23:54:53,455 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:54:53,473 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1 is set to ACTIVE
23:54:53,495 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:54:53,561 INFO  [org.jboss.as.server] (management-handler-thread - 5) JBAS018565: Replaced deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" with deployment "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb"
23:54:53,562 INFO  [org.jboss.as.repository] (management-handler-thread - 5) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/ad/cf137efec17b798dba18f056bca63b73331786/content
23:54:54,169 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
23:54:55,801 INFO  [org.teiid.PLANNER] (Worker0_QueryProcessorQueue1) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsView.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file, f.filePath=expenseReportssource.getTextFiles.filePath}})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
            Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file, f.filePath=expenseReportssource.getTextFiles.filePath}})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
            Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b})
              Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsView.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsView.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportssource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
            Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
              Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=null})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath]})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportssource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportssource.getTextFiles], props={PROJECT_COLS=[expenseReportssource.getTextFiles.file], OUTPUT_COLS=[expenseReportssource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportssource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportssource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportssource.getTextFiles.file], EST_COL_STATS={expenseReportssource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles])
          Source(groups=[expenseReportssource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportssource.getTextFiles])
        Access(groups=[expenseReportssource.getTextFiles], props={MODEL_ID=Schema name=expenseReportssource, nameInSource=null, uuid=mmuuid:1c1d760a-e2dd-4a43-a246-136ae517705b, OUTPUT_COLS=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportssource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportssource.getTextFiles.file]
      AccessNode(3) output=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath] EXEC expenseReportssource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportssource.getTextFiles.file]
      AccessNode(3) output=[expenseReportssource.getTextFiles.file, expenseReportssource.getTextFiles.filePath] EXEC expenseReportssource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:55:41,619 INFO  [org.teiid.PLANNER] (Worker0_QueryProcessorQueue5) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

23:55:41,622 WARN  [org.teiid.CONNECTOR] (Worker1_QueryProcessorQueue6) Connector worker process failed for atomic-request=5hS+sjEaYiAJ.0.3.1: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

23:55:41,626 WARN  [org.teiid.PROCESSOR] (Worker0_QueryProcessorQueue7) TEIID30020 Processing exception for request 5hS+sjEaYiAJ.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
23:59:22,718 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.1[expenseReportsView{}]" undeployed.
23:59:22,718 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.1[]" undeployed.
23:59:22,721 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb) in 4ms
23:59:22,856 INFO  [org.jboss.as.repository] (management-handler-thread - 12) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/4c/b5c37d4e9fe4864fb347ed3f7793e98cc22496/content
23:59:22,856 INFO  [org.jboss.as.server] (management-handler-thread - 12) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_views_expenseReportsView.vdb")
23:59:22,862 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb) in 3ms
23:59:22,942 INFO  [org.jboss.as.repository] (management-handler-thread - 9) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/1f/44461174beee1c1c3a86770675db82b8d6414f/content
23:59:22,942 INFO  [org.jboss.as.server] (management-handler-thread - 9) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_project.vdb")
23:59:22,945 INFO  [org.teiid.RUNTIME] (MSC service thread 1-8) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.1[expenseReportssource{expenseReportssource=expenseReportssource, file, PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource}]" undeployed.
23:59:22,948 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-3) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb) in 3ms
23:59:23,027 INFO  [org.jboss.as.repository] (management-handler-thread - 11) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/d4/47a1b88f98b2b471baef6a390fc17d2632503f/content
23:59:23,027 INFO  [org.jboss.as.server] (management-handler-thread - 11) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource.vdb")
23:59:23,141 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-3) JBAS010410: Unbound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_ExpensesModelProject_sources_expenseReportssource]
00:04:06,211 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-2) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
00:04:06,513 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
00:04:06,514 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-8) JBAS010406: Registered connection factory java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource
00:04:06,515 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/modules/system/layers/base/org/jboss/teiid/resource-adapter/file/main/./
00:04:06,515 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-2) JBAS010401: Bound JCA ConnectionFactory [java:/PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource]
00:05:51,255 INFO  [org.jboss.as.repository] (management-handler-thread - 20) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/2a/4ae36980b0154424e9d24d3e306bfc8e1814a0/content
00:05:51,256 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.vdb")
00:05:51,273 INFO  [org.teiid.RUNTIME] (MSC service thread 1-6) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.1 model "expenseReportsview" metadata is currently being loaded. Start Time: 9/4/13 12:05 AM
00:05:51,276 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.1 model "expenseReportsview" metadata loaded. End Time: 9/4/13 12:05 AM
00:05:51,290 WARN  [org.teiid.PLANNER.RESOLVER] (teiid-async-threads - 3) TEIID31080 View expenseReportsview.expenseReportsViewTable validation error: QueryResolverException-TEIID30352 EXPENSEREPORTSSOURCE.GETTEXTFILES does not exist.->QueryMetadataException
00:05:51,291 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40073 The metadata for the VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.1 is loaded, however it is not valid. Check models for errors. Correct the metadata and re-deploy.
00:05:51,291 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 3) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.1 is set to ACTIVE
00:05:51,356 INFO  [org.jboss.as.server] (management-handler-thread - 20) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsview.vdb")
00:05:51,887 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
00:05:51,940 INFO  [org.jboss.as.repository] (management-handler-thread - 21) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/c5/95e85fa4475449e3ba68560c698bf440de0fe2/content
00:05:51,941 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-4) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb")
00:05:51,959 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.1 is set to ACTIVE
00:05:52,050 INFO  [org.jboss.as.server] (management-handler-thread - 21) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb")
00:05:52,572 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
00:05:52,574 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
00:05:52,627 INFO  [org.jboss.as.repository] (management-handler-thread - 20) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/0d/8ef9eb1c0341fba65586e877b70aebcdc0d51c/content
00:05:52,628 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.vdb")
00:05:52,646 INFO  [org.teiid.RUNTIME] (MSC service thread 1-2) TEIID50029 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata is currently being loaded. Start Time: 9/4/13 12:05 AM
00:05:52,649 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID50030 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.1 model "expenseReportsSource" metadata loaded. End Time: 9/4/13 12:05 AM
00:05:52,659 INFO  [org.teiid.RUNTIME] (teiid-async-threads - 4) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.1 is set to ACTIVE
00:05:52,729 INFO  [org.jboss.as.server] (management-handler-thread - 20) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_expenseReportsSource.vdb")
00:05:53,287 INFO  [org.teiid.RUNTIME] (MSC service thread 1-4) TEIID50026 VDB "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.1[]" undeployed.
00:05:53,291 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb (runtime-name: PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb) in 4ms
00:05:53,388 INFO  [org.jboss.as.repository] (management-handler-thread - 19) JBAS014901: Content removed from location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/c5/95e85fa4475449e3ba68560c698bf440de0fe2/content
00:05:53,389 INFO  [org.jboss.as.server] (management-handler-thread - 19) JBAS018558: Undeployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb")
00:05:53,439 INFO  [org.jboss.as.repository] (management-handler-thread - 20) JBAS014900: Content added at location /home/kpeeples/mystuff/demos/DV-BI/jboss-eap-6.1/standalone/data/content/dc/d7f2257d2e4077a606179a4c8e242a1bdd7f99/content
00:05:53,440 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) JBAS015876: Starting deployment of "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb" (runtime-name: "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb")
00:05:53,456 INFO  [org.teiid.RUNTIME] (MSC service thread 1-1) TEIID40003 VDB PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.1 is set to ACTIVE
00:05:53,541 INFO  [org.jboss.as.server] (management-handler-thread - 20) JBAS018559: Deployed "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb" (runtime-name : "PREVIEW_d084fbf6-5b78-4d84-bf2f-7ac02cf80dd6_FlatFileModelProject_project.vdb")
00:05:54,109 ERROR [org.jboss.remoting.remote.connection] (Remoting "localhost:MANAGEMENT" read-1) JBREM000200: Remote connection failed: java.io.IOException: Connection reset by peer
00:05:55,409 INFO  [org.teiid.PLANNER] (Worker2_QueryProcessorQueue8) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsview.expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsview.expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsview.expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsview.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsview.expenseReportsViewTable.id, expenseReportsview.expenseReportsViewTable.office, expenseReportsview.expenseReportsViewTable.department, expenseReportsview.expenseReportsViewTable.author, expenseReportsview.expenseReportsViewTable."date", expenseReportsview.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsview.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsview.expenseReportsViewTable.id=A.id, expenseReportsview.expenseReportsViewTable.office=A.office, expenseReportsview.expenseReportsViewTable.department=A.department, expenseReportsview.expenseReportsViewTable.author=A.author, expenseReportsview.expenseReportsViewTable."date"=A."date", expenseReportsview.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsview.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsview.expenseReportsViewTable.id, expenseReportsview.expenseReportsViewTable.office, expenseReportsview.expenseReportsViewTable.department, expenseReportsview.expenseReportsViewTable.author, expenseReportsview.expenseReportsViewTable."date", expenseReportsview.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsview.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsview.expenseReportsViewTable.id=A.id, expenseReportsview.expenseReportsViewTable.office=A.office, expenseReportsview.expenseReportsViewTable.department=A.department, expenseReportsview.expenseReportsViewTable.author=A.author, expenseReportsview.expenseReportsViewTable."date"=A."date", expenseReportsview.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsview.expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsview.expenseReportsViewTable.id, expenseReportsview.expenseReportsViewTable.office, expenseReportsview.expenseReportsViewTable.department, expenseReportsview.expenseReportsViewTable.author, expenseReportsview.expenseReportsViewTable."date", expenseReportsview.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsview.expenseReportsViewTable.id, expenseReportsview.expenseReportsViewTable.office, expenseReportsview.expenseReportsViewTable.department, expenseReportsview.expenseReportsViewTable.author, expenseReportsview.expenseReportsViewTable."date", expenseReportsview.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsview.expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsview.expenseReportsViewTable.id=A.id, expenseReportsview.expenseReportsViewTable.office=A.office, expenseReportsview.expenseReportsViewTable.department=A.department, expenseReportsview.expenseReportsViewTable.author=A.author, expenseReportsview.expenseReportsViewTable."date"=A."date", expenseReportsview.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsview.expenseReportsViewTable.id, expenseReportsview.expenseReportsViewTable.office, expenseReportsview.expenseReportsViewTable.department, expenseReportsview.expenseReportsViewTable.author, expenseReportsview.expenseReportsViewTable."date", expenseReportsview.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsview.expenseReportsViewTable.id, expenseReportsview.expenseReportsViewTable.office, expenseReportsview.expenseReportsViewTable.department, expenseReportsview.expenseReportsViewTable.author, expenseReportsview.expenseReportsViewTable."date", expenseReportsview.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[file], EST_CARDINALITY=-1.0, EST_COL_STATS={file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(file COLUMNS id string, office string, department string, author string, "date" string, amount string DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={file=file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:a781f77e-3799-484b-94f7-799f9e9f30ea, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

00:07:18,825 INFO  [org.teiid.PLANNER] (Worker2_QueryProcessorQueue12) 
============================================================================
USER COMMAND:
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
OPTIMIZE: 
SELECT * FROM expenseReportsViewTable

----------------------------------------------------------------------------
GENERATE CANONICAL: 
SELECT * FROM expenseReportsViewTable

CANONICAL PLAN: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING PlaceAccess

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file, f.filePath=expenseReportsSource.getTextFiles.filePath}})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}})


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[expenseReportsViewTable], props={PROJECT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Source(groups=[expenseReportsViewTable], props={NESTED_COMMAND=SELECT A.id, A.office, A.department, A.author, A."date", A.amount FROM (EXEC expenseReportsSource.getTextFiles('expenseReports.csv')) AS f CROSS JOIN TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, SYMBOL_MAP={expenseReportsView.expenseReportsViewTable.id=A.id, expenseReportsView.expenseReportsViewTable.office=A.office, expenseReportsView.expenseReportsViewTable.department=A.department, expenseReportsView.expenseReportsViewTable.author=A.author, expenseReportsView.expenseReportsViewTable."date"=A."date", expenseReportsView.expenseReportsViewTable.amount=A.amount}, OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
    Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
      Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
        Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
          Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
            Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
              Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING MergeVirtual

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[expenseReportsView.expenseReportsViewTable.id, expenseReportsView.expenseReportsViewTable.office, expenseReportsView.expenseReportsViewTable.department, expenseReportsView.expenseReportsViewTable.author, expenseReportsView.expenseReportsViewTable."date", expenseReportsView.expenseReportsViewTable.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A])


============================================================================
EXECUTING PushNonJoinCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING CopyCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CleanCriteria

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=null})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PlanJoins

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null})


============================================================================
EXECUTING PushSelectCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING RaiseAccess

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=null})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=null})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=null})
    Source(groups=[A])


============================================================================
EXECUTING ChooseJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING ChooseDependent
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=null}
LOW Relational Planner parent join is CROSS or FULL OUTER - Rejecting dependent join Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=null}

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=null, IS_COPIED=true})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING AssignOutputElements

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file]})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath]})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file]})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount]})


============================================================================
EXECUTING CalculateCost

AFTER: 
Project(groups=[A], props={PROJECT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_CARDINALITY=-1.0})
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_LOOP, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f], props={NESTED_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), SYMBOL_MAP={f.file=expenseReportsSource.getTextFiles.file}, OUTPUT_COLS=[f.file], EST_CARDINALITY=-1.0, EST_COL_STATS={f.file=[-1.0, -1.0]}})
      Project(groups=[expenseReportsSource.getTextFiles], props={PROJECT_COLS=[expenseReportsSource.getTextFiles.file], OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_CARDINALITY=-1.0})
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0})
          Source(groups=[expenseReportsSource.getTextFiles], props={VIRTUAL_COMMAND=EXEC expenseReportsSource.getTextFiles('expenseReports.csv'), OUTPUT_COLS=[expenseReportsSource.getTextFiles.file], EST_COL_STATS={expenseReportsSource.getTextFiles.file=[-1.0, -1.0]}, EST_CARDINALITY=-1.0})
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING ImplementJoinStrategy

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A], props={TABLE_FUNCTION=TEXTTABLE(f.file COLUMNS id string, office string, department string, author string, "date" string, amount bigdecimal DELIMITER ';' HEADER) AS A, CORRELATED_REFERENCES={f.file=f.file}, OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], EST_COL_STATS={A.id=[-1.0, -1.0], A.office=[-1.0, -1.0], A.department=[-1.0, -1.0], A.author=[-1.0, -1.0], ...}, EST_CARDINALITY=-1.0})


============================================================================
EXECUTING MergeCriteria

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING PlanSorts

AFTER: 
Project(groups=[A])
  Join(groups=[f, A], props={JOIN_TYPE=CROSS JOIN, JOIN_STRATEGY=NESTED_TABLE, JOIN_CRITERIA=[], OUTPUT_COLS=[A.id, A.office, A.department, A.author, A."date", A.amount], IS_COPIED=true, EST_CARDINALITY=-1.0})
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles])
          Source(groups=[expenseReportsSource.getTextFiles])
    Source(groups=[A])


============================================================================
EXECUTING CollapseSource

AFTER: 
Project(groups=[A])
  Join(groups=[f, A])
    Source(groups=[f])
      Project(groups=[expenseReportsSource.getTextFiles])
        Access(groups=[expenseReportsSource.getTextFiles], props={MODEL_ID=Schema name=expenseReportsSource, nameInSource=null, uuid=mmuuid:856edea6-7995-4fd3-ada6-f78fa2690d78, OUTPUT_COLS=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath], EST_CARDINALITY=-1.0, ATOMIC_REQUEST=EXEC expenseReportsSource.getTextFiles('expenseReports.csv')})
    Source(groups=[A])


============================================================================
CONVERTING PLAN TREE TO PROCESS TREE

PROCESS PLAN = 
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

----------------------------------------------------------------------------
OPTIMIZATION COMPLETE:
PROCESSOR PLAN:
ProjectNode(0) output=[A.id, A.office, A.department, A.author, A."date", A.amount] [A.id, A.office, A.department, A.author, A."date", A.amount]
  JoinNode(1) [NESTED TABLE JOIN] [CROSS JOIN] output=[A.id, A.office, A.department, A.author, A."date", A.amount]
    ProjectNode(2) output=[f.file] [expenseReportsSource.getTextFiles.file]
      AccessNode(3) output=[expenseReportsSource.getTextFiles.file, expenseReportsSource.getTextFiles.filePath] EXEC expenseReportsSource.getTextFiles('expenseReports.csv')
    TextTableNode(4) output=[A.id, A.office, A.department, A.author, A."date", A.amount] 

============================================================================

00:07:18,828 WARN  [org.teiid.CONNECTOR] (Worker3_QueryProcessorQueue13) Connector worker process failed for atomic-request=3fSdVfTMr1pA.0.3.3: org.teiid.translator.TranslatorException: File not found expenseReports.csv
	at org.teiid.translator.file.FileExecutionFactory$FileProcedureExecution.execute(FileExecutionFactory.java:91)
	at org.teiid.dqp.internal.datamgr.ConnectorWorkItem.execute(ConnectorWorkItem.java:254) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource.getResults(DataTierTupleSource.java:444) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:157) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DataTierTupleSource$1.call(DataTierTupleSource.java:154) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [rt.jar:1.7.0_25]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [rt.jar:1.7.0_25]
	at org.teiid.dqp.internal.process.FutureWork.run(FutureWork.java:58) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.DQPWorkContext.runInContext(DQPWorkContext.java:269) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$RunnableWrapper.run(ThreadReuseExecutor.java:119) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at org.teiid.dqp.internal.process.ThreadReuseExecutor$3.run(ThreadReuseExecutor.java:214) [teiid-engine-8.4.1-redhat-1.jar:8.4.1-redhat-1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_25]
	at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]

00:07:18,830 WARN  [org.teiid.PROCESSOR] (Worker2_QueryProcessorQueue14) TEIID30020 Processing exception for request 3fSdVfTMr1pA.0 'TEIID30504 expenseReportsSource: File not found expenseReports.csv'. Originally TeiidProcessingException FileExecutionFactory.java:91. Enable more detailed logging to see the entire stacktrace.
